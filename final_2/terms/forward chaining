{"batchcomplete":"","query":{"normalized":[{"from":"forward_chaining","to":"Forward chaining"}],"pages":{"568962":{"pageid":568962,"ns":0,"title":"Forward chaining","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{about|forward chaining inference engines|forward chaining as an instructional procedure|Chaining}}\n'''Forward chaining''' is one of the two main methods of reasoning when using an [[inference engine]] and can be described [[logically]] as repeated application of ''[[modus ponens]]''. Forward chaining is a popular implementation strategy for [[expert system]]s, [[business rules engine|business]] and [[Production system (computer science)|production rule systems]]. The opposite of forward chaining is [[backward chaining]].\n\nForward chaining starts with the available [[data]] and uses inference rules to extract more data (from an end user, for example) until a [[goal]] is reached. An [[inference engine]] using forward chaining searches the inference rules until it finds one where the [[antecedent (logic)|antecedent]] ('''If''' clause) is known to be true. When such a rule is found, the engine can conclude, or infer, the [[consequent]] ('''Then''' clause), resulting in the addition of new [[information]] to its data.<ref>{{cite book|last=Feigenbaum|first=Edward|title=The Rise of the Expert Company|year=1988|publisher=Times Books|isbn=0-8129-1731-6|page=318}}</ref>  \n \nInference engines will [[Iteration#Computing|iterate]] through this process until a goal is reached.\n\nFor example, suppose that the goal is to conclude the color of a pet named Fritz, given that he croaks and eats flies, and that the [[rule base]] contains the following four rules:\n\n# '''If''' X croaks and X eats flies - '''Then''' X is a frog\n# '''If''' X chirps and X sings - '''Then''' X is a canary\n# '''If''' X is a frog - '''Then''' X is green\n# '''If''' X is a canary - '''Then''' X is yellow\n\nLet us illustrate forward chaining by following the pattern of a computer as it evaluates the rules.\nAssume the following facts:\n* Fritz croaks\n* Fritz eats flies\n\nWith forward reasoning, the inference engine can derive that Fritz is green in a series of steps:\n\n1. Since the base facts indicate that \"Fritz croaks\" and \"Fritz eats flies\", the antecedent of rule #1 is satisfied by substituting Fritz for X, and the inference engine concludes:\n  Fritz is a frog\n\n2. The antecedent of rule #3 is then satisfied by substituting Fritz for X, and the inference engine concludes:\n  Fritz is green\n\nThe name \"forward chaining\" comes from the fact that the inference engine starts with the data and reasons its way to the answer,\nas opposed to [[backward chaining]], which works the other way around.\nIn the derivation, the rules are used in the opposite order as compared to [[backward chaining]].\nIn this example, rules #2 and #4 were not used in determining that Fritz is green.\n\nBecause the data determines which rules are selected and used, this method is called [[data driven|data-driven]], in contrast to [[goal-oriented|goal-driven]] [[backward chaining]] inference. The forward chaining approach is often employed by [[expert system]]s, such as [[CLIPS]].\n\nOne of the advantages of forward-chaining over backward-chaining is that the reception of new data can trigger new inferences, which makes the engine better suited to dynamic situations in which conditions are likely to change.<ref name=\"Hayes-Roth 1983\">{{cite book|last=Hayes-Roth|first=Frederick|title=Building Expert Systems|year=1983|publisher=Addison-Wesley|isbn=0-201-10686-8|author2=Donald Waterman |author3=Douglas Lenat }}</ref><ref>{{cite web|last=Kaczor|first=Krzystof|title=Overview of Expert System Shells|url=http://home.agh.edu.pl/~ligeza/wiki/_media/ke:ruleinfalg.pdf|work=http://geist.agh.edu.pl/|publisher=Institute of Automatics: AGH University of Science and Technology, Poland|accessdate=5 December 2013|author2=Szymon Bobek |author3=Grzegorz J. Nalepa |location=Krakow, Poland|date=12.05.2010}}</ref>\n\n==See also==\n* [[Backward chaining]]\n* [[Constraint Handling Rules]]\n* [[Inference engine]]\n* [[Opportunistic reasoning]]\n* [[Rete algorithm]]\n\n==References==\n{{reflist}}\n\n==External links==\n* [http://answers.semanticweb.com/questions/3304/forward-vs-backward-chaining Forward vs. Backward Chaining Explained at SemanticWeb.com ]\n\n[[Category:Logic]]\n[[Category:Expert systems]]\n[[Category:Logic in computer science]]"}]}}}}