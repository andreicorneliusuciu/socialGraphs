{"batchcomplete":"","query":{"normalized":[{"from":"Internet_Relay_Chat","to":"Internet Relay Chat"}],"pages":{"14730":{"pageid":14730,"ns":0,"title":"Internet Relay Chat","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{Redirect|IRC}}\n{{IPstack}}\n'''Internet Relay Chat''' ('''IRC''') is an [[application layer]] protocol that facilitates communication in the form of text. The chat process works on a client/server networking model. IRC clients are computer programs that a user can install on their system. These clients communicate with chat servers to transfer messages to other clients.<ref name=\"rfc 1459 1 introduction\">{{cite IETF\n| rfc         = 1459\n| sectionname = Introduction\n| section     = 1\n| page        = 4\n| idanchor    = ietf\n}}</ref> IRC is mainly designed for [[Many-to-many|group communication]] in discussion forums, called [[#Channels|channels]],<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = One-to-many\n| section     = 3.2\n| page        = 11\n| idanchor    = ietf\n}}</ref> but also allows one-on-one communication via [[instant messaging|private messages]]<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = One-To-One Communication\n| section     = 5.1\n| page        = 5\n| idanchor    = ietf\n}}</ref> as well as [[Direct Client-to-Client|chat and data transfer]],<ref>{{cite web\n| url         = http://www.irchelp.org/irchelp/rfc/dccspec.html\n| title       = A description of the DCC protocol\n| accessdate  = 2011-04-08\n| last        = Rollo\n| first       = Troy\n| publisher   = irchelp.org\n}}</ref> including [[file sharing]].<ref>{{cite book\n| last        = Wang\n| first       = Wallace\n| title       = Steal this File Sharing Book\n| edition     = 1st\n| date        = 2004-10-25\n| publisher   = [[No Starch Press]]\n| location    = [[San Francisco, California]]\n| isbn        = 1-59327-050-X\n| pages       = 61 \u2013 67\n| chapter     = Instant Messaging and Online Chat Rooms: Internet Relay Chat (IRC)\n}}</ref>\n\n[[Comparison of Internet Relay Chat clients|Client software]] is available for every major operating system that supports Internet access.<ref name=Sage>{{cite web\n|title=SAGE IRC Channel\n|url=http://www.sage.org/about/irc.html\n|publisher=Sage \u2013 The USENIX Special Interest Group for Sysadmins\n|accessdate=18 April 2011\n|archiveurl=https://web.archive.org/web/20120207191923/http://sage.org/about/irc.html|archivedate=7 February 2012}}</ref> As of April 2011, the top 100 IRC networks served more than half a million users at a time,<ref name=\"irc networks top 100\">{{cite web\n| url         = http://irc.netsplit.de/networks/top100.php\n| title       = IRC Networks \u2013 Top 100\n| accessdate  = 2011-04-08\n| publisher   = irc.netsplit.de\n}}</ref> with hundreds of thousands of channels<ref name=\"irc networks top 100\" /> operating on a total of roughly 1,500 servers<ref name=\"irc networks top 100\" /> out of roughly 3,200 servers worldwide.<ref>{{cite web\n| url         = http://irc.netsplit.de/servers/summary.php\n| title       = IRC Servers \u2013 Summary\n| accessdate  = 2011-04-08\n| publisher   = irc.netsplit.de\n}}</ref> IRC usage has been declining since 2003, losing 60% of its users (from 1 million to about 400,000 in 2014) and half of its channels (from half a million in 2003).<ref name=pingdom/>\n\n=={{anchor|MultiUser Talk}} History== <!-- This section is linked from redirect \"[[MultiUser Talk]]\" -->\n\n=== Beginning ===\n\nIRC was created by [[Jarkko Oikarinen]] in August 1988 to replace a program called MUT (MultiUser Talk) on a [[Bulletin board system|BBS]] called OuluBox at the [[University of Oulu]] in [[Finland]], where he was working at the Department of Information Processing Science. Jarkko intended to extend the BBS software he administered, to allow news in the [[Usenet]] style, real time discussions and similar BBS features. The first part he implemented was the chat part, which he did with borrowed parts written by his friends Jyrki Kuoppala and Jukka Pihl. The first IRC network was running on a single server named tolsun.oulu.fi.<ref name=\"stenberg\">{{cite web\n|last=Stenberg\n|first=Daniel\n|title=History of IRC (Internet Relay Chat)\n|url=https://daniel.haxx.se/irchistory.html\n|accessdate=25 April 2016\n|date=29 March 2011\n|quote=I did not experience all of this. I found information on various places and I received information from various people in order to write this. People that have helped me with this include: Greg \"wumpus\" Lindahl, Vesa \"vesa\" Ruokonen, James Ng, Tuomas Heino, Richard (eagle`s on undernet), Ari Lemmke\n}}</ref> Oikarinen found inspiration in a chat system known as [[Bitnet Relay]], which operated on the [[BITNET]].<ref name=\"founding irc\">{{cite web\n| url         = http://www.mirc.com/jarkko.html\n| title       = Founding IRC\n| accessdate  = 2011-04-08\n| last        = Oikarinen\n| first       = Jarkko\n| authorlink  = Jarkko Oikarinen\n}}</ref>\n\nJyrki Kuoppala pushed Jarkko to ask Oulu University to free the IRC code so that it also could be run outside of Oulu, and after they finally got it released, Jyrki Kuoppala immediately installed another server. This was the first \"irc network\".  Jarkko got some friends at the [[Helsinki University]] and [[Tampere University]] to start running IRC servers when his number of users increased and other universities soon followed. At this time Jarkko realized that the rest of the BBS features probably wouldn't fit in his program.<ref name=\"stenberg\"/>\n\nJarkko got in touch with people at the [[University of Denver]] and [[Oregon State University]]. They had their own IRC network running and wanted to connect to the Finnish network. They had gotten the program from one of Jarkko's friends, Vijay Subramaniam\u2014the first non-Finnish person to use IRC. IRC then grew larger and got used on the entire Finnish national network - Funet - and then connected to Nordunet, the Scandinavian branch of the Internet. In November 1988, IRC had spread across the Internet and in the middle of 1989, there were some 40 servers worldwide.<ref name=\"stenberg\"/>\n\n=== EFnet ===\n\nIn August 1990 the first major disagreement took place in the IRC world. The \"A-net\" (Anarchy net) included a server named eris.berkeley.edu. It was all open, required no passwords and had no limit on the number of connects. As Greg \"wumpus\" Lindahl explains: \"it had a wildcard server line, so people were hooking up servers and nick-colliding everyone\". The \"Eris Free Network\", [[EFnet]], made the eris machine the first to be Q-lined (Q for quarantine) from IRC. In wumpus' words again: \"Eris refused to remove that line, so I formed EFnet. It wasn't much of a fight; I got all the hubs to join, and almost everyone else got carried along.\" A-net was formed with the eris servers, EFnet was formed with the non-eris servers. History showed most servers and users went with EFnet. Once ANet disbanded, the name EFnet became meaningless, and once again it was the one and only IRC network.<ref name=\"stenberg\"/>\n\nIt is around that time that IRC was used to report on the [[1991 Soviet coup d'\u00e9tat attempt]] throughout a [[media blackout]].<ref>{{cite web\n| url         = http://www.ibiblio.org/pub/academic/communications/logs/report-ussr-gorbatchev\n| title       = IRC transcripts from the time of the 1991 Soviet coup d'\u00e9tat attempt\n| accessdate  = 2011-04-08\n| publisher   = [[ibiblio]]\n| location    = [[Chapel Hill, North Carolina]]\n}}</ref> It was previously used in a similar fashion during the [[Gulf War]].<ref>{{cite web\n| url         = http://www.ibiblio.org/pub/academic/communications/logs/Gulf-War/\n| title       = IRC logs of events of the Gulf War\n| accessdate  = 2011-04-08\n| publisher   = [[ibiblio]]\n| location    = [[Chapel Hill, North Carolina]]\n}}</ref> [[Chat log]]s of these and other events are kept in the [[ibiblio]] archive.<ref>{{cite web\n| url         = http://www.ibiblio.org/pub/academic/communications/logs/\n| title       = Logs of major events in the online community\n| accessdate  = 2011-04-08\n| publisher   = [[ibiblio]]\n| location    = [[Chapel Hill, North Carolina]]\n}}</ref>\n\n=== The Undernet fork ===\n\nAnother fork effort, the first that really made a big and lasting difference, was initiated by 'Wildthang' in the U.S. October 1992 (it forked off the EFnet ircd version 2.8.10). It was meant to be just a test network to develop bots on but it quickly grew to a network \"for friends and their friends\". In Europe and Canada a separate new network was being worked on and in December the French servers connected to the Canadian ones, and in the end of the month, the French and Canadian network was connected to the US one and the network that later came to be called \"The [[Undernet]]\" was born.<ref name=\"stenberg\"/>\n\nThe \"undernetters\" wanted to take ircd further in an attempt to make it less bandwidth consumptive and to try to sort out the channel chaos (netsplits and takeovers) that EFnet started to suffer from. For the latter purpose, the Undernet implemented timestamps, new routing and offered the CService - a program that allowed users to register channels and then attempted to protect them from troublemakers. The very first server list presented, from February 15, 1993, includes servers from USA, Canada, France, Croatia and Japan. On August 15, the new user count record was set to 57 users.<ref name=\"stenberg\"/>\n\n=== Standardization ===\n\n{{See also|IRCd#History}}\n\nIn May 1993, RFC 1459<ref name=\"rfc 1459 1 introduction\"/> was published and details a simple protocol for client/server operation, channels, one-to-one and one-to-many conversations.<ref name=\"stenberg\"/>  It is notable that the a significant number of extensions like CTCP, colors and formats are not included in the protocol specifications, nor is character encoding,<ref name=\"rfc 1459 2.2 character codes\"/> which led various implementations of servers and clients to diverge. In fact, software implementation varied significantly from one network to the other, each network implementing their own policies and standards in their own code bases.\n\n=== The Dalnet fork ===\n\nDuring the summer of 1994, the Undernet was itself forked. The new network was called [[Dalnet]] (named after its founder: dalvenjah), formed for better user service and more user and channel protections. One of the more significant changes in Dalnet was use of longer nicknames (the original ircd limit being 9 letters). Dalnet ircd modifications were made by Alexei \"Lefler\" Kosut. Dalnet was thus based on the undernet ircd server, although the dalnet pioneers were EFnet abandoners. According to James Ng the initial dalnet people were \"ops in #StarTrek sick from the constant splits/lags/takeovers/etc\".<ref name=\"stenberg\"/>\n\nDalnet quickly offered global WallOps (IRCop messages that can be seen by users who are +w (/mode NickName +w)), longer nicknames, Q:Lined nicknames (nicknames that cannot be used i.e. ChanServ, IRCop, NickServ, etc.), global K:Lines (ban of one person or an entire domain from a server or the entire network), IRCop only communications: GlobOps, +H mode showing that an IRCop is a \"helpop\" etc. Much of Dalnet's new functions were written in early 1995 by Brian \"Morpher\" Smith and allow users to own nicknames, channels, send memos and more.<ref name=\"stenberg\"/>\n\n=== The IRCnet fork or the Great Split ===\n\nIn July 1996, after months of flame wars and discussions on the mailing list, there was yet another split due to disagreement in how the development of the ircd should evolve. Most notably, the \"european\" (most of those servers were in Europe) side that later named itself [[IRCnet]] argued for nick and channel delays where the EFnet side argued for timestamps.<ref name=\"stenberg\"/> There were also disagreements about policies: the European side had started to establish a set of rules directing what IRCops could and could not do, a point of view opposed by the US side.<ref>{{cite web|url=http://www.irc.org/history_docs/TheGreatSplit.html |title=The Great Split |publisher=IRC.org |last=Engen|first=Vegard|date= May 2000|accessdate=2016-04-25}}</ref>\n\nMost (not all) of the IRCnet servers were in Europe, while most of the EFnet server were in the US. This event is also known as \"The Great Split\" in many IRC societies. EFnet has since (as of August 1998) grown and passed the number of users it had then. In the autumn year 2000, EFnet had some 50,000 users and IRCnet 70,000.<ref name=\"stenberg\"/>\n\n=== Decline and future ===\n\nAfter its golden era during the 1990s, IRC has seen a significant decline, losing around 60% of users between 2003 and 2012, with users moving to more modern [[social media]] platforms like [[Facebook]] or [[Twitter]],<ref name=\"pingdom\">{{cite web|url=http://royal.pingdom.com/2012/04/24/irc-is-dead-long-live-irc/|title=IRC is dead, long live IRC|date=24 April 2012|website=Pingdom|accessdate=25 April 2016}}</ref> but also to open platforms like [[XMPP]] which was developed in 1999. Certain networks like [[Freenode]] have not followed the overall trend and have more than quadrupled in size during the same period.<ref name=\"pingdom\" /> As of 2016, Freenode is the largest IRC network with around 90,000 users.<ref>{{cite web|title=netsplit.de top 10|url=http://irc.netsplit.de/networks/top10.php|accessdate=25 April 2016}}</ref>\n\nAs of 2016, a new standardization effort is under way under a working group called IRCv3, which focuses on more advanced client features like instant notifications, better history support and improved security.<ref name=\"ircv3\">{{cite web|title=IRCv3|url=http://ircv3.net/|publisher=IRCv3 Working Group|accessdate=25 April 2016|date=2016|quote=The IRCv3 Working Group is a collection of IRC client and server software authors working to enhance, maintain and standardize the IRC protocol using backwards-compatible extensions.}}</ref>\n\n==Technical information==\n{{See also|IRCd}}\n<!-- Commented out: [[File:MIRC 6.31 Screenshot.png|right|thumb|A Screenshot of [[mIRC]], an IRC client for [[Microsoft Windows|Windows]] versions.]] -->\n[[File:Screenshot of HexChat in Windows 8.png|right|thumb|A screenshot of [[HexChat]], an IRC client for [[GTK]] environments.]]\n[[File:Xaric screen shot.jpg|right|thumb|Xaric, a text-based IRC client, in use on [[Mac OS X]]. Shown are two IRC channels and a private conversation with the software author.]]\nIRC is an open [[Network protocol|protocol]] that uses [[Transmission Control Protocol|TCP]]<ref name=\"rfc 1459 1 introduction\" /> and, optionally, [[Transport Layer Security|TLS]]. An [[IRC server]] can connect to other IRC servers to expand the IRC network.<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Servers\n| section     = 1.1\n| page        = 4\n| idanchor    = ietf\n}}</ref> Users access IRC networks by connecting a client to a server.<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = Clients\n| section     = 2.2\n| page        = 3\n| idanchor    = ietf\n}}</ref> There are many client implementations, such as [[mIRC]], [[HexChat]] and [[irssi]], and server implementations, e.g. the original [[IRCd]]. Most IRC servers do not require users to register an account but a nick (nickname) is required before being connected.<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Clients\n| section     = 1.2\n| page        = 5\n| idanchor    = ietf\n}}</ref>\n\nIRC was originally a [[Text-based protocol|plain text protocol]]<ref name=\"rfc 1459 1 introduction\" /> (although later extended), which on request was assigned port [[List of TCP and UDP port numbers|194/TCP]] by [[Internet Assigned Numbers Authority|IANA]].<ref>{{cite web\n| url         = http://www.iana.org/assignments/port-numbers\n| title       = Port Numbers\n| accessdate  = 2011-04-08\n| date        = 2011-04-06\n| publisher   = [[Internet Assigned Numbers Authority]]\n| location    = [[Marina del Rey, California]]\n}}</ref> However, the [[de facto standard|''de facto'' standard]] has always been to run IRC on 6667/TCP<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Connect message\n| section     = 4.3.5\n| page        = 29\n| idanchor    = ietf\n}}</ref> and nearby port numbers (for example TCP ports 6660\u20136669, 7000)<ref>{{cite book\n| last1       = Lucas\n| first1      = Mark\n| last2       = Singh\n| first2      = Abhishek\n| last3       = Cantrell\n| first3      = Chris\n| editor-last = Henmi\n| editor-first = Anne\n| title       = Firewall Policies and VPN Configurations\n| date        = 2006-10-05\n| publisher   = [[Syngress Publishing]]\n| location    = [[Rockland, Massachusetts]]\n| isbn        = 1-59749-088-1\n| page        = 93\n| chapter     = Defining a Firewall\n}}</ref> to avoid having to run the [[IRCd]] software with [[Superuser|root privileges]].\n\nThe protocol specified that characters were 8-bit but did not specify the character encoding the text was supposed to use.<ref name=\"rfc 1459 2.2 character codes\">{{cite IETF\n| rfc         = 1459\n| sectionname = Character codes\n| section     = 2.2\n| page        = 7\n| idanchor    = ietf\n}}</ref> This can cause problems when users using different clients and/or different platforms want to converse.\n\nAll client-to-server IRC protocols in use today are descended from the protocol implemented in the irc2.4.0 version of the IRC2 server, and documented in RFC 1459. Since RFC 1459 was published, the new features in the irc2.10 implementation led to the publication of several revised protocol documents (RFC 2810, RFC 2811, RFC 2812 and RFC 2813); however, these protocol changes have not been widely adopted among other implementations.{{Citation needed|date=July 2007}}\n\nAlthough many specifications on the IRC protocol have been published, there is no official specification, as the protocol remains dynamic. Virtually no clients and very few servers rely strictly on the above RFCs as a reference.{{Citation needed|date=July 2007}}\n\nMicrosoft made an extension for IRC in 1998 via the proprietary [[IRCX]].<ref>{{cite IETF\n| title       = Extensions to the Internet Relay Chat Protocol (IRCX)\n| draft       = draft-pfenning-irc-extensions-04\n| last        = Abraham\n| first       = Dalen\n| year        = 1998\n| month       = June\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2011-04-08\n}}</ref> They later stopped distributing software supporting IRCX, instead developing the proprietary [[Microsoft Notification Protocol|MSNP]].\n\nThe standard structure of a network of IRC servers is a [[Tree network|tree]].<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = Architecture\n| section     = 3\n| pages       = 3 \u2013 4\n| idanchor    = ietf\n}}</ref> Messages are routed along only necessary branches of the tree but network state is sent to every server<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = Introduction\n| section     = 1\n| page        = 2\n| idanchor    = ietf\n}}</ref> and there is generally a high degree of implicit trust between servers. This architecture has a number of problems. A misbehaving or malicious server can cause major damage to the network<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Algorithms\n| section     = 9.3\n| page        = 64\n| idanchor    = ietf\n}}</ref> and any changes in structure, whether intentional or a result of conditions on the underlying network, require a net-split and net-join. This results in a lot of network traffic and spurious quit/join messages to users<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = Network Congestion\n| section     = 6.3\n| pages       = 7 \u2013 8\n| idanchor    = ietf\n}}</ref> and temporary loss of communication to users on the splitting servers. Adding a server to a large network means a large background bandwidth load on the network and a large memory load on the server. Once established however, each message to multiple recipients is delivered in a fashion similar to [[multicast]], meaning each message travels a network link exactly once.<ref>{{cite IETF\n| rfc         = 2810\n| sectionname = To A Channel\n| section     = 5.2.1\n| pages       = 5 \u2013 6\n| idanchor    = ietf\n}}</ref> This is a strength in comparison to non-multicasting protocols such as [[Simple Mail Transfer Protocol]] (SMTP) or [[Extensible Messaging and Presence Protocol]] (XMPP).\n\nAn IRC daemon can also be used on a local area network (LAN). IRC can thus be used to facilitate communication between people within the local area network (internal communication).<ref>{{cite web|url=http://computerquestionhelp.com/content/how-guide-setup-your-own-irc-server-using-personal-or-dedicated-system-or-server-top-freewar|title=IRC daemons for LAN|publisher=|accessdate=2 October 2014}}</ref><ref>{{cite web|url=http://www.irc-wiki.org/IRC_server|title=Running an own IRC server|publisher=|accessdate=2 October 2014}}</ref>\n\n===Commands and replies===\n{{Main|List of Internet Relay Chat commands}}\nIRC has a line-based structure. Clients send single-line messages to the server,<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Message format in 'pseudo' BNF\n| section     = 2.3.1\n| page        = 8\n| idanchor    = ietf\n}}</ref> receive replies to those messages<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Numeric replies\n| section     = 2.4\n| page        = 10\n| idanchor    = ietf\n}}</ref> and receive copies of some messages sent by other clients. In most clients, users can enter commands by prefixing them with a '/'. Depending on the command, these may either be handled entirely by the client, or (generally for commands the client does not recognize) passed directly to the server, possibly with some modification.{{Citation needed|date=May 2009}}\n\nDue to the nature of the protocol, automated systems cannot always correctly pair a sent command with its reply with full reliability and are subject to guessing.<ref>{{cite web\n| url         = http://www.shanemcc.co.uk/irc/#listmode\n| title       = IRC List Modes \u2013 List mode extension showing pair confusion for lists\n| accessdate  = 2011-04-08\n| date        = 2009-11-25\n}}</ref>\n\n===Channels===\nThe basic means of communicating to a group of users in an established IRC session is through a ''[[chat room|channel]]''.<ref name=\"rfc 1459 3.2.2 to a group (channel)\">{{cite IETF\n| rfc         = 1459\n| sectionname = To a group (channel)\n| section     = 3.2.2\n| page        = 11\n| idanchor    = ietf\n}}</ref> Channels on a network can be displayed using the IRC command ''LIST'',<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = List message\n| section     = 4.2.6\n| page        = 24\n| idanchor    = ietf\n}}</ref> which lists all currently available channels that do not have the modes +s or +p set, on that particular network.\n\nUsers can ''join'' a channel using the ''JOIN'' command,<ref name=\"rfc 1459 4.2.1 join message\">{{cite IETF\n| rfc         = 1459\n| sectionname = Join message\n| section     = 4.2.1\n| page        = 19\n| idanchor    = ietf\n}}</ref> in most clients available as ''/join #channelname''. Messages sent to the joined channels are then relayed to all other users.<ref name=\"rfc 1459 3.2.2 to a group (channel)\" />\n\nChannels that are available across an entire IRC network are prefixed with a '#', while those local to a server use '&'.<ref>{{cite IETF\n| rfc         = 2811\n| sectionname = Channel Scope\n| section     = 2.2\n| page2       = 3 \u2013 4\n| idanchor    = ietf\n}}</ref> Other less common channel types include '+' channels\u2014'modeless' channels without operators&nbsp;\u2014<ref>{{cite IETF\n| rfc         = 2811\n| sectionname = Channel Properties\n| section     = 2.3\n| page        = 4\n| idanchor    = ietf\n}}</ref> and '!' channels, a form of [[#Nick/channel delay|timestamped]] channel on normally non-timestamped networks.<ref>{{cite IETF\n| rfc         = 2811\n| sectionname = Channel lifetime\n| section     = 3\n| page        = 5\n| idanchor    = ietf\n}}</ref>\n\n===Modes===\nUsers and channels may have ''modes'' that are represented by single case-sensitive letters<ref>{{cite IETF\n| rfc         = 2811\n| sectionname = Channel Modes\n| section     = 4\n| page        = 7\n| idanchor    = ietf\n}}</ref> and are set using the ''MODE'' command.<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Mode message\n| section     = 4.2.3\n| page        = 21\n| idanchor    = ietf\n}}</ref> User modes and channel modes are separate and can use the same letter to mean different things (e.g. user mode \"i\" is invisible mode while channel mode \"i\" is invite only.<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Channel modes\n| section     = 4.2.3.1\n| pages       = 21 \u2013 22\n| idanchor    = ietf\n}}</ref>) Modes are usually set and unset using the mode command that takes a target (user or channel), a set of modes to set (+) or unset (-) and any parameters the modes need.\n\nSome but not all channel modes take parameters and some channel modes apply to a user on a channel or add or remove a mask (e.g. a ban mask) from a list associated with the channel rather than applying to the channel as a whole.<ref>{{cite IETF\n| rfc         = 2811\n| sectionname = Channel Access Control\n| section     = 4.3\n| pages       = 10 \u2013 11\n| idanchor    = ietf\n}}</ref> Modes that apply to users on a channel have an associated symbol that is used to represent the mode in names replies<ref name=\"rfc 1459 p.51 rpl_namreply\">{{cite IETF\n| rfc         = 1459\n| sectionname = Command responses: 353 RPL_NAMREPLY\n| page        = 51\n| idanchor    = ietf\n}}</ref> (sent to clients on first joining a channel<ref name=\"rfc 1459 4.2.1 join message\" /> and use of the names command) and in many clients also used to represent it in the client's displayed list of users in a channel or to display an own indicator for a user's modes.\n\nIn order to correctly parse incoming mode messages and track channel state the client must know which mode is of which type and for the modes that apply to a user on a channel which symbol goes with which letter. In early implementations of IRC this had to be hard-coded in the client but there is now a de facto standard extension to the protocol called ISUPPORT that sends this information to the client at connect time using numeric 005.<ref>{{cite web\n| url         = http://www.irc.org/tech_docs/005.html\n| title       = The 005 numeric: ISUPPORT\n| accessdate  = 2011-04-10\n| last        = Roeckx\n| first       = Kurt\n| date        = 2004-10-14\n| publisher   = irc.org\n}}</ref><ref>{{cite IETF\n| title       = IRC RPL_ISUPPORT Numeric Definition\n| draft       = draft-brocklesby-irc-isupport-03\n| last        = Brocklesby\n| first       = Edward\n| year        = 2002\n| month       = September\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2011-04-10\n}}</ref>\n\nThere is a small design fault in IRC regarding modes that apply to users on channels: the names message used to establish initial channel state can only send one such mode per user on the channel,<ref name=\"rfc 1459 p.51 rpl_namreply\" /> but multiple such modes can be set on a single user. For example, if a user holds both operator status (+o) and voice status (+v) on a channel, a new client will be unable to see the mode with less priority (i.e. voice). Workarounds for this are possible on both the client and server side but none are widely implemented.\n\n====Standard (RFC 1459) modes====\n\n{| class=\"wikitable\"\n|+ User modes\n|-\n! Letter\n! Symbol\n! Description\n|-\n| '''i'''\n|\n| Invisible\u2014cannot be seen without a common channel or knowing the exact name\n|-\n| '''s'''\n|\n| Receives server notices\n|-\n| '''w'''\n|\n| Receives wallops<ref>{{cite IETF\n| rfc         = 1459\n| sectionname = Operwall message\n| section     = 5.6\n| page        = 41\n| idanchor    = ietf\n}}</ref>\n|-\n| '''o'''\n|\n| User is an IRC operator (ircop)\n|}\n\n{| class=\"wikitable\"\n|+ Channel modes\n|-\n! Letter\n! Symbol\n! Parameter(s)\n! Description\n|-\n| '''o'''\n| @\n| Name of affected user\n| Channel operator\u2014can change channel modes and kick users out of the channel among other things\n|-\n| '''s'''\n|\n|\n| Secret channel\u2014not shown in channel list or user whois except to users already on the channel\n|-\n| '''p'''\n|\n|\n| Private channel\u2014listed in channel list as \"prv\" according to <nowiki>RFC 1459</nowiki>\n|-\n| '''n'''\n|\n|\n| Users cannot send messages to the channel externally\n|-\n| '''m'''\n|\n|\n| Channel is moderated (only those who hold operator or voice status on the channel can send messages to it)\n|-\n| '''i'''\n|\n|\n| Only users with invites may enter the channel.\n|-\n| '''t'''\n|\n|\n| Only operators can change the channel topic.\n|-\n| '''l'''\n|\n| Limit number\n| Limits number of users able to be on channel (when full, no new users can join)\n|-\n| '''b'''\n|\n| Ban mask (nick!user@host with wildcards allowed)\n| Bans [[hostmask]]s from channel\n|-\n| '''v''' <!-- That does belong here with the channel modes. It's not a user mode -->\n| +\n| Name of affected user\n| Gives a user voice status on channel (see +m above)\n|-\n| '''k'''\n|\n| New channel key\n| Sets a channel key such that only users knowing the key can enter\n|}\n\nMany daemons and networks have added extra modes or modified the behavior of modes in the above list.<ref>{{cite web\n| url         = http://www.alien.net.au/irc/usermodes.html\n| title       = IRC User Modes List\n| accessdate  = 2011-04-10\n| last        = Butcher\n| first       = Simon\n| date        = 2005-01-12\n| publisher   = alien.net.au\n}}</ref><ref>{{cite web\n| url         = http://www.alien.net.au/irc/chanmodes.html\n| title       = IRC Channel Modes List\n| accessdate  = 2011-04-10\n| last        = Butcher\n| first       = Simon\n| date        = 2005-01-12\n| publisher   = alien.net.au\n}}</ref><ref>{{cite web\n| url         = http://www.alien.net.au/irc/servermodes.html\n| title       = IRC Server Modes List\n| accessdate  = 2011-04-10\n| last        = Butcher\n| first       = Simon\n| date        = 2005-01-12\n| publisher   = alien.net.au\n}}</ref><ref>{{cite web\n| url         = http://webtoman.com/opera/panel/ircdmodes.html\n| title       = IRCd Modes\n| accessdate  = 2011-04-10\n| last        = Olsen\n| first       = Tommy\n| publisher   = webtoman.com\n}}</ref>\n\n===Channel Operators===\nA ''Channel Operator'' is a [[Client (computing)|client]] on an [[IRC channel]] that manages the channel.\nIRC Channel Operators can be easily seen by the \"@\" symbol prefixed to their name, or a Latin letter \"+o\"/\"o\".\nOn most networks, an operator can:\n* Kick a user\n* Ban a user\n* Give another user IRC Channel Operator Status or IRC Channel Voice Status.\n* Change the IRC Channel topic while channel mode +t is set.\n* Change the IRC Channel Mode locks.\n\n===IRC Operators===\n{{main|Internet Relay Chat operator}}\nThere are also users who maintain elevated rights on their local server, or the entire network; these are called IRC operators,<ref name=\"rfc 1459 1.2.1 operators\">{{cite IETF\n| rfc         = 1459\n| sectionname = Operators\n| section     = 1.2.1\n| page        = 5\n| idanchor    = ietf\n}}</ref> sometimes shortened to IRCops or Opers (not to be confused with channel operators). As the implementation of the IRCd varies, so do the privileges of the IRC operator on the given IRCd. RFC 1459<ref name=\"rfc 1459 1.2.1 operators\" /> claims that IRC operators are \"a necessary evil\" to keep clean state of the network, and as such they need to be able to disconnect and reconnect servers. Additionally, to prevent malicious users or even harmful automated programs from entering IRC, IRC operators are usually allowed to disconnect clients and completely ban IP addresses or complete subnets. Networks that carry services (Nickserv et al.) usually allow their IRC operators also to handle basic \"ownership\" matters. Further privileged rights may include overriding channel bans (being able to join channels they would not be allowed to join, if they were not opered), being able to op themselves on channels where they would not be able without being opered, being auto-opped on channels always and so forth.\n\n===Hostmasks===\nA hostmask is a unique identifier of an IRC [[client (computing)|client]] connected to an IRC [[Server (computing)|server]].<ref name=\"thiedeke-2003\">{{cite book\n| last        = Thiedeke\n| first       = Udo\n| title       = Virtuelle Gruppen: Charakteristika und Problemdimensionen\n| url         = https://books.google.com/?id=aQ74THYRyYsC&lpg=PA314&pg=PA315#v=onepage&q=hostmask\n| accessdate  = 2010-03-30\n| edition     = 2nd\n| date        = 2003-09-23\n| publisher   = {{Interlanguage link multi|Springer VS|de}}\n| language    = German\n| isbn        = 3-531-33372-0\n| pages       = 314, 337\n| chapter     = Nicola D\u00f6ring, Alexander Schestag\n}}</ref><ref name=\"rogers-2005\">{{cite book\n| last        = Rogers\n| first       = Russ\n| editor-last = Devost\n| editor-first = Matthew G.\n| title       = Hacking a Terror Network: The Silent Threat of Covert Channels\n| url         = https://books.google.com/books?id=e3ggsGgTzUgC&lpg=PA10&pg=PA10#v=onepage&q=Hostmask%20IRC\n| accessdate  = 2010-03-30\n| edition     = 1st\n| date        = 2004-12-01\n| publisher   = [[Syngress Publishing]]\n| location    = [[Rockland, Massachusetts]]\n| isbn        = 1-928994-98-9\n| page        = 10\n| chapter     = The Mind of Terror\n}}</ref> IRC [[IRCd|servers]], [[Internet Relay Chat services|services]], and other clients including [[Internet Relay Chat bot|bots]] can use it to identify a specific IRC session.\n\nThe format of a hostmask is <code>nick!user@host</code>.  The hostmask looks similar to, but should not be confused with an [[e-mail address]].\n\nThe nick part is the nickname chosen by the user and may be changed while connected.\nThe user part is the username reported by [[ident protocol|ident]] on the client.<ref name=\"petersen-2002\">{{cite book\n| editor-last = Petersen\n| editor-first = Julie K.\n| title       = The Telecommunications Illustrated Dictionary\n| url         = https://books.google.com/books?id=b2mMzS0hCkAC&lpg=PA500&pg=PA500#v=onepage&q=Hostmask\n| accessdate  = 2010-03-30\n| edition     = 2nd\n| date        = 2002-05-29\n| publisher   = [[CRC Press]]\n| isbn        = 0-8493-1173-X\n| page        = 500\n| chapter     = Internet Relay Chat\n}}</ref> If ident is not available on the client, the username specified when the client connected is used after being prefixed with a [[tilde]].<ref name=\"freenode faq\">{{cite web\n| url         = http://freenode.net/faq.shtml\n| title       = Frequently-Asked Questions\n| accessdate  = 2010-03-30\n| publisher   = [[freenode]]\n}}</ref>\n\nThe host part is the [[hostname]] the client is connecting from. If the [[IP address]] of the client cannot be resolved to a valid [[hostname]] by the server, it is used instead of the hostname.\n\nBecause of the [[privacy]] implications of exposing the IP address or hostname of a client, some [[IRCd|IRC daemons]] also provide privacy features, such as InspIRCD or UnrealIRCD's \"+x\" mode. This [[Cryptographic hash function|hashes]] a client IP address or masks part of a client's hostname, making it unreadable to users other than [[Internet Relay Chat#IRC Operators|IRCops]]. Users may also have the option of requesting a \"virtual host\" (or \"vhost\"), to be displayed in the hostmask to allow further anonymity. Some IRC networks such as [[Freenode]] use these as \"cloaks\" to indicate that a user is affiliated with a group or project.<ref>{{cite web\n| url        = http://meta.wikimedia.org/wiki/IRC/Cloaks\n| title      = IRC/Cloaks\n| accessdate = 2011-11-27\n| publisher  = [[Wikimedia]]\n}}</ref>\n\n==Challenges==\nIssues in the original design of IRC were the amount of shared state data<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = Size\n| section     = 2.5.1\n| pages       = 5 \u2013 6\n| idanchor    = ietf\n}}</ref><ref>{{cite IETF\n| rfc         = 2810\n| sectionname = Scalability\n| section     = 6.1\n| page        = 7\n| idanchor    = ietf\n}}</ref> being a limitation on its scalability,<ref>{{harvnb|Loesch|2003}} 1.2.1 Growth</ref> the absence of unique user identifications leading to the nickname collision problem,<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = User identification\n| section     = 5.4.1\n| page        = 10\n| idanchor    = ietf\n}}</ref> lack of protection from [[netsplit]]s by means of cyclic routing,<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = Trees and cycles\n| section     = 5.4.2\n| page        = 10\n| idanchor    = ietf\n}}</ref><ref>{{harvnb|Loesch|2003}} 1.2.2 Network failures</ref> the trade-off in scalability for the sake of real-time user presence information,<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = State Information problems\n| section     = 2.1\n| page        = 4\n| idanchor    = ietf\n}}</ref> protocol weaknesses providing a platform for abuse,<ref>{{harvnb|Loesch|2003}} 1.2.3 Sociological and security aspects</ref> no transparent and optimizable message passing,<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = Message passing\n| section     = 5.2.1\n| page        = 7\n| idanchor    = ietf\n}}</ref> and no encryption.<ref>{{cite IETF\n| rfc         = 1324\n| sectionname = Conference security\n| section     = 5.2.4\n| page        = 8\n| idanchor    = ietf\n}}</ref> Some of these issues have been addressed in ''Modern IRC''.\n\n===Attacks===\nBecause IRC connections are usually unencrypted and typically span long time periods, they are an attractive target for [[Denial-of-service attack|DoS/DDoS attackers]] and [[Hacker (computer security)|hackers]]. Because of this, careful security policy is necessary to ensure that an IRC network is not susceptible to an attack such as a [[Internet Relay Chat takeover|takeover]] war. IRC networks may also [[K-line (IRC)|K-line]] or [[G-line]] users or servers that have a harming effect.\n\nSome IRC servers support [[Transport Layer Security|SSL/TLS]] connections for security purposes. This helps stop the use of [[packet sniffer]] programs to obtain the passwords of IRC users, but has little use beyond this scope due to the public nature of IRC channels. SSL connections require both client and server support (that may require the user to install SSL binaries and IRC client specific patches or modules on their computers). Some networks also use SSL for server to server connections, and provide a special channel flag (such as <code>+S</code>) to only allow SSL-connected users on the channel, while disallowing operator identification in clear text, to better utilize the advantages that SSL provides.<ref>{{cite web\n | url        = http://esper.net/help.php\n | title      = Getting Help on EsperNet\n | publisher  = The EsperNet IRC Network\n | accessdate = 2012-07-31\n}}</ref><ref>{{cite web\n | url        = http://www.dal.net/news/shownews.php?id=67\n | title      = New Feature: SSL For Users\n | author     = brandon\n | date       = 2010-05-18\n | publisher  = DALnet\n | accessdate = 2012-07-31\n}}</ref>\n\nIRC served as an early laboratory for many kinds of Internet attacks, such as using fake [[Internet Control Message Protocol|ICMP]] unreachable messages to break [[Transmission Control Protocol|TCP]]-based IRC connections ([[Nuke (computer)|nuking]]) to annoy users or facilitate [[Internet Relay Chat takeover|takeovers]].\n\n===Abuse prevention===\nOne of the most contentious technical issues surrounding IRC implementations, which survives to this day, is the merit of \"Nick/Channel Delay\" vs. \"Timestamp\" protocols. Both methods exist to solve the problem of [[denial-of-service attack]]s, but take very different approaches.\nThe problem with the original IRC protocol as implemented was that when two servers split and rejoined, the two sides of the network would simply merge their channels. If a user could join on a \"split\" server, where a channel that existed on the other side of the network was empty, and gain operator status, they would become a channel operator of the \"combined\" channel after the [[netsplit]] ended; if a user took a nickname that existed on the other side of the network, the server would kill both users when rejoining (i.e., 'nick-collision').\nThis was often abused to \"mass-kill\" all users on a channel, thus creating \"opless\" channels where no operators were present to deal with abuse. Apart from causing problems within IRC, this encouraged people to conduct denial of service attacks against IRC servers in order to cause [[netsplit]]s, which they would then abuse.\n\n====Nick/channel delay====\nThe nick/channel delay (abbreviated ND/CD) solution to this problem is very simple. After a user signs off and the [[nickname]] becomes available, or a channel ceases to exist because all its users parted (as often happens during a [[netsplit]]), the server will not allow any user to use that nickname or join that channel, until a certain period of time (the ''delay'') has passed. The idea behind this is that even if a [[netsplit]] occurs, it is useless to an abuser because they cannot take the nickname or gain operator status on a channel, and thus no collision of a nickname or 'merging' of a channel can occur. To some extent, this inconveniences legitimate users, who might be forced to briefly use a different name after rejoining (appending an [[underscore]] is popular).\n\n====Timestamping====\nThe alternative, the timestamp or ''TS'' protocol, takes a different approach. Every nickname and channel on the network is assigned a timestamp{{spaced ndash}}the date and time when it was created. When a netsplit occurs, two users on each side are free to use the same nickname or channel, but when the two sides are joined, only one can survive. In the case of nicknames, the newer user, according to their TS, is killed; when a channel collides, the members (users on the channel) are merged, but the channel operators on the \"losing\" side of the split lose their channel operator status.\n\nTS is a much more complicated protocol than ND/CD, both in design and implementation, and despite having gone through several revisions, some implementations still have problems with \"desyncs\" (where two servers on the same network disagree about the current state of the network), and allowing too much leniency in what was allowed by the 'losing' side. Under the original TS protocols, for example, there was no protection against users setting bans or other modes in the losing channel that would then be merged when the split rejoined, even though the users who had set those modes lost their channel operator status. Some modern TS-based IRC servers have also incorporated some form of ND and/or CD in addition to timestamping in an attempt to further curb abuse.\n\nMost networks today use the timestamping approach. The timestamp versus ND/CD disagreements caused several servers to split away from [[EFnet]] and form the newer [[IRCnet]]. After the split, EFnet moved to a TS protocol, while IRCnet used ND/CD.\n\n====SAVE====\nIn recent versions of the IRCnet ircd, as well as ircds using the TS6 protocol (including Charybdis), ND has been extended/replaced by a mechanism called SAVE. This mechanism assigns every client a [[Unique identifier|UID]] upon connecting to an IRC server. This ID starts with a number, which is forbidden in nicks (although some ircds, namely IRCnet and InspIRCd, allow clients to switch to their own UID as the nickname).\n\nIf two clients with the same nickname join from different sides of a netsplit (\"nick collision\"), the first server to see this collision will force ''both'' clients to change their nick to their UID, thus saving both clients from being disconnected. On IRCnet, the nickname will also be locked for some time (ND) to prevent both clients from changing back to the original nickname, thus colliding again.\n\n==Networks==\n[[File:Tolsun 2.jpg|thumb|right|The first IRC server, tolsun.oulu.fi, a [[Sun-3]] server on display near the [[University of Oulu]] computer centre. (2001)]]\n\nThere are thousands of running IRC networks in the world. They run various implementations of [[IRC server]]s, and are administered by various groups of [[IRC operator]]s, but the protocol exposed to IRC users is very similar, and all IRC networks can be accessed by the same client software, although there might be slight incompatibilities and limited functionality due to the differing server software implementations.\n\nThe largest IRC networks have traditionally been grouped as the \"Big Four\"<ref name=\"the book of irc\">{{cite book\n| last        = Charalabidis\n| first       = Alex\n| title       = The Book of IRC: The Ultimate Guide to Internet Relay Chat\n| edition     = 1st\n| date        = 1999-12-15\n| publisher   = No Starch Press\n| location    = [[San Francisco, California]]\n| isbn        = 1-886411-29-8\n| page        = 61\n| chapter     = IRCing On The Macintosh: Ircle\n| quote       = On large networks such as the Big Four{{mdash}} EFnet, IRCnet, Undernet, and DALnet{{mdash}} trying to list the thousands of channels with Ircle always causes you to disconnect due to the flood of information, while other clients can usually manage the feat, if you are on a direct Ethernet connection.\n}}</ref><ref name=\"encyclopedia of new media\">{{cite book\n| editor-last = Jones\n| editor-first = Steve\n| title       = Encyclopedia of New Media: An Essential Reference to Communication and Technology\n| edition     = 1st\n| date        = 2002-12-10\n| publisher   = [[SAGE Publications]]\n| location    = [[Thousand Oaks, California]]\n| isbn        = 0-7619-2382-9\n| page        = 257\n| chapter     = Internet Relay Chat\n| quote       = Today there are hundreds of independent IRC networks, but the \"Big Four\" are EFNet, UnderNet, Dalnet, and IRCnet.\n}}</ref><ref name=\"the imac book\">{{cite book\n| last        = Rittner\n| first       = Don\n| title       = The iMac Book\n| edition     = 1st\n| date        = 1999-03-03\n| publisher   = Coriolis Group\n| location    = [[Scottsdale, Arizona]]\n| isbn        = 1-57610-429-X\n| page        = 215\n| chapter     =\n| quote       = There are several large networks: EFnet, UnderNET, DALnet, and IRCnet make up the Big Four.\n}}</ref><ref name=\"information technology for management\">{{cite book\n| last1       = Turban\n| first1      = Efraim\n| last2       = Leidner\n| first2      = Dorothy\n| last3       = McLean\n| first3      = Ephraim\n| last4       = Wetherbe\n| first4      = James\n| title       = Information Technology for Management: Transforming Organizations in the Digital Economy\n| edition     = 5th\n| date        = 2005-02-07\n| publisher   = [[John Wiley & Sons]]\n| location    = [[Hoboken, New Jersey]]\n| isbn        = 0-471-70522-5\n| pages       = 106 \u2013 107\n| chapter     = Communication\n| quote       = The largest networks have traditionally been grouped as the \"Big Four\": EFNet, IrcNet, QuakeNet, and UnderNet.\n}}</ref>{{mdash}} a designation for networks that top the statistics. The Big Four networks change periodically, but due to the community nature of IRC there are a large number of other networks for users to choose from.\n\nHistorically the \"Big Four\" were:<ref name=\"the book of irc\" /><ref name=\"encyclopedia of new media\" /><ref name=\"the imac book\" />\n* [[EFnet]]\n* [[IRCnet]]\n* [[Undernet]]\n* [[DALnet]]\n\nIRC reached 6 million simultaneous users in 2001 and 10 million users in 2003.{{citation needed|date=January 2015}}\n\nAs of March 2015 the largest IRC networks are:\n* [[freenode]] \u2013 around 99k users at peak hours\n* [[IRCNet]] \u2013 around 44k users at peak hours\n* [[QuakeNet]] \u2013 around 36k users at peak hours\n* [[EFnet]] \u2013 around 26k users at peak hours\n* [[Undernet]] \u2013 around 25k users at peak hours\n* [[Rizon]] \u2013 around 25k users at peak hours\n\nToday, the top 100 IRC networks have around 460k users connected at peak hours.<ref name=\"netsplitde-top100\">{{cite web |url=http://irc.netsplit.de/networks/top100.php |title=IRC Networks - Top 100 |last1= |first1= |last2= |first2= |date= |website=irc.netsplit.de |publisher=netsplit.de |access-date=8 November 2015 |quote=}}</ref> <!-- Unconfirmed as of 8 November 2015, freenode etc. missing from the reference -->\n\n===Timeline===\n\n{{Simple Horizontal timeline\n\n|from=1990\n|to=2015\n|inc=2\n\n|styleDefault-borderbottom=solid 0.1em black;\n\n|row1=timeline\n|row1-style=styleDefault\n|row1-bordertop=solid 0.1em black;\n|row1-1-color=#ffbb33\n|row1-1-from=1990\n|row1-1-to=2015\n|row1-1-text=[[EFnet]]\n\n|row2=timeline\n|row2-style=styleDefault\n|row2-1-from=1990\n|row2-1-to=1992\n|row2-2-to=2015\n|row2-2-text=[[Undernet]]\n|row2-2-color=#33b5e5\n\n|row3=timeline\n|row3-style=styleDefault\n|row3-1-from=1990\n|row3-1-to=1994\n|row3-2-color=#cc0000\n|row3-2-to=2015\n|row3-2-text=[[DALnet]]\n\n|row4=timeline\n|row4-style=styleDefault\n|row4-1-from=1990\n|row4-1-to=1995\n|row4-2-color=#aa66cc\n|row4-2-to=2015\n|row4-2-text=[[freenode]]\n\n|row5=timeline\n|row5-style=styleDefault\n|row5-1-from=1990\n|row5-1-to=1997\n|row5-2-color=#99cc00\n|row5-2-to=2015\n|row5-2-text=[[IRCnet]]\n\n|row6=timeline\n|row6-style=styleDefault\n|row6-1-from=1990\n|row6-1-to=1997\n|row6-2-color=#ff4444\n|row6-2-to=2015\n|row6-2-text=[[QuakeNet]]\n\n|row7=timeline\n|row7-1-from=1990\n|row7-1-to=2002\n|row7-2-color=#ff44ff\n|row7-2-to=2015\n|row7-2-text=[[Rizon]]\n\n|row8=scale\n|caption=IRC networks\n}}\n\n==URI scheme==\nThere are three recognized [[Uniform resource identifier|uniform resource identifier (URI)]] schemes for Internet Relay Chat: <code>irc</code>, <code>irc6</code>, and <code>ircs</code>.<ref>{{cite web\n | url        = http://www.iana.org/assignments/uri-schemes.html\n | title      = Uniform Resource Identifier (URI) Schemes\n | publisher  = Internet Assigned Numbers Authority | accessdate = 2012-10-14\n}}</ref> When supported, they allow [[hyperlink]]s of various forms, including\n <nowiki>irc://<host>[:<port>]/[<channel>[?<channel_keyword>]]</nowiki>\n(where items enclosed within brackets ([,]) are optional) to be used to (if necessary) connect to the specified host (or network, if known to the IRC client) and join the specified channel.<ref>{{cite IETF\n| title       = Uniform Resource Locator Schemes for Internet Relay Chat Entities\n| draft       = draft-butcher-irc-url-04\n| last        = Butcher\n| first       = Simon\n| year        = 2003\n| month       = January\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2011-04-10\n}}</ref> (This can be used within the client itself, or from another application such as a Web browser).  irc is the default URI, irc6 specifies a connection to be made using IPv6, and ircs specifies a secure connection.\n\nPer the specification, the usual [[hash symbol]] (#) will be prepended to channel names that begin with an [[alphanumeric]] character\u2014allowing it to be omitted. Some implementations (for example, mIRC) will do so ''unconditionally'' resulting in a (usually unintended) extra (for example, ##channel), if included in the URL.\n\nSome implementations allow multiple channels to be specified, separated by commas.{{Citation needed|date=April 2011}}\n\n==Clients==\n\n===Client software===\n{{Details|Comparison of Internet Relay Chat clients}}\n[[File:Ircnetz-Schema.svg|right|thumb|Scheme of an IRC network with [[Client (computing)|normal clients]] (green), [[IRC bot|bots]] (blue) and [[Bouncer (networking)|bouncers]] (orange)]]\n\nClient software exists for various operating systems or software packages, as well as web-based or inside games. Many different clients are available for the various [[operating systems]], including [[Microsoft Windows|Windows]], [[Unix]] and [[Linux]], [[Mac OS X]] and mobile operating systems (such as [[iOS]] and [[Android (operating system)|Android]]). On Windows, [[mIRC]] is one of the more popular clients.<ref>{{cite book|last=Smith|first=Roderick W.|title=The Multi-Boot Configuration Handbook| url= https://books.google.com/books?id=OuPtI5fHhBoC|accessdate=2010-07-25|series= Handbook Series| date= 2000-04-08| publisher= [[Que Publishing]]| location= [[Upper Saddle River, New Jersey]]|isbn= 0-7897-2283-6|page=289|chapter=The Internet: Using IRC to Get Help|quote= mIRC is one of the most popular Windows IRC clients.}}</ref>\n\nSome programs which are extensible through [[plug-in (computing)|plug-ins]] also serve as platforms for IRC clients. For instance, a client called [[ERC (software)|ERC]], written entirely in [[Emacs Lisp]] is included in v.22.3 of Emacs. Therefore, any platform that can run Emacs can run ERC.\n\nA number of [[web browser]]s have built in IRC clients, such as [[Opera (Web browser)|Opera]] ([[Features of the Opera web browser#Legacy features|version 12.17 and earlier]])<ref>{{cite web| url=http://operawiki.info/OperaIRC| title       = Opera Browser Wiki: IRC Client| accessdate  = 2011-04-10}}</ref> or the [[ChatZilla]] add-on for Mozilla [[Firefox]] (included as a built-in component of [[SeaMonkey]]). Web-based clients, such as [[Mibbit]] and open source [[KiwiIRC]], can run in most browsers.\n\nGames such as ''[[War\u00a7ow]]'',<ref>{{cite web\n| url         = http://www.warsow.net/wiki/index.php?title=IRC_Module\n| title       = Warsow Wiki: IRC Module\n| accessdate  = 2011-04-10\n}}</ref> ''[[Unreal Tournament]]'' (up to [[Unreal Tournament 2004]]),<ref>{{cite web\n| url         = http://www.bcchardware.com/index.php?option=com_content&task=view&id=35&Itemid=40\n| title       = UT2004 Review\n| accessdate  = 2011-04-10\n| last        = Guenter\n| first       = Daniel\n| date        = 2004-06-21\n| publisher   = BCCHardware\n}}</ref> ''[[Uplink (video game)|Uplink]]'',<ref>{{cite web\n| url         = http://guide.modlink.net/section11.php\n| title       = The Ultimate Uplink Guide\n| accessdate  = 2011-04-10\n}}</ref> ''[[Spring Engine]]''-based games, [[0 A.D. (video game)|0 A.D.]] and ''ZDaemon'' have included IRC.<ref>{{cite web\n| url         = https://doomwiki.org/wiki/ZDaemon#Other_utilities\n| title       = ZDaemon \u2013 The Doom Wiki: Other utilities\n| accessdate  = 2011-04-10\n}}</ref>\n\n[[Ustream]]'s chat interface is [[IRC]] with custom authentication<ref>{{cite web\n| url         = http://ustream-helpers.com/how-to/ircclient\n| title       = How to setup an IRC client to connect and login to Ustream\n| accessdate  = 2013-04-27\n| date        = 2012-01-29\n| publisher   = Ustream-Helpers\n}}</ref> as well as [[Justin.tv]]'s.<ref>{{cite web\n| url         = http://www.liquidsilver.org/2010/06/ustream-v-justin/\n| title       = Ustream vs. Justin.tv\n| accessdate  = 2011-07-13\n| date        = 2010-06-20\n| publisher   = LiquidSilver\n| author      = Mauldor\n}}</ref>\n\n===Bots===\n{{Main|IRC bot}}\nA typical use of bots in IRC is to provide [[Internet Relay Chat services|IRC services]] or a specific functionality within a channel such as to host a chat-based game or provide notifications of external events. However some IRC bots are used to launch malicious attacks such as denial of service, spamming, or exploitation.<ref>{{cite web|last1=Canavan|first1=John|title=The Evolution of Malicious IRC Bots|url=http://www.symantec.com/avcenter/reference/the.evolution.of.malicious.irc.bots.pdf|website=www.symantec.com|publisher=Symantec Security Response}}</ref>\n\n===Bouncer===\n{{Main|BNC (software)}}\nA program that runs as a [[daemon (computer software)|daemon]] on a [[Server (computing)|server]] and functions as a persistent [[proxy server|proxy]] is known as a BNC or bouncer. The purpose is to maintain a connection to an IRC server, acting as a relay between the server and client, or simply to act as a proxy.{{Citation needed|date=April 2011}} Should the client lose network connectivity, the BNC may stay connected and archive all traffic for later delivery, allowing the user to resume their IRC session without disrupting their connection to the server.<ref>{{cite web\n| url         = http://www.psybnc.at/readme.txt\n| title       = psyBNC Readme\n| accessdate  = 2011-04-10\n| publisher   = psybnc.at\n}}</ref>\n\nFurthermore, as a way of obtaining a bouncer-like effect, an IRC client (typically [[text-based]], for example [[Irssi]]) may be run on an always-on server to which the user connects via [[secure shell|ssh]]. This also allows devices that only have ssh functionality, but no actual IRC client installed themselves, to connect to the IRC, and it allows sharing of IRC sessions.<ref>{{cite web\n| url         = http://chriscarey.com/wordpress/2009/07/18/irc-with-irssi-proxy-screen/\n| title       = IRC with irssi-proxy + screen\n| accessdate  = 2011-04-10\n| last        = Carey\n| first       = Chris\n| date        = 2009-07-18\n| publisher   = chriscarey.com\n}}</ref>\n\nTo keep the IRC client from quitting when the ssh connection closes, the client can be run inside a [[terminal multiplexer]] such as [[GNU Screen]] or [[tmux]], thus staying connected to the IRC network(s) constantly and able to log conversation in channels that the user is interested in, or to maintain a channel's presence on the network. Modelled after this setup, in 2004 an IRC client following the [[client-server]] model, called [[Smuxi]], was launched.<ref>{{cite web\n| url         = http://www.smuxi.org/blog/show/Detachable_Frontend_Core_Rewrite__UML__Windows_Port_kicking_Glade\n| title       = Detachable Frontend (Core Rewrite) / UML / Windows Port (kicking Glade)\n| accessdate  = 2010-07-25\n| date        = 2004-12-25\n| publisher   = smuxi.org\n}}</ref><ref>{{cite web\n| url         = http://www.smuxi.org/page/About\n| title       = About Smuxi\n| accessdate  = 2011-04-10\n| publisher   = smuxi.org\n}}</ref>\n\n==Search engines==\nThere are numerous search engines available to aid the user in finding what they are looking for on IRC.<ref>{{cite book\n| last        = Mutton\n| first       = Paul\n| title       = IRC Hacks\n| edition     = 1st\n| date        = 2004-07-27\n| publisher   = [[O'Reilly Media]]\n| location    = [[Sebastopol, California]]\n| isbn        = 0-596-00687-X\n| pages       = 44 \u2013 46\n| chapter     = Users and Channels\n}}</ref><ref>{{cite book\n| last        = Wang\n| first       = Wallace\n| title       = Steal this File Sharing Book\n| edition     = 1st\n| date        = 2004-10-25\n| publisher   = [[No Starch Press]]\n| location    = [[San Francisco, California]]\n| isbn        = 1-59327-050-X\n| pages       = 65 \u2013 67\n| chapter     = Instant Messaging and Online Chat Rooms: Internet Relay Chat (IRC)\n}}</ref> Generally the search engine consists of two parts, a \"back-end\" (or \"spider/crawler\") and a front-end \"search engine\".\n\nThe back-end (spider/webcrawler) is the work horse of the search engine. It is responsible for crawling IRC servers to index the information being sent across them. The information that is indexed usually consists solely of channel text (text that is publicly displayed in public channels). The storage method is usually some sort of relational database, like [[MySQL]] or [[Oracle database|Oracle]].{{Citation needed|date=January 2010}}\n\nThe front-end \"search engine\" is the user interface to the database. It supplies users with a way to search the database of indexed information to retrieve the data they are looking for. These front-end search engines can also be coded in numerous programming languages.\n\nMost search engines have their own spider that is a single application responsible for crawling IRC and indexing data itself; however, others are \"user based\" indexers. The latter rely on users to install their \"add-on\" to their IRC client; the add-on is what sends the database the channel information of whatever channels the user happens to be on.{{Citation needed|date=August 2009}}\n\nMany users have implemented their own [[ad hoc]] search engines using the logging features built into many IRC clients. These search engines are usually implemented as bots and dedicated to a particular channel or group of associated channels.\n\n==Modern IRC==\nIRC has changed much over its life on the Internet. New server software has added a multitude of new features.\n* [[IRC services|Services]]: Network-operated bots to facilitate registration of nicknames and channels, sending messages for offline users and network operator functions.\n* Extra modes: While the original IRC system used a set of standard user and channel modes, new servers add many new modes for features such as removing color codes from text, or obscuring a user's hostmask (\"cloaking\") to protect from [[denial-of-service attack]]s.{{Citation needed|date=January 2010}}\n* Proxy detection: Most modern servers support detection of users attempting to connect through an insecure (misconfigured or exploited) [[proxy server]], which can then be denied a connection. An example is the Blitzed Open Proxy Monitor or BOPM. This proxy detection software is used by several networks, although that real time list of proxies is defunct since early 2006.<ref>{{cite web|url=http://www.irc-junkie.org/2006-05-07/blitzed-open-proxy-monitor-shuts-down/|title=Blitzed Open Proxy Monitor Shuts Down|quote=The Open Proxy Monitor which has been provided by the Blitzed IRC network has been shut down...The database was so large that it is near to impossible for the team to backup, or find a new location to continue the service. Added to that, most of the team members do not possess the time anymore to keep the service running.}}</ref>\n* Additional commands: New commands can be such things as shorthand commands to issue commands to Services, to network operator only commands to manipulate a user's hostmask.{{Citation needed|date=January 2010}}\n* [[Encryption]]: For the client-to-server leg of the connection [[Secure Sockets Layer|SSL]] might be used (messages cease to be secure once they are relayed to other users on standard connections, but it makes [[Man-in-the-middle attack|eavesdropping]] on or wiretapping an individual's IRC sessions difficult). For client-to-client communication, [[Secure Direct Client-to-Client|SDCC]] (Secure DCC) can be used.{{Citation needed|date=January 2010}}\n* Connection protocol: IRC can be connected to via [[IPv4]], the current standard version of the [[Internet Protocol]], or by [[IPv6]], the next-generation version of the protocol.\n\nThere is an effort of standardization and adding new features to the IRC protocol by IRCv3 working group.<ref name=\"ircv3\"/>\n\n==Character encoding==\nIRC still lacks a single globally accepted standard convention for how to transmit characters outside the 7-bit [[ASCII]] repertoire.\nIRC servers normally{{Clarify|date=July 2009}} transfer messages from a client to another client just as byte sequences, without any interpretation or recoding of [[character (computing)|characters]]. The IRC protocol (unlike e.g. [[MIME]] or [[HTTP]]) lacks mechanisms for announcing and negotiating character encoding options. This has put the responsibility for choosing the appropriate character codec on the client. In practice, IRC channels have largely used the same character encodings that were also used by operating systems (in particular [[Unix]] derivatives) in the respective language communities:\n* '''7-bit era:''' In the early days of IRC, especially among [[North Germanic languages|Scandinavian]] and [[Finnish language]] users, national variants of [[ISO 646]] were the dominant [[character encoding]]s. These encode non-ASCII characters like \u00c4 \u00d6 \u00c5 \u00e4 \u00f6 \u00e5 at code positions 0x5B 0x5C 0x5D 0x7B 0x7C 0x7D ([[US-ASCII]]: '''[''' '''\\''' ''']''' '''{''' '''|''' '''}'''). That is why these codes are always allowed in nicknames. According to RFC 1459, { | } in nicknames should be treated as lowercase equivalents of [ \\ ] respectively.<ref name=\"rfc 1459 2.2 character codes\" /> By the late 1990s, the use of 7-bit encodings had disappeared in favour of [[ISO 8859-1]], and such equivalence mappings were dropped from some IRC daemons.\n* '''8-bit era:''' Since the early 1990s, 8-bit encodings such as [[ISO 8859-1]] have become commonly used for European languages. Russian users had a choice of [[KOI8-R]], [[ISO 8859-5]]{{Citation needed|date=October 2008}}<!-- Some networks offer MacCyrillic under the name \u00abISO 8859-5\u00bb. But MacCyrillic has virtually nothing common with ISO 8859-5, this naming confusion just indicates the depth of programmers' ignorance. --Incnis Mrsi --> and [[CP1251]], and since about 2000, modern Russian IRC networks convert between these different commonly used encodings of the [[Cyrillic script]].\n* '''Multi-byte era:''' For a long time, East Asian IRC channels with ideographic scripts in China, Japan, and Korea have been using multi-byte encodings such as [[Extended Unix Code|EUC]] or [[ISO-2022-JP]]. With the common migration from ISO 8859 to UTF-8 on Linux and Unix platforms since about 2002, [[UTF-8]] has become an increasingly popular substitute for many of the previously used 8-bit encodings in European channels. Some IRC clients are now capable of reading messages both in ISO 8859-1 or UTF-8 in the same channel, heuristically autodetecting which encoding is used. The shift to UTF-8 began in particular on Finnish-speaking IRC ([[:fi:IRC#Merkist\u00f6|Merkist\u00f6]] <small>(Finnish)</small>).\n\nToday, the [[UTF-8]] encoding of [[Unicode]]/[[ISO 10646]] would be the most likely contender for a single future standard character encoding for all IRC communication, if such standard ever relaxed the 510 bytes message size restriction. UTF-8 is ASCII compatible and covers the superset of all other commonly used [[coded character set]] standards.\n\n==File sharing==\nMuch like conventional [[Peer-to-peer|P2P]] file sharing, users can create file servers that allow them to share files with each other by using customised [[IRC bot]]s or scripts for their [[IRC client]]. Often users will group together to distribute [[warez]] via a network of IRC bots.<ref>{{cite web\n| url         = http://www.zdnet.com/news/pirated-movies-now-playing-on-a-server-near-you/122663\n| title       = Pirated movies: Now playing on a server near you\n| accessdate  = 2011-04-10\n| last        = Vamosi\n| first       = Robert\n| date        = 2002-05-08\n| publisher   = [[ZDNet]]\n}}</ref>\n\nTechnically, IRC provides no [[file transfer]] mechanisms itself; file sharing is implemented by IRC ''clients'', typically using the [[Direct Client-to-Client]] (DCC) protocol, in which file transfers are negotiated through the exchange of private messages between clients. The vast majority of IRC clients feature support for DCC file transfers, hence the view that file sharing is an integral feature of IRC.<ref>{{cite web\n| url         = http://www.macobserver.com/tip/2002/04/04.1.shtml\n| title       = IRC 101: What Is It & How Do I Use It?\n| accessdate  = 2011-04-10\n| last        = Sasaki\n| first       = Darla\n| date        = 2002-04-04\n| publisher   = Macobserver.com\n}}</ref> The commonplace usage of this protocol, however, sometimes also causes DCC spam. DCC commands have also been used to exploit vulnerable clients into performing an action such as disconnecting from the server or exiting the client.\n\n==See also==\n{{Portal|Internet Relay Chat}}\n* [[Chat room]]\n* [[Client-to-client protocol]]\n* [[Comparison of instant messaging protocols]]\n* [[Comparison of Internet Relay Chat clients|Comparison of IRC clients]]\n* [[Comparison of Internet Relay Chat daemons|Comparison of IRC daemons]]\n* [[Comparison of mobile Internet Relay Chat clients|Comparison of mobile IRC clients]]\n<!-- * [[Comparison of IRC services]] -->\n* [[Internet slang]]\n* [[List of IRC commands]]\n* [[Serving channel]]\n* [[The Hamnet Players]]\n\n==References==\n{{reflist|30em}}\n\n==Bibliography==\n* {{cite IETF\n| title       = A Discussion on Computer Network Conferencing\n| rfc         = 1324\n| last        = Reed\n| first       = Darren\n| year        = 1992\n| month       = May\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n| ref         = ietf\n}}\n* {{cite IETF\n| title       = Internet Relay Chat Protocol\n| rfc         = 1459\n| last1       = Oikarinen\n| first1      = Jarkko\n| authorlink1 = Jarkko Oikarinen\n| last2       = Reed\n| first2      = Darren\n| year        = 1993\n| month       = May\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n| ref         = ietf\n}}\n* {{cite IETF\n| title       = Internet Relay Chat: Architecture\n| rfc         = 2810\n| last        = Kalt\n| first       = Christophe\n| year        = 2000\n| month       = April\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n| ref         = ietf\n}}\n* {{cite IETF\n| title       = Internet Relay Chat: Channel Management\n| rfc         = 2811\n| last        = Kalt\n| first       = Christophe\n| year        = 2000\n| month       = April\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n| ref         = ietf\n}}\n* {{cite journal\n| last        = Loesch\n| first       = Carl\n| date        = 2003-07-17\n| title       = Functionality Provided by Systems for Synchronous Conferencing\n| publisher   = psyc.eu\n| url         = http://www.psyc.eu/synconf\n| accessdate  = 2011-04-10\n| ref         = harv\n}}\n\n==Further reading==\n* {{cite IETF\n| title       = Internet Relay Chat: Client Protocol\n| rfc         = 2812\n| last        = Kalt\n| first       = Christophe\n| year        = 2000\n| month       = April\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n}}\n* {{cite IETF\n| title       = Internet Relay Chat: Server Protocol\n| rfc         = 2813\n| last        = Kalt\n| first       = Christophe\n| year        = 2000\n| month       = April\n| publisher   = [[Internet Engineering Task Force|IETF]]\n| accessdate  = 2009-10-30\n}}\n* {{cite web\n| url         = http://www.ibiblio.org/pub/academic/communications/logs/\n| title       = Logs of major events in the online community\n| accessdate  = 2011-04-08\n| publisher   = [[ibiblio]]\n| location    = [[Chapel Hill, North Carolina]]\n}}\n* {{cite web\n| url         = http://www.alien.net.au/irc/\n| title       = IRC technical information\n| accessdate  = 2011-04-10\n| last        = Butcher\n| first       = Simon\n| publisher   = alien.net.au\n}}\n\n==External links==\n{{Wikibooks|Internet Technologies|IRC}}\n{{Commons category|IRC}}\n* {{Dmoz|Computers/Internet/Chat/IRC|IRC}}\n* [http://www.alien.net.au/irc/irc2numerics.html IRC/2 Numerics List]\n* [http://www.irc.org/history.html History of IRC]\n* [http://www.irc.org/ IRC.org] \u2013 Technical and Historical IRC6 information; Articles on the history of IRC\n* [http://www.irchelp.org/ IRChelp.org] \u2013 Internet Relay Chat (IRC) help archive; Large archive of IRC-related documents\n* [http://ircv3.net/ IRCv3] \u2013 Working group of developers, who add new features to the protocol and write specs for them\n\n{{IRC topics}}\n{{URI scheme}}\n{{Computer-mediated communication}}\n\n[[Category:Internet Relay Chat| ]]\n[[Category:Application layer protocols]]\n[[Category:Finnish inventions]]\n[[Category:Internet terminology]]\n[[Category:Virtual communities]]\n[[Category:1988 introductions]]\n[[Category:1988 software]]"}]}}}}