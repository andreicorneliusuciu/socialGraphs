{"batchcomplete":"","query":{"normalized":[{"from":"mv","to":"Mv"}],"pages":{"1202613":{"pageid":1202613,"ns":0,"title":"Mv","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{other uses}}\n{{lowercase|title=mv (UNIX)}}\n'''mv''' (short for '''m'''o'''v'''e) is a [[Unix]] command that moves one or more [[computer file|files]] or [[directory (file systems)|directories]] from one place to another. If both filenames are on the same filesystem, this results in a simple file rename; otherwise the file content is copied to the new location and the old file is removed. Using mv requires the user to have write permission for the ''directories'' the file will move between. This is because mv changes the content of both directories (''i.e.'', the source and the target) involved in the move. When using the mv command on files located on the same filesystem, the file's timestamp is not updated.\n\nOn UNIX implementations derived from AT&T UNIX, '''cp''', '''ln'''  and '''mv''' are implemented as a single program with hard-linked binaries. The behavior is selected from the last path component name in '''argv[0]'''.  This is a common technique by which closely related commands that have been packaged as a unit allow the user to specify the particular course of intended action.\n\n==Conflicting existing file==\nWhen a filename is moved to  an existing filename, the existing file is deleted. If the existing file is not writable but is in a directory that is writable, the mv command asks for confirmation (if run from a terminal) before proceeding, unless the -f (force) option is used\n\n== Moving versus copying and removing==\nMoving files ''within the same [[file system]]''  is generally implemented differently than copying the file and then removing the original. On platforms that do not support the [[rename (computing)|rename]] syscall, a new [[Hard link|link]] is added to the new directory and the original one is deleted. The data of file is not accessed.  All POSIX-conformant systems implement the ''rename'' call.\n\nAn actual move (''viz.'', a rename) is dramatically faster than the circuitous copy-and-move procedure.  The file's i-number (short for \"i-node number\") does not change.  No permission is required to read the file being moved insofar as\u2014conceptually speaking\u2014it is only '''cataloguing''' information that is being changed as a result of the \"move.\"  Since the source and target directories are being modified, to wit, entries are being created within the target directory and erased from within the source directory, \"write\" permission in both directories is required to complete the move.  Moving files from one file system to another may fail entirely or may be automatically performed as a unific copy-and-delete action; the actual details are dependent upon the implementation.\n\nWrite permission on the directory being migrated (so to speak) is additionally required in the case where a directory is being re-parented, ''sciz.'', moved to a different parent directory.  This is because the \"..\" entry\u2014which can always be used as an \"alias\" for its parent if you don't know the parent's name\u2014must be changed within the migrant ''per se''.\n\n\"Renaming\" a directory from within one parent to within a different parent requires write permission in the directory being named, aside from permission to modify the old and new parents.  This is because the i-number for the directory entry \"..\" (which can be used '''in any context''' as an alias for the parent of the current directory) changes as a result of the rename.\n\n==Options==\nMost versions <ref>[[Single Unix Specification#1980s: Motivation]]</ref> of mv support:\n* <tt>-i</tt> '''i'''nteractively process, write a prompt to standard error before moving a file that would overwrite an existing file.  If the response from the standard input begins with the character`y' or `Y', the move is attempted.  (overrides previous -f or -n  options.)\n* <tt>-f</tt> '''f'''orce overwriting the destination (overrides previous -i or -n options).\n\n==Examples==\n<source lang=\"bash\">\n mv myfile mynewfilename     # renames 'myfile' to 'mynewfilename'.\n mv myfile ~/myfile          # moves 'myfile' from the current directory to user's home directory.\n                             # the notation '~' refers to the user's \"home\" (login) directory\n mv myfile subdir/myfile     # moves 'myfile' to 'subdir/myfile' relative to the current directory.\n mv myfile subdir            # same as the previous command, filename is implied to be the same.\n mv myfile subdir/myfile2    # moves 'myfile' to 'subdir' named  'myfile2'.\n mv be.03 /mnt/bkup/bes      # copies 'be.03' to the mounted volume 'bkup' the 'bes' directory, \n                             # then 'be.03' is removed.\n mv afile another /home/yourdir/yourfile mydir \n                             # moves multiple files to directory 'mydir'.\n mv /var/log/*z ~/logs       # takes longer than expected if '/var' is on a different file system, \n                             # as it frequently is, since files will be copied & deleted\n                             # be careful when using globbable file name patterns containing\n                             # the characters ?*[ to ensure that the arguments passed to 'mv'\n                             # include a list of non-directories and a terminating directory\n \n man mv                      # displays the complete UNIX manual page for the 'mv' command.\n \n</source>\n\nNote that, in the above example, ''/mnt'' referred to the directory (the \"mount point\") over which a given file system is mounted.  Naming such directories ''/mnt'' is '''a popular convention''' but is by no means necessary. A \"file system\" can be thought of as an independent tree that is logically regarded as a unit; its root is \"mounted\" atop a directory of the administrator's choice.  Any previous contents of that directory are invisible, but they are \"restored\" when the new volume is unmounted.\n\n==See also==\n*[[cp (Unix)|cp]]\n*[[ln (Unix)|ln]]\n*[[rm (Unix)|rm]]\n*[[List of Unix programs]]\n*[[move (command)]]\n*[[ren (command)]]\n\n== References ==\n{{Reflist}}\n\n== External links ==\n{{Wikibooks|Guide to Unix|Commands/File System Utilities#mv}}\n*{{man|cu|mv|SUS|move files}}\n\n{{Unix commands}}\n\n[[Category:Unix SUS2008 utilities]]"}]}}}}