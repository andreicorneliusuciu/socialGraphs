{"batchcomplete":"","query":{"normalized":[{"from":"Programming_tool","to":"Programming tool"}],"pages":{"370882":{"pageid":370882,"ns":0,"title":"Programming tool","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{original research|date=November 2016}}\n{{unreferenced|date=November 2016}}\n{{software development process}}\nA '''programming tool''' or '''software development tool''' is a [[computer program]] that [[software developer]]s use to create, debug, maintain, or otherwise support other programs and applications. The term usually refers to relatively simple programs, that can be combined together to accomplish a task, much as one might use multiple hand [[tool]]s to fix a physical object. The ability to use a variety of tools productively is one hallmark of a skilled [[software engineer]].\n\nThe most basic tools are a [[source code editor]] and a [[compiler]] or [[Interpreter (computing)|interpreter]], which are used ubiquitously and continuously. Other tools are used more or less depending on the language, development methodology, and individual engineer, and are often used for a discrete task, like a [[debugger]] or [[Profiling (computer programming)|profiler]]. Tools may be discrete programs, executed separately \u2013 often from the [[command line]] \u2013 or may be parts of a single large program, called an [[integrated development environment]] (IDE). In many cases, particularly for simpler use, simple ad hoc techniques are used instead of a tool, such as [[print debugging]] instead of using a debugger, manual timing (of overall program or section of code) instead of a profiler, or tracking bugs in a  text file or spreadsheet instead of a [[bug tracking system]].\n\nThe distinction between tools and applications is murky. For example, developers use simple databases (such as a [[Flat file database|file containing a list of important values]]) all the time as tools.{{Dubious|date=March 2010}} However a full-blown database is usually thought of as an application or software in its own right. For many years, [[Computer-aided software engineering|computer-assisted software engineering]] (CASE) tools were sought after. Successful tools have proven elusive.In one sense, CASE tools emphasized design and architecture support, such as for UML. But the most successful of these tools are IDEs.\n\n==List of tools==\n\nSoftware tools come in many forms:\n*[[Binary code compatibility|Binary compatibility]] analysis tools\n*[[Bug database]]s: [[Comparison of issue tracking systems]] - Including bug tracking systems\n*Build tools: [[Build automation]], [[List of build automation software]]\n*[[Call graph]]\n*[[Code coverage]]: [[Code coverage#Software code coverage tools]].\n*[[Code review]]: [[List of tools for code review]]\n*Code sharing sites: [[Freshmeat]], [[Krugle]], [[Sourceforge]], [[GitHub]]. See also [[:Category:Code search engines|Code search engines]]. <!-- [http://www.ucodit.com/ UCodit]  article deleted 23-Mar-2007; see [[Wikipedia:Articles for deletion/UCodit]] -->\n*[[Compiler|Compilation]] and [[Linker (computing)|linking]] tools: [[GNU toolchain]], [[GNU Compiler Collection|gcc]], [[Microsoft Visual Studio]], [[CodeWarrior]], [[Xcode]], [[Intel C Compiler|ICC]]\n*[[Debugger]]s: [[Debugger#List of debuggers]]. See also [[Debugging]].\n*[[Disassembler]]s: Generally [[reverse-engineering]] tools.\n*[[Documentation generator]]s: [[Comparison of documentation generators]], help2man, [[Plain Old Documentation]], [[asciidoc]]\n*[[Formal methods]]: Mathematical techniques for specification, development and verification\n*[[Graphical user interface builder|GUI interface generators]]\n*Library interface generators: [[SWIG]]\n*Integration Tools\n*[[Memory debugger]]s are frequently used in programming languages (such as [[C (programming language)|C]] and [[C++]]) that allow [[manual memory management]] and thus the possibility of [[memory leak]]s and other problems.  They are also useful to optimize efficiency of memory usage.  Examples: [[dmalloc]], [[Electric Fence]], [[Insure++]], [[Valgrind]]\n*[[Parsing|Parser generators]]: [[Parsing#Parser development software]]\n*[[Profiling (computer programming)|Performance analysis]] or profiling: [[List of performance analysis tool]]\n*[[Revision control]]: [[List of revision control software]], [[Comparison of revision control software]]\n*[[Scripting language]]s: [[PHP]], [[AWK (programming language)|Awk]], [[Perl]], [[Python (programming language)|Python]], [[REXX]], [[Ruby (programming language)|Ruby]], [[operating system shell|Shell]], [[Tcl]]\n*Search: [[grep]], [[find]]\n*Source code Clones/Duplications Finding: [[Duplicate code#Tools]]\n*[[Source code editor]]\n**[[Text editor]]s: [[List of text editors]], [[Comparison of text editors]]\n*[[Code style|Source code formatting]]: [[indent (Unix)|indent]]\n*[[Source code generation]] tools: [[Automatic programming#Implementations]]\n*[[Static code analysis]]: [[Lint (software)|lint]], [[List of tools for static code analysis]]\n*Unit testing: [[List of unit testing frameworks]]\n\n==IDEs==\n\n[[Integrated development environment]]s combine the features of many tools into one package. They for example make it easier to do specific tasks, such as searching for content only in files in a particular project. IDEs may for example be used for development of enterprise-level applications.\n\nDifferent aspects of IDEs for specific programming languages can be found in this [[comparison of integrated development environments]].\n\n==See also==<!-- Please respect alphabetical order -->\n*[[Computer aided software engineering]] tools\n*[[Computer science]]\n*[[Configuration System]]\n*[[Scripting language]]\n*[[Software development kit]]\n*[[Software engineering]] and [[list of software engineering topics]]\n*[[Software systems]]\n*[[Toolkits for User Innovation]]\n\n==References==\n{{More footnotes|date=August 2010}}\n{{reflist}}\n{{refbegin}}\n* [http://www.csm.ornl.gov/workshops/Petascale07 Software Development Tools for Petascale Computing Workshop 2007]\n* {{Citation |last=Kernighan |first=Brian W. |author-link=Brian Kernighan |last2=Plauger |first2=P. J. |author2-link=P. J. Plauger |year=1976 |title=Software Tools |publisher=Addison-Wesley |pages=352 |isbn=0-201-03669-X}}\n{{refend}}\n\n==External links==\n{{commonscatinline|Programming tools}}\n{{Authority control}}\n{{Software engineering}}\n\n[[Category:Computer programming tools|*]]"}]}}}}