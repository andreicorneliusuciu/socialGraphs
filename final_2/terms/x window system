{"batchcomplete":"","query":{"normalized":[{"from":"X_Window_System","to":"X Window System"}],"pages":{"34147":{"pageid":34147,"ns":0,"title":"X Window System","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{Redirect|X11}}\n{{Use dmy dates|date=November 2014}}\n[[File:X-Window-System.png|thumb|300px|A historical example of graphical user interface and applications common to the MIT X Consortium's distribution running under the [[twm]] window manager: [[Xterm|X Terminal]], [[Xbiff]], [[xload]] and a graphical [[man page|manual page]] browser]]\n[[File:Screenshot of KDE..png|thumb|300px|A modern example of a graphical user interface using X11 and [[KDE]].]]\n\nThe '''X Window System''' ('''X11''', or shortened to simply '''X''', and sometimes informally X-Windows) is a [[windowing system]] for [[bitmap]] displays, common on [[UNIX-like]] computer [[operating systems]].\n\nX provides the basic framework for a [[Graphical user interface|GUI]] environment: drawing and moving [[window (computing)|window]]s on the [[display device]] and interacting with a [[computer mouse|mouse]] and [[computer keyboard|keyboard]]. X does not mandate the user interface{{snd}} this is handled by individual programs. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.\n\nX originated at the [[Massachusetts Institute of Technology]] (MIT) in 1984. The protocol has been version 11 (hence \"X11\") since September 1987. The [[X.Org Foundation]] leads the X project, with the current reference implementation, [[X.Org Server]], available as [[free and open source software]] under the [[MIT License]] and similar [[permissive free software licences|permissive licenses]].<ref>{{cite web | url = http://ftp.x.org/pub/X11R7.0/doc/html/LICENSE.html | title = Licenses | work= X11 documentation | publisher = X.org | date = 19 December 2005 | accessdate = 23 October 2007 }}</ref>\n\n== Purpose and abilities ==\nX is an architecture-independent system for remote graphical user interfaces and input device capabilities. Each person using a networked [[computer terminal|terminal]] has the ability to interact with the display with any type of user input device.\n\nIn its standard distribution it is a complete, albeit simple, display and interface solution which delivers a standard [[widget toolkit|toolkit]] and [[protocol stack]] for building graphical user interfaces on most [[Unix-like]] operating systems and [[OpenVMS]], and has been [[porting|ported]] to many other contemporary general purpose [[operating system]]s.\n\nX provides the basic [[software framework|framework]], or primitives, for building such GUI environments: drawing and moving [[window (computing)|windows]] on the [[computer monitor|display]] and interacting with a mouse, keyboard or touchscreen. X does not mandate the [[user interface]]; individual client programs handle this. Programs may use X's graphical abilities with no user interface. As such, the visual styling of X-based environments varies greatly; different programs may present radically different interfaces.\n\nUnlike most earlier display protocols, X was specifically designed to be used over network connections rather than on an integral or attached display device. X features [[network transparency]], which means an X program running on a computer somewhere on a network (such as the Internet) can display its user interface on an X server running on some other computer on the network. The X server is typically the provider of graphics resources and keyboard/mouse events to X clients, meaning that the X server is usually running on the computer in front of a human user, while the X client applications run anywhere on the network and communicate with the user's computer to request the rendering of graphics content and receive events from input devices including keyboards and mice.\n\nThe fact that the term \"server\" is applied to the software in front of the user is often surprising to users accustomed to their programs being clients to services on remote computers.  Here, rather than a remote database being the resource for a local app, the user's graphic display and input devices become resources made available by the local X server to both local and remotely hosted X client programs who need to share the user's graphics and input devices to communicate with the user.\n\nX's network protocol is based on X command primitives.  This approach allows both 2D and (through extensions like GLX) 3D operations by an X client application which might be running on a different computer to still be fully accelerated on the X server's display.  For example, in classic OpenGL (before version 3.0), display lists containing large numbers of objects could be constructed and stored entirely in the X server by a remote X client program, and each then rendered by sending a single glCallList(which) across the network.\n\nX provides no native support for audio; several projects exist to fill this niche, some also providing [[Network transparency|transparent network]] support.\n\n== Software architecture ==\n{{details|X Window System protocols and architecture|X Window System core protocol}}\n[[File:X client server example.svg|thumb|Simple example: the X server receives input from a local keyboard and mouse and displays to a screen. A [[web browser]] and a [[terminal emulator]] run on the user's workstation and a terminal emulator runs on a remote computer but is controlled and monitored from the user's machine]]\n\nX uses a [[client\u2013server]] model: an X server communicates with various ''client'' programs. The server accepts requests for graphical output (windows) and sends back user input (from keyboard, mouse, or touchscreen). The server may function as:\n\n* an application displaying to a window of another display system\n* a system program controlling the video output of a [[personal computer|PC]]\n* a dedicated piece of hardware\n\nThis client\u2013server terminology{{snd}} the user's terminal being the server and the applications being the clients{{snd}} often confuses new X users, because the terms appear reversed. But X takes the perspective of the application, rather than that of the end-user: X provides display and I/O services to applications, so it is a server; applications use these services, thus they are clients.\n\nThe [[communications protocol|communication protocol]] between server and client operates [[computer network|network]]-transparently: the client and server may run on the same machine or on different ones, possibly with different [[computer architecture|architectures]] and [[operating system]]s. A client and server can even communicate [[computer security|securely]] over the Internet by [[tunneling protocol|tunneling]] the connection over an [[encrypted]] network session.\n\nAn X client itself may emulate an X server by providing display services to other clients. This is known as \"X nesting\". Open-source clients such as [[Xnest]] and [[Xephyr]] support such X nesting.\n\nTo use an X client application on a remote machine, the user may do the following:\n\n* on the local machine, open a [[terminal emulator|terminal window]]\n* use [[secure shell|ssh]] with the X forwarding argument to connect to the remote machine\n* request local display/input service (''e.g.'', <kbd>export DISPLAY=</kbd>''[user's machine]''<kbd>:0</kbd> if not using SSH with X forwarding enabled)\n\nThe remote X client application will then make a connection to the user's local X server, providing display and input to the user.\n\nAlternatively, the local machine may run a small program that connects to the remote machine and starts the client application.\n\nPractical examples of remote clients include:\n\n* administering a remote machine graphically (similar to using remote desktop, but with single windows)\n* using a client application to join with large numbers of other terminal users in collaborative workgroups\n* running a computationally intensive simulation on a remote machine and displaying the results on a local desktop machine\n* running graphical software on several machines at once, controlled by a single display, keyboard and mouse\n\n== Principles ==\nIn 1984, [[Bob Scheifler]] and [[Jim Gettys]] set out the early principles of X:<ref name=xcoreext/>\n\n* ''Do not add new functionality unless an implementor cannot complete a real application without it.''\n* ''It is as important to decide what a system is not as to decide what it is. Do not serve all the world's needs; rather, make the system [[extensible]] so that additional needs can be met in an upwardly compatible fashion.''\n* ''The only thing worse than generalizing from one example is generalizing from no examples at all.''\n* ''If a problem is not completely understood, it is probably best to provide no solution at all.''\n* '' If you can get 90 percent of the desired effect for 10 percent of the work, use the simpler solution.'' (See also [[worse is better]].)\n* '' Isolate complexity as much as possible.''\n* ''Provide [[Separation of mechanism and policy|mechanism rather than policy]]. In particular, place user interface policy in the clients' hands.''\n\nThe first principle was modified during the design of X11 to: ''\"Do not add new functionality unless you know of some real application that will require it.\"''<ref name=xcoreext/>\n\nX has largely kept to these principles. The sample implementation is developed with a view to extension and improvement of the implementation, while remaining compatible with the original 1987 protocol.\n\n== User interfaces ==\n{{stack|\n[[File:GNOME Shell.png|thumb|[[GNOME]] graphical user interface]]\n[[File:KDE 4.png|thumb|[[KDE Plasma Workspaces|KDE Plasma]] graphical user interface]]\n}}\n[[File:Xfce-4.4.png|thumb|left|[[Xfce]] graphical user interface]]\n\nX primarily defines protocol and graphics primitives{{snd}} it deliberately contains no specification for application [[user-interface]] design, such as [[button (computing)|button]], [[menu (computing)|menu]], or window [[title bar|title-bar]] styles. Instead, application software{{snd}} such as [[window manager]]s, GUI [[widget toolkit]]s and [[desktop environment]]s, or application-specific [[graphical user interfaces]]{{snd}} define and provide such details. As a result, there is no ''typical'' X interface and several different desktop environments have become popular among users.\n\nA window manager controls the placement and appearance of application windows. This may result in desktop interfaces reminiscent of those of [[Microsoft Windows]] or of the Apple [[Macintosh]] (examples include [[GNOME 2]], [[KDE Software Compilation|KDE]], [[Xfce]]) or have radically different controls (such as a [[tiling window manager]], like [[wmii]] or [[Ratpoison]]). Some interfaces such as [[Sugar (desktop environment)|Sugar]] or [[Chrome OS]] eschew the [[desktop metaphor]] altogether, simplifying their interfaces for specialized applications. Window managers range in sophistication and complexity from the bare-bones (''e.g.'', [[twm]], the basic window manager supplied with X, or evilwm, an extremely light window-manager) to the more comprehensive desktop environments such as [[Enlightenment (window manager)|Enlightenment]] and even to application-specific window-managers for vertical markets such as point-of-sale.\n\nMany users use X with a desktop environment, which, aside from the window manager, includes various applications using a consistent user-interface. Popular desktop environments include GNOME, KDE Software Compilation and Xfce. The [[UNIX98]] standard environment is the [[Common Desktop Environment]] (CDE). The [[freedesktop.org]] initiative addresses interoperability between desktops and the components needed for a competitive X desktop.\n\n== Implementations ==\nThe [[X.Org Server|X.Org implementation]] is the [[Canonical Model|canonical]] implementation of X. Owing to liberal [[software license|licensing]], a number of variations, both [[free and open source software|free and open source]] and [[proprietary software|proprietary]], have appeared. Commercial Unix vendors have tended to take the reference implementation and adapt it for their hardware, usually customizing it and adding proprietary extensions.\n[[File:Wfm cygwinx rootless.png|thumb|200px|left|[[Cygwin/X]] running rootless on Microsoft [[Windows XP]] via the command <code>startx -- -rootless</code>. The screen shows X applications ([[xeyes]], xclock and [[xterm]]) sharing the screen with native Microsoft Windows applications (Date & Time and Calculator).]]\n\nUp to 2004, [[XFree86]] provided the most common X variant on free [[Unix-like]] systems. XFree86 started as a [[porting|port]] of X for [[Intel 80386|386]]-compatible PCs and, by the end of the 1990s, had become the greatest source of technical innovation in X and the ''de facto'' standard of X development.<ref name=\"xfree86.org\">[http://www.xfree86.org/pipermail/forum/2004-February/003945.html Announcement: Modification to the base XFree86(TM) license.] 2 February 2004</ref> Since 2004, however, the [[X.Org Server]], a [[fork (software)|fork]] of XFree86, has become predominant.\n\nWhile it is common to associate X with Unix, X servers also exist natively within other graphical environments. VMS Software Inc.'s [[OpenVMS]] operating system includes a version of X with [[Common Desktop Environment]] (CDE), known as [[DECwindows]], as its standard desktop environment.{{citation needed|date=August 2015}} [[Apple Inc.|Apple]] originally ported X to [[OS X]] in the form of X11.app, but that has been deprecated in favor of the [[XQuartz]] implementation. Third-party servers under Apple's older operating systems in the 1990s, System 7, and Mac OS 8 and 9, included Apple's [[MacX]] and White Pine Software's [[eXodus]].\n\n[[Microsoft Windows]] is not shipped with support for X, but many third-party implementations exist, as [[free and open source software]] such as [[Cygwin/X]], and proprietary products such as [[Hummingbird Ltd.|Exceed]], [[MKS X/Server]], [[Attachmate#PC X server|Reflection X]], [[X-Win32]] and [[Xming]].\n\nThere are also [[Java (programming language)|Java]] implementations of X servers. [[WeirdX]] runs on any platform supporting [[Swing (Java)|Swing]] 1.1, and will run as an applet within most [[Web browser|browsers]]. The [https://code.google.com/p/android-xserver/ Android X Server] is an open source Java implementation that runs on [[Android (operating system)|Android]] devices.\n\nWhen an operating system with a native windowing system hosts X in addition, the X system can either use its own normal desktop in a separate host window or it can run ''rootless'', meaning the X desktop is hidden and the host windowing environment manages the geometry and appearance of the hosted X windows within the host screen.\n\n=== X terminals ===\n[[File:Network Computing Devices NCD-88k X terminal.jpg|thumb|right|A [[Network Computing Devices]] NCD-88k X terminal]]\n{{Main article|X terminal}}\nAn ''X terminal'' is a [[thin client]] that only runs an X server. This architecture became popular for building inexpensive terminal parks for many users to simultaneously use the same large computer server to execute application programs as clients of each user's X terminal. This use is very much aligned with the original intention of the MIT project.\n\nX terminals explore the network (the local [[broadcast domain]]) using the [[XDMCP|X Display Manager Control Protocol]] to generate a list of available hosts that are allowed as clients. One of the client hosts should run an [[X display manager (program type)|X display manager]].\n\nA limitation of X terminals and most thin clients is that they are not capable of any input or output other than the keyboard, mouse, and display. All relevant data is assumed to exist solely on the remote server, and the X terminal user has no methods available to save or load data from a local [[peripheral]] device.\n\nDedicated (hardware) X terminals have fallen out of use; a [[Personal Computer|PC]] or modern [[thin client]] with an X server typically provides the same functionality at the same, or lower, cost.\n\n== Limitations and criticism ==\n{{Criticism section|date=July 2014}}\n\n''[[The Unix-Haters Handbook]]'' (1994) devoted a full chapter to the problems of X.<ref name=\"The X-Windows Disaster\">{{cite web|url=http://www.art.net/~hopkins/Don/unix-haters/x-windows/disaster.html |title=The X-Windows Disaster |publisher=[[Art.Net]] |accessdate=10 November 2009}}</ref> ''Why X Is Not Our Ideal Window System'' (1990) by Gajewska, Manasse and McCormack detailed problems in the protocol with recommendations for improvement.\n\n=== User interface issues ===\nThe lack of design guidelines in X has resulted in several vastly different interfaces, and in applications that have not always worked well together. The [[Inter-Client Communication Conventions Manual]] (ICCCM), a specification for client interoperability, has a reputation of being difficult to implement correctly. Further standards efforts such as [[Motif (software)|Motif]] and [[Common Desktop Environment|CDE]] did not alleviate problems. This has frustrated users and programmers.<ref>[http://lists.debian.org/debian-user/1996/11/msg00637.html Re: X is painful] 15 November 1996</ref> Graphics programmers now generally address consistency of application [[look and feel]] and communication by coding to a specific desktop environment or to a specific widget toolkit, which also avoids having to deal directly with the ICCCM.\n\nX also lacks native support for user-defined stored procedures on the X server, in the manner of [[NeWS]]{{snd}} there is no [[Turing-complete]] scripting facility. Various desktop environments may thus offer their own (usually mutually incompatible) facilities.\n\n=== Computer accessibility related issues ===\nSystems built upon X may have [[computer accessibility|accessibility]] issues that make utilization of a computer difficult for disabled users, including [[right click]], [[double click]], [[middle click]], [[mouse-over]], and [[focus stealing]]. Some X11 clients deal with accessibility issues better than others, so persons with accessibility problems are not locked out of using X11. However, there is no accessibility standard or accessibility guidelines for X11. Within the X11 standards process there is no working group on accessibility, however, accessibility needs are being addressed by software projects to provide these features on top of X.\n\nThe [[Orca (assistive technology)|Orca]] project adds accessibility support to the X Window System, including implementing an API ([[AT-SPI]]<ref>{{cite web|url=https://wiki.gnome.org/Projects/Orca |title=Orca |website=wiki.gnome.org |date=24 November 2011 |accessdate=7 November 2012}}</ref>). This is coupled with  Gnome's [[Accessibility Toolkit|ATK]] to allow for accessibility features to be implemented in X programs using the Gnome/GTK APIs.<ref>{{cite web|url=http://developer.gnome.org/atk/unstable/ |title=ATK - Accessibility Toolkit |website=developer.gnome.org |date= |accessdate=7 November 2012}}</ref> KDE provides a different set of accessibility software, including a text-to-speech converter and a screen magnifier.<ref>{{cite web |url=http://www.kde.org/applications/utilities/ |title=KDE Accesibility |publisher= KDE e.V. |accessdate=6 January 2013}}</ref> The other major desktops (LXDE, Xfce and Enlightenment) attempt to be compatible with ATK.\n\n=== Network ===\n[[File:X11 ssh tunnelling.png|right|250px|thumb|Example of tunnelling an X11 application over SSH]]\n\nAn X client cannot generally be detached from one server and reattached to another unless its code specifically provides for it ([[emacs]] is one of the few common programs with this ability). As such, moving an entire session from one X server to another is generally not possible. However, approaches like [[Virtual Network Computing]] (VNC), [[NX technology|NX]] and [[Xpra]] allow a virtual session to be reached from different X servers (in a manner similar to [[GNU Screen]] in relation to terminals), and other applications and toolkits provide related facilities.<ref>[http://icie.cs.byu.edu/cs656/Papers/Gettys.pdf SNAP Computing and the X Window System]  2005 (section 4.6, the [[xmove]] program)</ref>\nWorkarounds like [[x11vnc]] (''VNC :0 viewers''), Xpra's shadow mode and NX's nxagent shadow mode also exist to make the current X-server screen available. This ability allows the user interface (mouse, keyboard, monitor) of a running application to be switched from one location to another without stopping and restarting the application.\n\nNetwork traffic between an X server and remote X clients is not encrypted by default. An attacker with a [[packet sniffer]] can intercept it, making it possible to view anything displayed to or sent from the user's screen. The most common way to encrypt X traffic is to establish a [[Secure Shell]] (SSH) tunnel for communication.\n\nLike all [[thin client]]s, when using X across a network, bandwidth limitations can impede the use of [[bitmap]]-intensive applications that require rapidly updating large portions of the screen with low latency, such as 3D animation or photo editing. Even a relatively small uncompressed 640x480x24&nbsp;bit 30&nbsp;fps video stream can easily outstrip the bandwidth of a 100&nbsp;Mbit/s network for a single client. In contrast, modern versions of X generally have extensions such as [[Mesa (computer graphics)|MESA]] allowing local display of a local program's graphics to be optimized to bypass the network model and directly control the video card, for use of full-screen video, rendered 3D applications, and other such applications.\n\n=== Client\u2013server separation ===\nX's design requires the clients and server to operate separately, and device independence and the separation of client and server incur overhead. Most of the overhead comes from network [[round-trip delay time]] between client and server ([[latency (engineering)|latency]]) rather than from the protocol itself: the best solutions to performance issues depend on efficient application design.<ref>[http://keithp.com/~keithp/talks/lbxpost/paper.html An LBX Postmortem]  24 January 2001</ref> A common criticism of X is that its network features result in excessive complexity and decreased performance if only used locally.\n\nModern X implementations use [[Unix domain socket]]s for efficient connections on the same host. Additionally [[Shared memory (interprocess communication)|shared memory]] (via the [[MIT-SHM]] extension) can be employed for faster client\u2013server communication.<ref>[http://www.xfree86.org/current/mit-shm.html The XFree86 documentation of the MIT-SHM extension] 14 May 2009</ref> However, the programmer must still explicitly activate and use the shared memory extension.  It is also necessary to provide fallback paths in order to stay compatible with older implementations, and in order to communicate with non-local X servers.\n\n== Competitors ==\nSome people have attempted writing alternatives to and replacements for X. Historical alternatives include [[Sun Microsystems|Sun]]'s [[NeWS]], which failed in the market, and [[NeXT]]'s [[Display PostScript]], both [[PostScript]]-based systems supporting user-definable display-side procedures, which X lacked. Current alternatives include:\n\n* [[Mac OS X]] (and its mobile counterpart, [[iOS]]) implement their own windows system known as [[Quartz (graphics layer)|Quartz]].  When [[Apple Inc.]] bought NeXT, and used [[NeXTSTEP]] to construct [[Mac OS X]], they replaced Display PostScript with [[Quartz (graphics layer)|Quartz]].  [[Mike Paquette]], one of the authors of Quartz, explained that if Apple had added support for all the features it wanted to include into X11, it would not bear much resemblance to X11 nor be compatible with other servers anyway.<ref>[http://developers.slashdot.org/comments.pl?sid=75257&cid=6734612 Why Apple didn't use X for the window system] 19 August 2007</ref>\n* [[Android (operating system)|Android]] which runs on the [[Linux kernel]], uses its own system for drawing the user interface known as [[SurfaceFlinger]]. 3D rendering is handled by [[EGL (API)|EGL]].\n* [[Wayland (display server protocol)|Wayland]] is being developed by several X.Org developers as a prospective replacement for X.  It works directly with the [[GPU]] hardware, via [[Direct Rendering Infrastructure|DRI]]. Wayland can run an X.org server as a client, which can be rootless.<ref>\n{{cite web\n |url=http://lists.freedesktop.org/archives/wayland-devel/2010-November/000292.html\n |author=Darxus\n |title=\"hosted\" patch for nouveau \u2013 X under wayland\n |date=27 November 2010\n |quote=It's possible to run X.org as a client of wayland, rootless or not, if you have an Intel video card\n}}\n</ref> A proprietary port of the Wayland backend to the [[Raspberry Pi]] was completed in 2013.<ref>{{cite web|url=http://worldofgnome.org/wayland-in-raspberry-wayland-in-gnome|title=Wayland in Raspberry \u00a6 Wayland in GNOME|first=Alex|last=Diavatis|work=World Of Gnome|date=11 June 2013}}</ref>  The project reached version 1.0 in 2012. Like Android, Wayland is EGL-based.\n* [[Mir (software)|Mir]] is a project from [[Canonical Ltd.]] with goals similar to Wayland.<ref>{{cite web|url=https://wiki.ubuntu.com/MirSpec |title=MirSpec \u2013 Ubuntu Wiki |publisher=Wiki.ubuntu.com |date= |accessdate=6 March 2013}}</ref> Mir is intended to work with mobile devices using ARM chipsets (a stated goal is compatibility with Android device-drivers) as well as x86 desktops.  Like Android, Mir/UnityNext are EGL-based.  Backwards compatibility with X client-applications is accomplished via Xmir.\n* Other alternatives attempt to avoid the overhead of X by working directly with the hardware; such projects include [[DirectFB]].<ref>[http://fbdri.sourceforge.net/ DRI for framebuffer consoles] 15 December 2009</ref> (The [[Direct Rendering Infrastructure]] (DRI), which aims to provide a reliable kernel-level interface to the [[framebuffer]], might{{citation needed|date=September 2013}} make these efforts redundant.)\n\nAdditional ways to achieve a functional form of the 'network transparency' feature of X, via network transmissibility of graphical services, include:\n\n* [[Virtual Network Computing]] (VNC), a very low-level system which sends compressed bitmaps across the network; the Unix implementation includes an X server\n* [[Remote Desktop Protocol]] (RDP), which is similar to VNC in purpose, but originated on Microsoft Windows before being ported to Unix-like systems; cf [[NX technology|NX]], [[GotoMyPc]], etc.\n* [[Citrix XenApp]], an X-like protocol and application stack for Microsoft Windows\n* [[Tarantella, Inc.|Tarantella]], which provides a Java-based remote-gui-client for use in web browsers\n\n== History ==\n\n=== Predecessors ===\nSeveral bitmap display systems preceded X. From [[Xerox]] came the [[Xerox Alto|Alto]] (1973) and the [[Xerox Star|Star]] (1981). From [[Apollo Computer]] came Display Manager (1981). From [[Apple Inc.|Apple]] came the [[Apple Lisa|Lisa]] (1983) and the [[Macintosh]] (1984). The [[Unix]] world had the [[Andrew Project]] (1982) and [[Rob Pike]]'s [[Blit (computer terminal)|Blit]] terminal (1982).\n\nCarnegie Mellon University produced a remote-access application called Alto Terminal, that displayed overlapping windows on the Xerox Alto, and made remote hosts (typically DEC VAX systems running Unix) responsible for handling window-exposure events and refreshing window contents as necessary.\n\nX derives its name as a successor to a pre-1983 window system called [[W Window System|W]] (the letter preceding X in the [[English alphabet]]). W ran under the [[V (operating system)|V operating system]]. W used a network protocol supporting terminal and graphics windows, the server maintaining display lists.\n\n=== Origin and early development ===\n{{ quote box|\n<pre style=\"border: none\">\nFrom: rws@mit-bold (Robert W. Scheifler)\nTo: window@athena\nSubject: window system X\nDate: 19 Jun 1984 0907-EDT (Tuesday)\n\nI've spent the last couple weeks writing a window\nsystem for the VS100. I stole a fair amount of code\nfrom W, surrounded it with an asynchronous rather\nthan a synchronous interface, and called it X. Overall\nperformance appears to be about twice that of W. The\ncode seems fairly solid at this point, although there are\nstill some deficiencies to be fixed up.\n\nWe at LCS have stopped using W, and are now\nactively building applications on X. Anyone else using\nW should seriously consider switching. This is not the\nultimate window system, but I believe it is a good\nstarting point for experimentation. Right at the moment\nthere is a CLU (and an Argus) interface to X; a C\ninterface is in the works. The three existing\napplications are a text editor (TED), an Argus I/O\ninterface, and a primitive window manager. There is\nno documentation yet; anyone crazy enough to\nvolunteer? I may get around to it eventually.\n\nAnyone interested in seeing a demo can drop by\nNE43-531, although you may want to call 3-1945\nfirst. Anyone who wants the code can come by with a\ntape. Anyone interested in hacking deficiencies, feel\nfree to get in touch.\n</pre>\n| The email in which X was introduced to the [[Project Athena]] community at [[MIT]] in June 1984<ref>{{cite web|url=http://www.talisman.org/x-debut.shtml |title=Debut of X |publisher=Talisman |date=19 June 1984 |accessdate=7 November 2012}}</ref>\n}}\n\nThe original idea of X emerged at MIT in 1984 as a collaboration between [[Jim Gettys]] (of [[Project Athena]]) and [[Bob Scheifler]] (of the [[MIT Laboratory for Computer Science]]). Scheifler needed a usable display environment for debugging the Argus system. [[Project Athena]] (a joint project between [[Digital Equipment Corporation]] (DEC), MIT and [[IBM]] to provide easy access to computing resources for all students) needed a platform-independent graphics system to link together its heterogeneous multiple-vendor systems; the window system then under development in [[Carnegie Mellon University]]'s [[Andrew Project]] did not make licenses available, and no alternatives existed.\n\nThe project solved this by creating a protocol that could both run local applications and call on remote resources. In mid-1983 an initial port of W to Unix ran at one-fifth of its  speed under V; in May 1984, Scheifler replaced the [[Synchronization (computer science)|synchronous]] [[protocol (computing)|protocol]] of W with an [[wikt:asynchronous|asynchronous]] protocol and the display lists with immediate mode graphics to make X version 1. X became the first windowing system environment to offer true hardware independence and vendor independence.\n\nScheifler, Gettys and Ron Newman set to work and X progressed rapidly. They released Version 6 in January 1985. DEC, then preparing to release its first [[Ultrix]] workstation, judged X the only windowing system likely to become available in time. DEC engineers ported X6 to DEC's QVSS display on [[MicroVAX]].\n\nIn the second quarter of 1985, X acquired [[X11 color names|color]] support to function in the DEC [[VAXstation]]-II/GPX, forming what became version 9.\n\nA group at [[Brown University]] ported version 9 to the [[IBM]] [[RT/PC]], but problems with reading unaligned data on the RT forced an incompatible protocol change, leading to version 10 in late 1985.  By 1986, outside organizations had begun asking for X. X10R2 was released in January 1986, then X10R3 in February 1986. Although MIT had licensed X6 to some outside groups for a fee, it decided at this time to license X10R3 and future versions under what became known as the [[MIT License]], intending to popularize X further and, in return, hoping that many more applications would become available. X10R3 became the first version to achieve wide deployment, with both DEC and [[Hewlett-Packard]] releasing products based on it. Other groups ported X10 to [[Apollo Computer|Apollo]] and to [[Sun Microsystems|Sun]] workstations and even to the IBM [[PC/AT]]. Demonstrations of the first commercial application for X (a mechanical computer-aided engineering system from Cognition Inc. that ran on VAXes and remotely displayed on PCs running an X server ported by Jim Fulton and Jan Hardenbergh) took place at the Autofact trade show at that time. The last version of X10, X10R4, appeared in December 1986.\nAttempts were made to enable X servers as real-time collaboration devices, much as [[Virtual Network Computing]] (VNC) would later allow a desktop to be shared. One such early effort was Philip J. Gust's [[SharedX]] tool.\n\nAlthough X10 offered interesting and powerful functionality, it had become obvious that the X protocol could use a more hardware-neutral redesign before it became too widely deployed, but MIT alone would not have the resources available for such a complete redesign. As it happened, DEC's [[Western Software Laboratory]] found itself between projects with an experienced team. [[Smokey Wallace]] of DEC WSL and Jim Gettys proposed that DEC WSL build X11 and make it freely available under the same terms as X9 and X10. This process started in May 1986, with the protocol finalized in August. Alpha testing of the software started in February 1987, beta-testing in May; the release of X11 finally occurred on 15 September 1987.\n\nThe X11 protocol design, led by Scheifler, was extensively discussed on open mailing lists on the nascent Internet that were bridged to USENET newsgroups. Gettys moved to California to help lead the X11 development work at WSL from DEC's Systems Research Center, where Phil Karlton and Susan Angebrandt led the X11 sample server design and implementation. X therefore represents one of the first very large-scale distributed [[free and open source software]] projects.\n\n=== The MIT X Consortium and the X Consortium, Inc. ===\nBy the late 1980s X was, [[Simson Garfinkel]] wrote in 1989, \"Athena's most important single achievement to date\". DEC believed that X was so important that Gettys joined the design team for the [[VAXstation 2000]] to ensure that X would run on it, and the company assigned 1,200 employees to port X to both Ultrix and VMS.<ref name=\"garfinkel19890506\">{{cite news | url=http://simson.net/clips/1989/1989.TechRev.Athena.pdf | title=Ripples Across the Academic Market | work=Technology Review | date=May\u2013June 1989 | accessdate=25 January 2016 | author=Garfinkel, Simson L. | pages=9\u201313 | authorlink=Simson Garfinkel}}</ref> In 1987, with the success of X11 becoming apparent, MIT wished to relinquish the stewardship of X, but at a June 1987 meeting with nine vendors, the vendors told MIT that they believed in the need for a neutral party to keep X from fragmenting in the marketplace. In January 1988, the ''MIT X Consortium'' formed as a non-profit vendor group, with Scheifler as director, to direct the future development of X in a neutral atmosphere inclusive of commercial and educational interests.\n\nJim Fulton joined in January 1988 and [[Keith Packard]] in March 1988 as senior [[programmers|developers]], with Jim focusing on [[Xlib]], [[Computer font|fonts]], window managers, and utilities; and Keith re-implementing the server. Donna Converse, [[Chris D. Peterson]], and Stephen Gildea joined later that year, focusing on toolkits and widget sets, working closely with Ralph Swick of MIT Project Athena. The MIT X Consortium produced several significant revisions to X11, the first (Release 2{{snd}} X11R2) in February 1988. Jay Hersh joined the staff in January 1991 to work on the [[PHIGS|PEX]] and X113D functionality. He was followed soon after by Ralph Mor (who also worked on PEX) and Dave Sternlicht. In 1993, as the MIT X Consortium prepared to depart from MIT, the staff were joined by R. Gary Cutbill, Kaleb Keithley, and David Wiggins.<ref name=xcoreext>Robert W. Scheifler and James Gettys: X Window System: Core and extension protocols: X version 11, releases 6 and 6.1, Digital Press 1996, ISBN 1-55558-148-X</ref>\n[[File:DECwindows-openvms-v7.3-1.png|thumb|200px|DECwindows CDE on [[OpenVMS]] 7.3-1]]\n\nIn 1993, the X Consortium, Inc. (a non-profit corporation) formed as the successor to the MIT X Consortium. It released X11R6 on 16 May 1994. In 1995 it took on the development of the [[Motif (software)|Motif]] toolkit and of the [[Common Desktop Environment]] for Unix systems. The X Consortium dissolved at the end of 1996, producing a final revision, X11R6.3, and a legacy of increasing commercial influence in the development.<ref>[http://www.advogato.org/article/844.html Financing Volunteer Free Software Projects] 10 June 2005</ref><ref>[http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/ Lessons Learned about Open Source]  2000</ref>\n\n=== The Open Group ===\nIn January 1997, the X Consortium passed stewardship of X to [[The Open Group]], a vendor group formed in early 1996 by the merger of the [[Open Software Foundation]] and [[X/Open]].\n\nThe Open Group released X11R6.4 in early 1998. Controversially, X11R6.4 departed from the traditional liberal licensing terms, as the Open Group sought to assure funding for the development of X, and specifically cited [[XFree86]] as not significantly contributing to X.<ref>[https://lwn.net/1998/0409/xstate.html X statement] 2 April 1998</ref> The new terms would have made X no longer [[free software]]: zero-cost for noncommercial use, but a fee otherwise. After XFree86 seemed poised to [[fork (software)|fork]],<ref>http://web.archive.org/web/19981206040516/http://www.xfree86.org/news/pr-980407.html</ref> the Open Group [[Software relicensing|relicensed]] X11R6.4 under the traditional license in September 1998.<ref>{{cite web|url = http://cbbrowne.com/info/x11r6.4.html|title = X11R6.4 Sample Implementation Changes and Concerns|website = Christopher Browne's Web Pages|last = Browne|first = Christopher|archiveurl = https://web.archive.org/web/20080601035445/http://cbbrowne.com/info/x11r6.4.html|archivedate = 1 June 2008}}</ref> The Open Group's last release came as X11R6.4 patch 3.\n\n=== X.Org and XFree86 ===\n[[XFree86]] originated in 1992 from the [[X386]] server for [[IBM PC compatible]]s included with X11R5 in 1991, written by Thomas Roell and Mark W. Snitily and donated to the MIT X Consortium by Snitily Graphics Consulting Services (SGCS). XFree86 evolved over time from just one port of X to the leading and most popular implementation and the ''de facto'' standard of X's development.<ref name=\"xfree86.org\"/>\n\nIn May 1999, the Open Group formed [[X.Org Foundation|X.Org]]. X.Org supervised the release of versions X11R6.5.1 onward. X development at this time had become moribund;<ref>[http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,67861,00.html Q&A: The X Factor] {{webarchive |url=https://web.archive.org/web/20050114191427/http://www.computerworld.com/softwaretopics/software/appdev/story/0,10801,67861,00.html |date=14 January 2005 }} 4 February 2002</ref> most technical innovation since the X Consortium had dissolved had taken place in the XFree86 project.<ref>[http://keithp.com/~keithp/talks/Xarchitecture/Talk.htm The Evolution of the X Server Architecture] 1999</ref> In 1999, the XFree86 team joined X.Org as an honorary (non-paying) member,<ref>[http://xfree86.org/pipermail/forum/2003-March/000418.html A Call For Open Governance Of X Development] 23 March 2003</ref> encouraged by various hardware companies<ref>[http://slashdot.org/articles/99/12/01/1342251.shtml  XFree86 joins X.Org as Honorary Member] 1 December 1999</ref> interested in using XFree86 with Linux and in its status as the most popular version of X.\n\nBy 2003, while the popularity of Linux (and hence the installed base of X) surged, X.Org remained inactive,<ref>[http://xfree86.org/pipermail/forum/2003-April/003127.html Another teleconference partial edited transcript] {{webarchive |url=https://web.archive.org/web/20050212013335/http://xfree86.org/pipermail/forum/2003-April/003127.html |date=12 February 2005 }} 13 April 2003</ref> and active development took place largely within  XFree86. However, considerable dissent developed within XFree86. The XFree86 project suffered from a perception of a far too [[The Cathedral and the Bazaar|cathedral]]-like development model; developers could not get [[Concurrent Versions System|CVS]] commit access<ref>[http://www.xfree86.org/pipermail/forum/2003-March/002018.html Keith Packard issue] {{webarchive |url=https://web.archive.org/web/20050212013349/http://www.xfree86.org/pipermail/forum/2003-March/002018.html |date=12 February 2005 }} 20 March 2003</ref><ref>[http://cygwin.com/ml/cygwin-xfree/2003-10/msg00328.html Cygwin/XFree86{{snd}} No longer associated with XFree86.org] 27 October 2003</ref> and vendors had to maintain extensive [[patch (computing)|patch]] sets.<ref>[http://www.advogato.org/person/mharris/diary.html?start=5 On XFree86 development] 9 January 2003</ref> In March 2003, the XFree86 organization expelled Keith Packard, who had joined XFree86 after the end of the original MIT X Consortium, with considerable ill feeling.<ref>[http://www.xfree86.org/pipermail/forum/2003-March/001997.html Invitation for public discussion about the future of X] {{webarchive |url=https://web.archive.org/web/20050212013104/http://www.xfree86.org/pipermail/forum/2003-March/001997.html |date=12 February 2005 }} 20 March 2003</ref><ref>[http://www.xfree86.org/pipermail/forum/2003-March/002165.html A Call For Open Governance Of X Development] {{webarchive |url=https://web.archive.org/web/20050212012809/http://www.xfree86.org/pipermail/forum/2003-March/002165.html |date=12 February 2005 }} 21 March 2003</ref><ref>[http://www.xfree86.org/pipermail/forum/2003-April/003016.html Notes from a teleconference held 2003-3-27] {{webarchive |url=https://web.archive.org/web/20050212013506/http://www.xfree86.org/pipermail/forum/2003-April/003016.html |date=12 February 2005 }} 3 April 2003</ref>\n\nX.Org and XFree86 began discussing a reorganisation suited to properly nurturing the development of X.<ref>[http://www.xfree86.org/pipermail/forum/2003-March/000554.html A Call For Open Governance Of X Development] 24 March 2003</ref><ref>[http://www.xfree86.org/pipermail/forum/2003-March/002415.html A Call For Open Governance Of X Development] 23 March 2003</ref><ref>[http://xfree86.org/pipermail/forum/2003-April/003144.html Discussing issues] 14 April 2003</ref> Jim Gettys had been pushing strongly for an open development model since at least 2000.<ref>[http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/Talk.htm Lessons Learned about Open Source] 2000</ref> Gettys, Packard and several others began discussing in detail the requirements for the effective governance of X with open development.\n\nFinally, in an echo of the X11R6.4 licensing dispute, XFree86 released version 4.4 in February 2004 under a more restrictive license which many projects relying on X found unacceptable.<ref>[http://yro.slashdot.org/article.pl?sid=04/02/18/131223  XFree86 4.4: List of Rejecting Distributors Grows] 18 February 2004</ref> The added clause to the license was based on the original [[BSD license]]'s advertising clause, which was viewed by the [[Free Software Foundation]] and [[Debian]] as incompatible with the [[GNU General Public License]].<ref name=\"dwheeler.com\">[http://www.dwheeler.com/essays/gpl-compatible.html#xfree86 Appendix A: The Cautionary Tale of XFree86] 5 June 2002</ref> Other groups saw it as against the spirit of the original X. [[Theo de Raadt]] of [[OpenBSD]], for instance, threatened to [[fork (software)|fork]] XFree86 citing license concerns.<ref name=\"openbsd\">{{cite web |url= http://marc.info/?l=openbsd-misc&m=107696705911864&w=2 |title=openbsd-misc Mailing List: XFree86 license |author=Theo de Raadt |date=16 February 2004|archiveurl=http://www.webcitation.org/5lsZKRQmU |archivedate=8 December 2009 |publisher=[[MARC (archive)|MARC]] |accessdate=8 December 2009}}</ref> The license issue, combined with the difficulties in getting changes in, left many feeling the time was ripe for a fork.<ref>[http://www.osnews.com/story.php/6157/X-Marks-the-Spot-Looking-back-at-X11-Developments-of-Past-Year/ X Marks the Spot: Looking back at X11 Developments of Past Year] 25 February 2004</ref>\n\n=== The X.Org Foundation ===\nIn early 2004, various people from X.Org and freedesktop.org formed the [[X.Org Foundation]], and the Open Group gave it  control of the <code>x.org</code> [[domain name]]. This marked a radical change in the governance of X. Whereas the stewards of X since 1988 (including the prior X.Org) had been vendor organizations, the Foundation was led by software developers and used community development based on the [[The Cathedral and the Bazaar|bazaar]] model,{{Citation needed|date=October 2015}} which relies on outside involvement. Membership was opened to individuals, with corporate membership being in the form of sponsorship. Several major corporations such as [[Hewlett-Packard]] currently support the X.Org Foundation.\n\nThe Foundation takes an oversight role over X development: technical decisions are made on their merits by achieving rough consensus among community members.  Technical decisions are not made by the board of directors; in this sense, it is strongly modelled on the technically non-interventionist [[GNOME Foundation]].  The Foundation employs no developers.\nThe Foundation released X11R6.7, the [[X.Org Server]], in April 2004, based on XFree86 4.4RC2 with X11R6.6 changes merged. Gettys and Packard had taken the last version of XFree86 under the old license and, by making a point of an open development model and retaining GPL compatibility, brought many of the old XFree86 developers on board.<ref name=\"dwheeler.com\"/>\n\nWhile X11 had received extensions such as OpenGL support during the 1990s, its architecture had remained fundamentally unchanged during the decade. In the early part of the 2000s, however, it was overhauled to resolve a number of problems that had surfaced over the years, including a \"flawed\" [[Computer font|font]] architecture, a 2-d graphics system \"which had always been intended to be augmented and/or replaced\", and [[Latency (engineering)|latency]] issues.<ref>{{cite conference |last1=Gettys |first1=James |first2=Keith |last2=Packard |title=The (Re) Architecture of the X Window System |conference=Proc. Linux Symposium |volume=1 |year=2004 |url=https://keithp.com/~keithp/talks/xarch_ols2004/xarch_ols2004.pdf}}</ref>\nX11R6.8 came out in September 2004. It added significant new features, including preliminary support for translucent windows and other sophisticated visual effects, screen magnifiers and thumbnailers, and facilities to integrate with 3D immersive display systems such as Sun's [[Project Looking Glass]] and the [[Croquet project]]. External applications called ''[[compositing window manager]]s'' provide policy for the visual appearance.\n\nOn 21 December 2005,<ref>[http://xorg.freedesktop.org/wiki/Other/Press/X11R6970Released?action=show&redirect=PressReleases%2FX11R6970Released X11R6.9 and X11R7.0 Officially Released] 21 December 2005</ref> X.Org released X11R6.9, the monolithic [[source code|source]] tree for legacy users, and X11R7.0, the same source code separated into independent modules, each maintainable in separate projects.<ref>[http://wiki.x.org/wiki/ModularizationProposal Modularization Proposal] 31 March 2005</ref> The Foundation released X11R7.1 on 22 May 2006, about four months after 7.0, with considerable feature improvements.<ref>[http://xorg.freedesktop.org/wiki/ChangesForX11R71 Proposed Changes for X11R7.1] 21 April 2006</ref>\n\nXFree86 development continued for a few more years, 4.8.0 being released on 15 December 2008.<ref>{{cite web|url=http://www.xfree86.org/releases/rel480.html|title=The Current XFree86\u00ae Release: 4.8.0.|work=xfree86.org}}</ref>\n\n== Nomenclature ==\nThe proper names for the system are listed in the manual page as X; X Window System; X Version 11; X Window System, Version 11; or X11.<ref>[http://ftp.x.org/pub/X11R6.8.2/doc/X.7.html X \u2013 a portable, network-transparent window system] February 2005</ref>\n\nThe term \"X-Windows\" (in the manner of the subsequently released \"Microsoft Windows\") is not officially endorsed{{snd}} with X Consortium release manager Matt Landau stating in 1993, \"There is no such thing as 'X Windows' or 'X Window', despite the repeated misuse of the forms by the trade rags\"<ref>{{cite newsgroup | author = Landau, Matt | title = Re: Asynchronous X Windows? | date = 23 April 1993 | newsgroup = comp.windows.x |message-id= 1rccdq$s6s@armory.centerline.com | url = https://groups.google.com/forum/?fromgroups=#!topic/comp.unix.solaris/CtGaZqWiFNc | accessdate = 6 March 2013 }}</ref>{{snd}} though it has been in common informal use since early in the history of X<ref>''e.g.'' [http://www.phy.ohiou.edu/computer/xwin/xfaq.html \"X Windows FAQ\"], the FAQ for Usenet newsgroup comp.windows.x.</ref> and has been used deliberately for provocative effect, for example in the ''[[The Unix-Haters Handbook|Unix-Haters Handbook]]''.<ref name=\"The X-Windows Disaster\"/>\n\n=== Key terms ===\nThe X Window System has nuanced usage of a number of terms when compared to common usage, particularly \"display\" and \"screen\", a subset of which is given here for convenience:\n\n;device: A graphics device such as a computer graphics card or a computer motherboard's integrated graphics chipset.\n;monitor: A physical device such as a [[Cathode ray tube|CRT]] or a flat screen computer display.\n;screen: An area into which graphics may be rendered, either through software alone into system memory as with [[VNC]], or within a graphics device, some of which can render into more than one screen simultaneously, either viewable simultaneously or interchangeably.  Interchangeable screens are often set up to be notionally left and right from one another, flipping from one to the next as the mouse pointer reaches the edge of the monitor.\n;virtual screen: Two different meanings are associated with this term:\n;:*A technique allowing panning a monitor around a screen running at a larger resolution than the monitor is currently displaying.\n;:*An effect simulated by a window manager by maintaining window position information in a larger coordinate system than the screen and allowing panning by simply moving the windows in response to the user.\n;display: A collection of screens, often involving multiple monitors, generally configured to allow the mouse to move the pointer to any position within them.  [[Linux]]-based workstations are usually capable of having multiple displays, among which the user can switch with a special keyboard combination such as control-alt-''function-key'', simultaneously flipping all the monitors from showing the screens of one display to the screens in another.\n\nThe term \"display\" should not be confused with the more specialized jargon \"[[Zaphod display]]\".  The latter is a rare configuration allowing multiple users of a single computer to each have an independent set of display, mouse, and keyboard, as though they were using separate computers, but at a lower per-seat cost.\n\n== Release history ==\n{{See also|XFree86#Release history|X.Org Server#Releases}}\n\n{|class=\"wikitable sortable\"\n|-\n!Version\n!style=\"width:10em\"|Release date\n!Most important changes\n|-\n|{{Version  |o  |X1    |sortKey=1.0}}\n|{{dts|format=dmy|1984|06}}\n|First use of the name \"X\"; fundamental changes distinguishing the product from [[W Window System|W]].\n|-\n|{{Version  |o  |X6    |sortKey=6.0}}\n|{{dts|format=dmy|1985|01}}\n|First version licensed to a handful of outside companies.\n|-\n|{{Version  |o  |X9    |sortKey=9.0}}\n|{{dts|format=dmy|1985|09}}\n|Color. First release under [[MIT License]].\n|-\n|{{Version  |o  |X10    |sortKey=10.0}}\n|{{dts|format=dmy|1985|11}}\n|IBM RT/PC, AT (running [[DOS]]), and others.\n|-\n|{{Version  |o  |X10R2    |sortKey=10.2}}\n|{{dts|format=dmy|1986|01}}\n|\n|-\n|{{Version  |o  |X10R3    |sortKey=10.3}}\n|{{dts|format=dmy|1986|02}}\n|First freely redistributable X release. Earlier releases required a BSD source license to cover code changes to init/getty to support login. [[Ultrix Window Manager|uwm]] made standard window manager.\n|-\n|{{Version  |o  |X10R4    |sortKey=10.4}}\n|{{dts|format=dmy|1986|12}}\n|Last version of X10.\n|-\n|{{Version  |o  |X11    |sortKey=11.0}}\n|{{dts|format=dmy|1987|09|15}}\n|First release of the current protocol.\n|-\n|{{Version  |o  |X11R2    |sortKey=11.2}}\n|{{dts|format=dmy|1988|02}}\n|First X Consortium release.<ref>[http://www.linuxdocs.org/HOWTOs/XWindow-User-HOWTO-2.html The X Window System: History and Architecture] 1 September 1999</ref>\n|-\n|{{Version  |o  |X11R3    |sortKey=11.3}}\n|{{dts|format=dmy|1988|10|25}}\n|[[X Display Manager (implementation)|XDM]].\n|-\n|{{Version  |o  |X11R4    |sortKey=11.4}}\n|{{dts|format=dmy|1989|12|22}}\n|[[XDMCP]], [[twm]] brought in as standard window manager, application improvements, [[shape extension]], new fonts.\n|-\n|{{Version  |o  |X11R5    |sortKey=11.5}}\n|{{dts|format=dmy|1991|09|05}}\n|[[X386|X386 1.2]], [[PHIGS|PEX]], Xcms ([[color management]]), [[X Font Server|font server]], [[X video extension]].\n|-\n|{{Version  |o  |X11R6    |sortKey=11.6}}\n|{{dts|format=dmy|1994|05|16}}\n|[[ICCCM]] v2.0; Inter-Client Exchange; X Session Management; X Synchronization extension; [[X Image Extension|X Image extension]]; XTEST extension; X Input; X Big Requests; XC-MISC; XFree86 changes.\n|-\n|{{Version  |o  |X11R6.1    |sortKey=11.6.1}}\n|{{dts|format=dmy|1996|03|14}}\n|X Double Buffer extension; [[X keyboard extension]]; X Record extension.\n|-\n|{{Version  |o  |X11R6.2<br />X11R6.3    |sortKey=11.6.3}}\n|{{dts|format=dmy|1996|12|23}}\n|Web functionality, [[Low Bandwidth X|LBX]]. Last X Consortium release. X11R6.2 is the tag for a subset of X11R6.3 (Broadway) with the only new features over R6.1 being XPrint and the Xlib implementation of vertical writing and user-defined character support.<ref>[http://www.xfree86.org/3.3.6/RELNOTES1.html XFree86 and X11R6.3] December 1999</ref>\n|-\n|{{Version  |o  |X11R6.4    |sortKey=11.6.4}}\n|{{dts|format=dmy|1998|03|31}}\n|[[Xinerama]].<ref>[http://www.opengroup.org/tech/desktop/Press_Releases/x11r6.4ga.htm The Open Group Announces Internet-Ready X Window System X11R6.4] 31 March 1998</ref>\n|-\n|{{Version  |o  |X11R6.5    |sortKey=11.6.5}}\n|{{dts|format=dmy|2000}}\n|Internal X.org release; not made publicly available.\n|-\n|{{Version  |o  |X11R6.5.1    |sortKey=11.6.5.1}}\n|{{dts|format=dmy|2000|08|20}}\n|\n|-\n|{{Version  |o  |X11R6.6    |sortKey=11.6.6}}\n|{{dts|format=dmy|2001|04|04}}\n|Bug fixes, XFree86 changes.\n|-\n|{{Version  |o  |X11R6.7.0    |sortKey=11.6.7.0}}\n|{{dts|format=dmy|2004|04|06}}\n|First X.Org Foundation release, incorporating XFree86 4.4rc2. Full end-user distribution. Removal of [[X Image Extension|XIE]], [[PHIGS|PEX]] and libxml2.<ref>[https://lwn.net/Articles/79302/ X.Org Foundation releases X Window System X11R6.7] 7 April 2004</ref>\n|-\n|{{Version  |o  |X11R6.8.0    |sortKey=11.6.8.0}}\n|{{dts|format=dmy|2004|09|08}}\n|Window translucency, XDamage, Distributed Multihead X, [[XFixes]], Composite, <!--Assume comma ok before next:-->[http://freedesktop.org/wiki/Software/XEvIE XEvIE].\n|-\n|{{Version  |o  |X11R6.8.1    |sortKey=11.6.8.1}}\n|{{dts|format=dmy|2004|09|17}}\n|Security fix in [[XPM (image format)|libxpm]].\n|-\n|{{Version  |o  |X11R6.8.2    |sortKey=11.6.8.2}}\n|{{dts|format=dmy|2005|02|10}}\n|Bug fixes, driver updates.\n|-\n|{{Version  |o  |X11R6.9<br />X11R7.0    |sortKey=11.7.0}}\n|{{dts|format=dmy|2005|12|21}}\n|[[X.Org Server|XServer 1.0.1]], [[EXA]], major source [[code refactoring]].<ref>[http://xorg.freedesktop.org/wiki/ChangesSince68 Changes Since R6.8] 21 October 2005</ref> From the same source-code base, the modular [[GNU build system|autotooled]] version became 7.0 and the monolithic [[imake]] version was frozen at 6.9.\n|-\n|{{Version  |o  |X11R7.1    |sortKey=11.7.1}}\n|{{dts|format=dmy|2006|05|22}}\n|XServer 1.1.0, EXA enhancements, [[KDrive]] integrated, [[AIGLX]], OS and platform support enhancements.<ref>[http://ftp.x.org/pub/X11R7.1/doc/RELNOTES.html Release Notes for X11R7.1] 22 May 2006</ref>\n|-\n|{{Version  |o  |X11R7.2    |sortKey=11.7.2}}\n|{{dts|format=dmy|2007|02|15}}\n|XServer 1.2.0, Removal of [[LBX]] and the built-in keyboard driver, X-ACE, [[XCB]], autoconfig improvements, cleanups.<ref>[http://xorg.freedesktop.org/wiki/Releases/7.2?action=show&redirect=ChangesForX11R72 The X.Org Foundation released 7.2.0 (aka X11R7.2)] 15 February 2007</ref>\n|-\n|{{Version  |o  |X11R7.3    |sortKey=11.7.3}}\n|{{dts|format=dmy|2007|09|06}}\n|XServer 1.4.0, Input [[hotplug]], output hotplug ([[RandR]] 1.2), [[DTrace]] probes, [[Peripheral Component Interconnect|PCI]] domain support.<ref>[http://wiki.x.org/wiki/Server14Branch X server version 1.4 release plans]. Retrieved 25 August 2007.</ref>\n|-\n|{{Version  |o  |X11R7.4    |sortKey=11.7.4}}\n|{{dts|format=dmy|2008|09|23}}\n|XServer 1.5.1, XACE, PCI-rework, EXA speed-ups, _X_EXPORT, [[GLX]] 1.4, faster startup and shutdown.<ref>{{cite web |url=http://www.x.org/wiki/Releases/7.4 |title=Foundation Releases X7.4 |publisher=X.org |accessdate=10 November 2009}}</ref>\n|-\n|{{Version  |o  |X11R7.5    |sortKey=11.7.5}}\n|{{dts|format=dmy|2009|10|26}}<ref>{{cite web|url=http://www.x.org/wiki/Other/Press/X11R75Released |title=7.5 release announcement |publisher=X.org |accessdate=10 November 2009}}</ref>\n|XServer 1.7.1, Xi 2, XGE, E-[[EDID]] support, [[RandR]] 1.3, [[Multi-Pointer X|MPX]], predictable pointer acceleration, [[Direct Rendering Infrastructure|DRI2]] memory manager, SELinux security module, further removal of obsolete libraries and extensions.<ref>{{cite web |url=http://www.x.org/wiki/Releases/7.5 |title=Wiki \u2013 7.5 release plans |publisher=X.org |accessdate=10 November 2009}}</ref>\n|-\n|{{Version  |o  |X11R7.6    |sortKey=11.7.6}}\n|{{dts|format=dmy|2010|12|20}}<ref>{{cite web|url=http://www.x.org/wiki/Other/Press/X11R76Released |title=7.6 release announcement |publisher=X.org |date=20 December 2010 |accessdate=21 December 2010}}</ref>\n|X Server 1.9.3, [[XCB]] requirement.<ref>{{cite web|url=http://lists.x.org/archives/xorg-devel/2009-October/002995.html |title=Thinking towards 7.6 katamari, including xcb |publisher=Lists.x.org |accessdate=10 November 2009}}</ref><ref>{{cite web |url=http://www.x.org/wiki/Releases/7.6 |title=Wiki \u2013 7.6 release plans |publisher=X.org |accessdate=21 December 2010}}</ref>\n|-\n|{{Version  |c  |X11R7.7    |sortKey=11.7.7}}\n|{{dts|format=dmy|2012|06|06}}\n|X Server 1.12.2; Sync extension 3.1: adds Fence object support; Xi 2.2 multitouch support; XFixes 5.0: Pointer Barriers.<ref>{{cite web|url=http://lists.x.org/archives/xorg-announce/2012-June/001977.html |title=[ANNOUNCE] X11R7.7 |publisher=Lists.x.org |accessdate=7 June 2012}}</ref><ref>{{cite web|url=http://www.x.org/wiki/Releases/7.7 |title=Releases/7.7 |publisher=X.org |accessdate=7 June 2012}}</ref>\n|-\n|{{Version  |p  |X11R7.8    |sortKey=11.7.8}}\n|{{n/a}}\n|RandR extension 1.4, X Resource extension 1.2, XInput extension 2.3.<ref>{{cite web|url=http://www.x.org/wiki/Releases/7.8 |title=Releases/7.8 |publisher=X.org |accessdate=6 May 2014}}</ref>\n|-\n|colspan=3 |{{Version|l|show=010101}}\n|}\n\n== See also ==\n{{Portal|Free software}}\n* [[History of the graphical user interface]]\n* [[X11 color names]]\n* [[Xgl]]\n* [[Xmark93|Xmark]]\n* [[General Graphics Interface]]\n* [[VirtualGL]]\n* [[rio (windowing system)|rio]] \u2013 the windowing system for [[Plan 9 from Bell Labs|Plan 9]]\n* [[List of Unix programs]]\n* [[DESQview/X]]\n* [[Cairo (graphics)]]\n* [[SVGALib]]\n* [[DirectFB]]\n\n== Notes ==\n{{Reflist|colwidth=30em}}\n\n== References ==\n{{Refbegin|2}}\n* Hania Gajewska, Mark S. Manasse and Joel McCormack, [http://www.std.org/~msm/common/protocol.pdf Why X Is Not Our Ideal Window System] ([[Portable Document Format|PDF]]), ''Software{{snd}} Practice & Experience'' vol 20, issue S2  (October 1990)\n* Linda Mui and Eric Pearce, ''X Window System Volume 8: X Window System Administrator's Guide for X11 Release 4 and Release 5, 3rd edition'' (O'Reilly and Associates, July 1993; softcover ISBN 0-937175-83-8)\n* [http://www.art.net/~hopkins/Don/unix-haters/x-windows/disaster.html The X-Windows Disaster] (''[[UNIX-HATERS Handbook]]'')\n* Robert W. Scheifler and James Gettys: ''X Window System: Core and extension protocols: X version 11, releases 6 and 6.1'', Digital Press 1996, ISBN 1-55558-148-X\n* [http://keithp.com/~keithp/talks/Xarchitecture/Talk.htm The Evolution of the X Server Architecture] ([[Keith Packard]], 1999)\n* [https://web.archive.org/web/20060916213448/http://www.cat.org.au/maffew/cat/xfree-dawes.html The means to an X for Linux: an interview with David Dawes from XFree86.org] (Matthew Arnison, CAT TV, June 1999)\n* [http://www.usenix.org/publications/library/proceedings/usenix2000/invitedtalks/gettys_html/Talk.htm Lessons Learned about Open Source] ([[Jim Gettys]], [[USENIX]] 2000 talk on the history of X)\n* [http://linuxfinances.info/info/xbloat.html On the Thesis that X is Big/Bloated/Obsolete and Should Be Replaced] (Christopher B. Browne)\n* [https://web.archive.org/web/20080413140042/http://people.freedesktop.org/~jg/roadmap.html Open Source Desktop Technology Road Map] (Jim Gettys, 9 December 2003)\n* [http://www.osnews.com/story.php?news_id=6157 X Marks the Spot: Looking back at X11 Developments of Past Year] (Oscar Boykin, ''OSNews'', 25 February 2004)\n* [http://keithp.com/~keithp/talks/xserver_ols2004/ Getting X Off The Hardware] (Keith Packard, July 2004 [[Ottawa Linux Symposium]] talk)\n* [http://developers.slashdot.org/comments.pl?sid=75257&cid=6734612 Why Apple didn't use X for the window system] (Mike Paquette, Apple Computer)\n* [http://ftp.x.org/pub/X11R6.8.2/doc/X.7.html X Man Page] (Retrieved on 2 February 2007)\n* {{cite journal | title = SNAP Computing and the X Window System | citeseerx=10.1.1.109.3314 | first = Jim | last = Gettys | date =  2005 }}\n{{Refend}}\n\n== External links ==\n{{Commons category}}\n{{Wikibooks|Guide to X11}}\n* [http://www.x.org/ X.Org Foundation] Official website\n* [http://www.linfo.org/x.html The X Window System: A Brief Introduction]\n* [http://xwinman.org/ Window managers for X]\n* [https://sites.google.com/site/jonsmirl/graphics The State of Linux Graphics] (Jon Smirl, 30 August 2005)\n* [http://www.rahul.net/kenton/xsites.html Kenton Lee: Technical X Window System and Motif WWW Sites]\n* RFC 1198 \u2013 FYI on the X Window System\n\n{{XWinSys}}\n{{Open Group standards}}\n{{X desktop environments and window managers}}\n\n[[Category:X Window System| ]]\n[[Category:Free windowing systems]]\n[[Category:Open Group standards]]\n[[Category:Remote desktop]]\n[[Category:Software using the MIT license]]\n[[Category:Unix windowing system-related software]]"}]}}}}