{"batchcomplete":"","query":{"normalized":[{"from":"password","to":"Password"}],"pages":{"24304":{"pageid":24304,"ns":0,"title":"Password","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{other uses}}\n{{for|assistance with your Wikipedia password|Help:Reset password|selfref=yes}}\n[[File:Mediawiki 1.25 sign in form.png|thumb|A Wikipedia sign in form requesting a [[User (computing)|username]] and password]]\nA '''password''' is a [[word]] or [[String (computer science)|string]] of [[character (computing)|characters]] used for user [[authentication]] to prove identity or [[authorization|access approval]] to gain access to a resource (example: an [[Access code (disambiguation)|access code]] is a type of password), which is to be kept [[secrecy|secret]] from those not allowed access.\n\nThe use of passwords is known to be ancient. Sentries would challenge those wishing to enter an area or approaching it to supply a password or ''watchword'', and would only allow a person or group to pass if they knew the password. In modern times, [[user (computing)|user name]]s and passwords are commonly used by people during a [[logging (computer security)|log in]] process that [[access control|controls access]] to protected computer [[operating system]]s, [[mobile phone]]s, [[cable TV]] decoders, [[automated teller machine]]s (ATMs), etc. A typical [[computer user]] has passwords for many purposes: logging into accounts, retrieving [[e-mail]], accessing applications, databases, networks, web sites, and even reading the morning newspaper online.\n\nDespite the name, there is no need for passwords to be actual words; indeed passwords which are not actual words may be harder to guess, a desirable property. Some passwords are formed from multiple words and may more accurately be called a [[passphrase]]. The terms  '''passcode''' and '''passkey''' are sometimes used when the secret information is purely numeric, such as the [[personal identification number]] (PIN) commonly used for [[Automated teller machine|ATM]] access. Passwords are generally short enough to be easily [[memory|memorized]] and typed.\n\nMost organizations specify a [[password policy]] that sets requirements for the composition and usage of passwords, typically dictating minimum length, required categories (e.g. upper and lower case, numbers, and special characters), prohibited elements (e.g. own name, date of birth, address, telephone number). Some governments have national authentication frameworks<ref>[http://folk.uio.no/josang/papers/ATJK2012-SARSSI.pdf Improving Usability of Password Management with Standardized Password Policies] (pdf). Retrieved on 2012-10-12.</ref> that define requirements for user authentication to government services, including requirements for passwords.\n\n==Choosing a secure and memorable password==\n\nThe easier a password is for the owner to remember generally means it will be easier for an [[hacker (computer security)|attacker]] to guess.<ref>{{Cite news|title=If Your Password Is 123456, Just Make It HackMe |work=The New York Times |first=Ashlee |last=Vance |date=2010-01-10 |url=http://www.nytimes.com/2010/01/21/technology/21password.html }}</ref> However, passwords which are difficult to remember may also reduce the security of a system because (a) users might need to write down or electronically store the password, (b) users will need frequent password resets and (c) users are more likely to re-use the same password. Similarly, the more stringent requirements for password strength, e.g. \"have a mix of uppercase and lowercase letters and digits\" or \"change it monthly\", the greater the degree to which users will subvert the system.<ref>{{webarchive |url=https://web.archive.org/web/20080302044633/http://all.net/journal/netsec/1997-09.html |date=March 2, 2008 |title=Managing Network Security }}. Fred Cohen and Associates. All.net. Retrieved on 2012-05-20.</ref> Others argue longer passwords provide more security (e.g., [[Entropy (information theory)|entropy]]) than shorter passwords with a wide variety of characters.<ref name=\"SS1\" />\n\nIn ''The Memorability and Security of Passwords'',<ref>[http://homepages.cs.ncl.ac.uk/jeff.yan/jyan_ieee_pwd.pdf The Memorability and Security of Passwords] (pdf). ncl.ac.uk. Retrieved on 2012-05-20.</ref>  Jeff Yan et al. examine the effect of advice given to users about a good choice of password.  They found that passwords based on thinking of a phrase and taking the first letter of each word are just as memorable as naively selected passwords, and just as hard to crack as randomly generated passwords.\n\nCombining two or more unrelated words is another good method{{Citation needed|reason=The claim needs a reliable source. It should include a reasoned explanation and estimation of strength of the password that people would choose. Some sources like https://xkcd.com/936/ claim that 3-4 random words are good, but without reasoning.|date=January 2016}}, but a single dictionary word is not. Having a personally designed [[algorithm]] for generating obscure passwords is another good method{{Citation needed|reason=The claim needs a reliable source.|date=January 2016}}\n\nHowever, asking users to remember a password consisting of a \"mix of uppercase and lowercase characters\" is similar to asking them to remember a sequence of bits: hard to remember, and only a little bit harder to crack (e.g. only 128 times harder to crack for 7-letter passwords, less if the user simply capitalises one of the letters). Asking users to use \"both letters and digits\" will often lead to easy-to-guess substitutions such as 'E' \u2192 '3' and 'I' \u2192 '1', substitutions which are well known to attackers. Similarly typing the password one keyboard row higher is a common trick known to attackers.<ref>{{cite book|last1=Lewis|first1=Dave|title=Ctrl-Alt-Delete|date=2011|isbn=147101911X|page=17|url=https://books.google.com/books?isbn=147101911X|accessdate=10 July 2015}}</ref>\n\nIn 2013, Google released a list of the most common password types, all of which are considered insecure because they are too easy to guess (especially after researching an individual on social media):<ref>{{cite news|author=Techlicious / Fox Van Allen @techlicious |url=http://techland.time.com/2013/08/08/google-reveals-the-10-worst-password-ideas/?iid=biz-article-mostpop2 |title=Google Reveals the 10 Worst Password Ideas &#124; TIME.com |publisher=Techland.time.com |date=2013-08-08 |accessdate=2013-10-16}}</ref>\n* The name of a pet, child, family member, or significant other\n* Anniversary dates and birthdays\n* Birthplace\n* Name of a favorite holiday\n* Something related to a favorite sports team\n* The word \"password\"\n\n==Factors in the security of a password system==\n\nThe security of a password-protected system depends on several factors. The overall system must, of course, be designed for sound security, with protection against [[computer virus]]es, [[man-in-the-middle attack]]s and the like. Physical security issues are also a concern, from deterring [[shoulder surfing (computer security)|shoulder surfing]] to more sophisticated physical threats such as video cameras and keyboard sniffers. And, of course, passwords should be chosen so that they are hard for an attacker to guess and hard for an attacker to discover using any (and all) of the available automatic attack schemes. See [[password strength]] and [[computer security]].\n\nNowadays, it is a common practice for computer systems to hide passwords as they are typed. The purpose of this measure is to avoid bystanders reading the password. However, some argue that this practice may lead to mistakes and stress, encouraging users to choose weak passwords. As an alternative, users should have the option to show or hide passwords as they type them.<ref>[http://www.lyquix.com/blog/92-do-we-need-to-hide-passwords Lyquix Blog: Do We Need to Hide Passwords?]. Lyquix.com. Retrieved on 2012-05-20.</ref>\n\nEffective access control provisions may force extreme measures on criminals seeking to acquire a password or biometric token.<ref>Jonathan Kent  [http://news.bbc.co.uk/2/hi/asia-pacific/4396831.stm Malaysia car thieves steal finger]. BBC (2005-03-31)</ref> Less extreme measures include [[extortion]], [[rubber hose cryptanalysis]], and [[side channel attack]].\n\nHere are some specific password management issues that must be considered in thinking about, choosing, and handling, a password.\n\n===Rate at which an attacker can try guessed passwords===\n\nThe rate at which an attacker can submit guessed passwords to the system is a key factor in determining system security. Some systems impose a time-out of several seconds after a small number (e.g., three) of failed password entry attempts. In the absence of other vulnerabilities, such systems can be effectively secure with relatively simple passwords, if they have been well chosen and are not easily guessed.<ref>Stuart Brown {{webarchive |url=https://web.archive.org/web/20060615155021/http://www.modernlifeisrubbish.co.uk/top-10-most-common-passwords.asp |date=June 15, 2006 |title=Top ten passwords used in the United Kingdom }}. Modernlifeisrubbish.co.uk (2006-05-26). Retrieved on 2012-05-20.</ref>\n\nMany systems store  a [[Cryptographic hash function|cryptographic hash]] of the password. If an attacker gets access to the file of hashed passwords guessing can be done off-line, rapidly testing candidate passwords against the true password's hash value. In the example of a web-server, an online attacker can guess only at the rate at which the server will respond, while an off-line attacker (who gains access to the file) can guess at a rate limited only by the hardware that is brought to bear.\n\nPasswords that are used to generate cryptographic keys (e.g., for [[disk encryption]] or [[Wi-Fi]] security) can also be subjected to high rate guessing. Lists of common passwords are widely available and can make password attacks very efficient. (See [[Password cracking]].) Security in such situations depends on using passwords or passphrases of adequate complexity, making such an attack computationally infeasible for the attacker. Some systems, such as [[Pretty Good Privacy|PGP]] and [[Wi-Fi Protected Access|Wi-Fi WPA]], apply a computation-intensive hash to the password to slow such attacks. See [[key stretching]].\n\n===Limits on the number of password guesses===\n\nAn alternative to limiting the rate at which an attacker can make guesses on a password is to limit the total number of guesses that can be made.  The password can be disabled, requiring a reset, after a\nsmall number of consecutive bad guesses (say 5); and the user may be\nrequired to change the password after a larger cumulative number of\nbad guesses (say 30), to prevent an attacker from making an arbitrarily large number of bad guesses by interspersing them between\ngood guesses made by the legitimate password owner.<ref>{{cite patent |country=US |number=8046827 |status=patent}}</ref>\n\n===Form of stored passwords===\nSome computer systems store user passwords as [[plaintext]], against which to compare user log on attempts. If an attacker gains access to such an internal password store, all passwords\u2014and so all user accounts\u2014will be compromised. If some users employ the same password for accounts on different systems, those will be compromised as well.\n\nMore secure systems store each password in a cryptographically protected form, so access to the actual password will still be difficult for a snooper who gains internal access to the system, while validation of user access attempts remains possible. The most secure don't store passwords at all, but a one-way derivation, such as a [[polynomial]], [[Modulo operation|modulus]], or an advanced [[Cryptographic hash function|hash function]].<ref name=\"SS1\">{{cite web| last=Lundin|first=Leigh |title= PINs and Passwords, Part 2 | url=http://www.sleuthsayers.org/2013/08/pins-and-passwords-part-2.html |work=Passwords| publisher=SleuthSayers| location=Orlando| date=2013-08-11}}</ref>\n[[Roger Needham]] invented the now common approach of storing only a \"hashed\" form of the plaintext password. When a user types in a password on such a system, the password handling software runs through a [[Cryptographic hash function|cryptographic hash]] algorithm, and if the hash value generated from the user\u2019s entry matches the hash stored in the password database, the user is permitted access. The hash value is created by applying a [[cryptographic hash function]] to a string consisting of the submitted password and, in many implementations, another value known as a [[salt (cryptography)|salt]]. A salt prevents attackers from easily building a list of hash values for common passwords and prevents password cracking efforts from scaling across all users.<ref>[http://bugcharmer.blogspot.com/2012/06/passwords-matter.html The Bug Charmer: Passwords Matter]. Bugcharmer.blogspot.com (2012-06-20). Retrieved on 2013-07-30.</ref> [[MD5]] and [[SHA1]] are frequently used cryptographic hash functions but they are not recommended for password hashing unless they are used as part of a larger construction such as in [[PBKDF2]].<ref name=\"bugcharmer.blogspot.com\">Alexander, Steven. (2012-06-20) [http://bugcharmer.blogspot.com/2012/06/how-long-should-passwords-be.html The Bug Charmer: How long should passwords be?]. Bugcharmer.blogspot.com. Retrieved on 2013-07-30.</ref>\n\nThe stored data\u2014sometimes called the \"password verifier\" or the \"password hash\"\u2014is often stored in Modular Crypt Format or RFC 2307 hash format, sometimes in the [[/etc/passwd]] file or the [[/etc/shadow]] file.<ref>\n[http://pythonhosted.org/passlib/lib/passlib.hash.html \"passlib.hash - Password Hashing Schemes\"].\n</ref>\n\nThe main storage methods for passwords are plain text, hashed, hashed and salted, and reversibly encrypted.<ref name=\"An Administrator's Guide to Internet Password Research\">Florencio et al., [http://research.microsoft.com/pubs/227130/WhatsaSysadminToDo.pdf An Administrator's Guide to Internet Password Research]. (pdf) Retrieved on 2015-03-14.</ref>  If an attacker gains access to the password file, then if it is stored as plain text, no cracking is necessary. If it is hashed but not salted then it is vulnerable to [[rainbow table]] attacks (which are more efficient than cracking). If it is reversibly encrypted then if the attacker gets the decryption key along with the file no cracking is necessary, while if he fails to get the key cracking is not possible. Thus, of the common storage formats for passwords only when passwords have been salted and hashed is cracking both necessary and possible.<ref name=\"An Administrator's Guide to Internet Password Research\"/>\n\nIf a cryptographic hash function is well designed, it is computationally infeasible to reverse the function to recover a [[plaintext]] password. An attacker can, however, use widely available tools to attempt to guess the passwords. These tools work by hashing possible passwords and comparing the result of each guess to the actual password hashes. If the attacker finds a match, they know that their guess is the actual password for the associated user.\nPassword cracking tools can operate by brute force (i.e. trying every possible combination of characters) or by hashing every word from a list; large lists of possible passwords in many languages are widely available on the Internet.<ref name=\"SS1\" /> The existence of [[password cracking]] tools allows attackers to easily recover poorly chosen passwords. In particular, attackers can quickly recover passwords that are short, dictionary words, simple variations on dictionary words or that use easily guessable patterns.<ref>[http://blog.thireus.com/cracking-story-how-i-cracked-over-122-million-sha1-and-md5-hashed-passwords Cracking Story \u2013 How I Cracked Over 122 Million SHA1 and MD5 Hashed Passwords \u00ab Thireus' Bl0g]. Blog.thireus.com (2012-08-29). Retrieved on 2013-07-30.</ref>\nA modified version of the [[Data Encryption Standard|DES]] algorithm was used as the basis for the password hashing algorithm in early [[Unix]] systems.<ref name=\"cm.bell-labs.com\">{{cite journal|url=http://cm.bell-labs.com/cm/cs/who/dmr/passwd.ps |title=Password Security: A Case History |author1=Morris, Robert  |author2=Thompson, Ken  |lastauthoramp=yes |journal=Communications of the ACM |volume = 22 |issue = 11 |year=1979 |pages = 594\u2013597 |doi=10.1145/359168.359172}}</ref> The [[crypt (Unix)|crypt]] algorithm used a 12-bit salt value so that each user\u2019s hash was unique and iterated the DES algorithm 25 times in order to make the hash function slower, both measures intended to frustrate automated guessing attacks.<ref name=\"cm.bell-labs.com\"/>  The user\u2019s password was used as a key to encrypt a fixed value. More recent Unix or Unix like systems (e.g., [[Linux]] or the various [[BSD]] systems) use more secure password hashing algorithms  such as [[PBKDF2]], [[bcrypt]], and [[scrypt]] which have large salts and an adjustable cost or number of iterations.<ref>[http://www.usenix.org/publications/login/2004-06/pdfs/alexander.pdf Password Protection for Modern Operating Systems] (pdf). Usenix.org. Retrieved on 2012-05-20.</ref>\nA poorly designed hash function can make attacks feasible even if a strong password is chosen. See [[LM hash]] for a widely deployed, and insecure, example.<ref>[http://support.microsoft.com/default.aspx?scid=KB;EN-US;q299656 How to prevent Windows from storing a LAN manager hash of your password in Active Directory and local SAM databases]. support.microsoft.com (2007-12-03). Retrieved on 2012-05-20.</ref>\n\n===Methods of verifying a password over a network===\n\n====Simple transmission of the password====\n\nPasswords are vulnerable to interception (i.e., \"snooping\") while being transmitted to the authenticating machine or person. If the password is carried as electrical signals on unsecured physical wiring between the user access point and the central system controlling the password database, it is subject to snooping by [[Telephone tapping|wiretapping]] methods. If it is carried as packeted data over the Internet, anyone able to watch the [[packet (information technology)|packets]] containing the logon information can snoop with a very low probability of detection.\n\nEmail is sometimes used to distribute passwords but this is generally an insecure method. Since most email is sent as [[plaintext]], a message containing a password is readable without effort during transport by any eavesdropper.  Further, the message will be stored as [[plaintext]] on at least two computers: the sender's and the recipient's. If it passes through intermediate systems during its travels, it will probably be stored on there as well, at least for some time, and may be copied to [[backup]], [[cache (computing)|cache]] or history files on any of these systems.\n\nUsing client-side encryption will only protect transmission from the mail handling system server to the client machine. Previous or subsequent relays of the email will not be protected and the email will probably be stored on multiple computers, certainly on the originating and receiving computers, most often in clear text.\n\n====Transmission through encrypted channels====\n\nThe risk of interception of passwords sent over the Internet can be reduced by, among other approaches, using [[cryptography|cryptographic]] protection. The most widely used is the [[Transport Layer Security]] (TLS, previously called [[Secure Sockets Layer|SSL]]) feature built into most current Internet [[Web browser|browsers]]. Most browsers alert the user of a TLS/SSL protected exchange with a server by displaying a closed lock icon, or some other sign, when TLS is in use. There are several other techniques in use; see [[cryptography]].\n\n====Hash-based challenge-response methods====\n\nUnfortunately, there is a conflict between stored hashed-passwords and hash-based [[challenge-response authentication]]; the latter requires a client to prove to a server that they know what the [[shared secret]] (i.e., password) is, and to do this, the server must be able to obtain the shared secret from its stored form. On many systems (including [[Unix]]-type systems) doing remote authentication, the shared secret usually becomes the hashed form and has the serious limitation of exposing passwords to offline guessing attacks. In addition, when the hash is used as a shared secret, an attacker does not need the original password to authenticate remotely; they only need the hash.\n\n====Zero-knowledge password proofs====\n\nRather than transmitting a password, or transmitting the hash of the password, [[password-authenticated key agreement]] systems can perform a [[zero-knowledge password proof]], which proves knowledge of the password without exposing it.\n\nMoving a step further, augmented systems for [[password-authenticated key agreement]] (e.g., [[Authentication and key agreement via Memorable Passwords|AMP]], [[SPEKE|B-SPEKE]], [[PAK-Z]], [[Secure remote password protocol|SRP-6]]) avoid both the conflict and limitation of hash-based methods. An augmented system allows a client to prove knowledge of the password to a server, where the server knows only a (not exactly) hashed password, and where the unhashed password is required to gain access.\n\n===Procedures for changing passwords===\n\nUsually, a system must provide a way to change a password, either because a user believes the current password has been (or might have been) compromised, or as a precautionary measure. If a new password is passed to the system in unencrypted form, security can be lost (e.g., via wiretapping) before the new password can even be installed in the password database. And, of course, if the new password is given to a compromised employee, little is gained. Some web sites include the user-selected password in an unencrypted confirmation e-mail message, with the obvious increased vulnerability.\n\n[[Identity management]] systems are increasingly used to automate issuance of replacements for lost passwords, a feature called [[self service password reset]]. The user's identity is verified by asking questions and comparing the answers to ones previously stored (i.e., when the account was opened).\n\nSome password reset questions ask for personal information that could be found on social media, such as mother's maiden name.  As a result, some security experts recommend either making up one's own questions or giving false answers.<ref>{{cite web|url=http://www.techlicious.com/tip/why-you-should-lie-when-setting-up-password-security-questions/ |title=Why You Should Lie When Setting Up Password Security Questions |publisher=Techlicious |date=2013-03-08 |accessdate=2013-10-16}}</ref>\n\n===Password longevity===\n\n\"Password aging\" is a feature of some operating systems which forces users to change passwords frequently (e.g., quarterly, monthly or even more often). Such policies usually provoke user protest and foot-dragging at best and hostility at worst. There is often an increase in the people who note down the password and leave it where it can easily be found, as well as helpdesk calls to reset a forgotten password. Users may use simpler passwords or develop variation patterns on a consistent theme to keep their passwords memorable.<ref name=\"Joseph-Steinberg-Forbes\" /> Because of these issues, there is some debate as to whether password aging is effective.<ref name=WEB>\n{{cite web |\nurl=https://www.cesg.gov.uk/articles/problems-forcing-regular-password-expiry |\ntitle=The problems with forcing regular password expiry |\ndate= 15 April 2016|\nwork=IA Matters |\npublisher=CESG: the Information Security Arm of GCHQ |\naccessdate= 5 Aug 2016}}\n</ref> Changing a password will not prevent abuse in most cases, since the abuse would often be immediately noticeable. However, if someone may have had access to the password through some means, such as sharing a computer or breaching a different site, changing the password limits the window for abuse.<ref>[http://www.schneier.com/blog/archives/2010/11/changing_passwo.html Schneier on Security discussion on changing passwords]. Schneier.com. Retrieved on 2012-05-20.</ref>\n\n===Number of users per password===\n\n{{citation needed span|Allotting separate passwords to each user of a system is preferable to having a single password shared by legitimate users of the system, certainly from a security viewpoint. This is partly because users are more willing to tell another person (who may not be authorized) a shared password than one exclusively for their use.|date=September 2015}} Single passwords are also much less convenient to change because many people need to be told at the same time, and they make removal of a particular user's access more difficult, as for instance on graduation or resignation.\n\n===Password security architecture===\n\nCommon techniques used to improve the security of computer systems protected by a password include:\n\n*Not displaying the password on the display screen as it is being entered or obscuring it as it is typed by using asterisks (*) or bullets (\u2022).\n*Allowing passwords of adequate length. (Some [[legacy system|legacy]] operating systems, including early versions{{Which|date=September 2010}} of Unix and Windows, limited passwords to an 8 character maximum,<ref>Seltzer, Larry. (2010-02-09) [http://www.pcmag.com/article2/0,2817,2358985,00.asp \"American Express: Strong Credit, Weak Passwords\"]. Pcmag.com. Retrieved on 2012-05-20.</ref><ref name=\"password_myths\">\n[http://www.symantec.com/connect/articles/ten-windows-password-myths \"Ten Windows Password Myths\"]: \"NT dialog boxes ... limited passwords to a maximum of 14 characters\"\n</ref><ref>[http://jira.codehaus.org/browse/REDBACK-87 \"You must provide a password between 1 and 8 characters in length\"]. Jira.codehaus.org. Retrieved on 2012-05-20. {{webarchive |url=https://web.archive.org/web/20150521153629/http://jira.codehaus.org/browse/REDBACK-87 |date=May 21, 2015 }}</ref> reducing security.)\n* Requiring users to re-enter their password after a period of inactivity (a semi log-off policy).\n* Enforcing a [[password policy]] to increase [[password strength]] and security.\n** Requiring periodic password changes.\n** Assigning randomly chosen passwords.\n** Requiring minimum password lengths.<ref name=\"bugcharmer.blogspot.com\"/>\n** Some systems require characters from various character classes in a password\u2014for example, \"must have at least one uppercase and at least one lowercase letter\". However, all-lowercase passwords are more secure per keystroke than mixed capitalization passwords.<ref>[http://world.std.com/~reinhold/dicewarefaq.html#capitalize \"To Capitalize or Not to Capitalize?\"]. World.std.com. Retrieved on 2012-05-20.</ref>\n** Employ a [[Blacklist (computing)#Usernames and passwords|password blacklist]] to block the use of weak, easily guessed passwords\n** Providing an alternative to keyboard entry (e.g., spoken passwords, or [[biometrics|biometric]] passwords).\n** Requiring more than one authentication system, such as two-factor authentication (something a user has and something the user knows).\n* Using encrypted tunnels or [[password-authenticated key agreement]] to prevent access to transmitted passwords via network attacks\n* Limiting the number of allowed failures within a given time period (to prevent repeated password guessing).  After the limit is reached, further attempts will fail (including correct password attempts) until the beginning of the next time period. However, this is vulnerable to a form of [[denial-of-service attack|denial of service attack]].\n* Introducing a delay between password submission attempts to slow down automated password guessing programs.\n\nSome of the more stringent policy enforcement measures can pose a risk of alienating users, possibly decreasing security as a result.\n\n=== Password reuse ===\n\nIt is common practice amongst computer users to reuse the same password on multiple sites. This presents a substantial security risk, since an [[Hacker (computer security)|attacker]] need only compromise a single site in order to gain access to other sites the victim uses. This problem is exacerbated by also reusing [[User (computing)|usernames]], and by websites requiring email logins, as it makes it easier for an attacker to track a single user across multiple sites. Password reuse can be avoided or minimused by using [[Mnemonic|mnemonic techniques]], [[Password#Writing down passwords on paper|writing passwords down on paper]], or using a [[password manager]].<ref name=\"Keir-PCWorld-2011\">{{cite web | url=http://www.pcworld.com/article/219303/password_use_very_common_research_shows.html | title=Password Reuse Is All Too Common, Research Shows | work=[[PC World]] | date=February 10, 2011 | accessdate=August 10, 2014 | author=Thomas, Keir}}</ref>\n\nIt has been argued by Redmond researchers Dinei Florencio and Cormac Herley, together with Paul C. van Oorschot of Carleton University, Canada, that password reuse is inevitable, and that users should reuse passwords for low-security websites (which contain little personal data and no financial information, for example) and instead focus their efforts on remember long, complex passwords for a few important accounts, such as bank accounts.<ref name=\"Darren-Microsoft-Register\">{{cite web | url=http://www.theregister.co.uk/2014/07/16/redmond_says_password_reuse_is_more_than_okay_its_necessary/ | title=Microsoft: You NEED bad passwords and should re-use them a lot | work=[[The Register]] | date=16 July 2014 | accessdate=10 August 2014 | author=Pauli, Darren}}</ref> Similar arguments were made by [[Forbes]] in not change passwords as often as many \"experts\" advise, due to the same limitations in human memory.<ref name=\"Joseph-Steinberg-Forbes\">{{cite news | url=http://www.forbes.com/sites/josephsteinberg/2014/11/12/why-you-should-ignore-everything-you-have-been-told-about-choosing-passwords/ | title=Forbes: Why You Should Ignore Everything You Have Been Told About Choosing Passwords | work=[[Forbes]] | date=12 November 2014 | accessdate=12 November 2014 | author=Joseph Steinberg |authorlink=Joseph Steinberg}}</ref>\n\n=== Writing down passwords on paper ===\n\nHistorically, many security experts asked people to memorize their passwords: \"Never write down a password\". More recently, many security experts such as [[Bruce Schneier]] recommend that people use passwords that are too complicated to memorize, write them down on paper, and keep them in a wallet.<ref>\n[http://www.schneier.com/crypto-gram-0105.html#8 Bruce Schneier : Crypto-Gram Newsletter] May 15, 2001\n</ref><ref name=\"password_myth\">\n[http://www.symantec.com/connect/articles/ten-windows-password-myths \"Ten Windows Password Myths\"]: Myth #7. You Should Never Write Down Your Password\n</ref><ref>Kotadia, Munir (2005-05-23) [http://news.cnet.com/Microsoft-security-guru-Jot-down-your-passwords/2100-7355_3-5716590.html?tag=nefd.ac Microsoft security guru: Jot down your passwords]. News.cnet.com. Retrieved on 2012-05-20.</ref><ref>\n[http://www.cryptosmith.com/sanity/pwdilemma.html \"The Strong Password Dilemma\"] by Richard E. Smith: \"we can summarize classical password selection rules as follows:\nThe password must be impossible to remember and never written down.\"\n</ref><ref>\n[http://www.burtleburtle.net/bob/crypto/password.html \"Choosing Random Passwords\"] by Bob Jenkins\n</ref><ref>\n[http://www.cl.cam.ac.uk/TechReports/UCAM-CL-TR-500.pdf \"The Memorability and Security of Passwords \u2013 Some Empirical Results\"] (pdf)\n: \"your password ... in a secure place, such as the back of your wallet or purse.\"\n</ref><ref>[http://world.std.com/~reinhold/dicewarefaq.html#writeitdown \"Should I write down my passphrase?\"]. World.std.com. Retrieved on 2012-05-20.</ref>\n\n[[Password manager]] software can also store passwords relatively safely, in an encrypted file sealed with a single master password.\n\n===After death===\n\nAccording to a survey by the [[University of London]], one in ten people are now leaving their passwords in their wills to pass on this important information when they die. One third of people, according to the poll, agree that their password protected data is important enough to pass on in their will.<ref>{{cite web | url=http://estatelaw.hullandhull.com/2011/10/articles/topics/estate-planning-1/survey-11-of-brits-include-internet-passwords-in-will/ | title=Survey: 11% of Brits Include Internet Passwords in Will | date=17 October 2011 | accessdate=16 July 2012 | publisher=Hull & Hull LLP | last=Jaffery | first = Saman M.}}</ref>\n\n===Two-factor authentication===\n\nTwo factor authentication makes passwords more secure. For example, two-factor authentication will send you a text message, e-mail, or alert via a third-party app whenever a login attempt is made.<ref>[https://www.yahoo.com/tech/two-factor-authentication-security-000000679.html Two-factor authentication]</ref>\n\n==Password cracking==\n{{Main article|Password cracking}}\n\nAttempting to crack passwords by trying as many possibilities as time and money permit is a [[brute force attack]]. A related method, rather more efficient in most cases, is a [[dictionary attack]]. In a dictionary attack, all words in one or more dictionaries are tested. Lists of common passwords are also typically tested.\n\n[[Password strength]] is the likelihood that a password cannot be guessed or discovered, and varies with the attack algorithm used. Cryptologists and computer scientists often refer to the strength or 'hardness' in terms of [[Entropy (information theory)|entropy]].<ref name=\"SS1\" />\n\nPasswords easily discovered are termed ''weak'' or ''vulnerable''; passwords very difficult or impossible to discover are considered ''strong''. There are several programs available for password attack (or even auditing and recovery by systems personnel) such as [[L0phtCrack]], [[John the Ripper]], and [[Cain (software)|Cain]]; some of which use password design vulnerabilities (as found in the Microsoft LANManager system) to increase efficiency. These programs are sometimes used by system administrators to detect weak passwords proposed by users.\n\nStudies of production computer systems have consistently shown that a large fraction of all user-chosen passwords are readily guessed automatically. For example, Columbia University found 22% of user passwords could be recovered with little effort.<ref>{{webarchive |url=https://web.archive.org/web/20070423015011/http://www.cs.columbia.edu/~crf/howto/password-howto.html |date=April 23, 2007 |title=Password }}. cs.columbia.edu</ref> According to [[Bruce Schneier]], examining data from a 2006 [[phishing]] attack, 55% of [[MySpace]] passwords would be crackable in 8 hours using a commercially available Password Recovery Toolkit capable of testing 200,000 passwords per second in 2006.<ref>[http://www.schneier.com/blog/archives/2006/12/realworld_passw.html Schneier, Real-World Passwords]. Schneier.com. Retrieved on 2012-05-20.</ref> He also reported that the single most common password was ''password1'', confirming yet again the general lack of informed care in choosing passwords among users.  (He nevertheless maintained, based on these data, that the general quality of passwords has improved over the years\u2014for example, average length was up to eight characters from under seven in previous surveys, and less than 4% were dictionary words.<ref>[http://www.wired.com/politics/security/commentary/securitymatters/2006/12/72300 MySpace Passwords Aren't So Dumb]. Wired.com (2006-10-27). Retrieved on 2012-05-20.</ref>)\n\n===Incidents===\n\n* On July 16, 1998, [[CERT Coordination Center|CERT]] reported an incident where an attacker had found 186,126 encrypted passwords. At the time the attacker was discovered, 47,642 passwords had already been cracked.<ref name=\"CERT IN-98.03\">{{cite web\n | url=http://www.cert.org/incident_notes/IN-98.03.html\n | title=CERT IN-98.03|date=1998-07-16\n | accessdate=2009-09-09}}</ref>\n* In September, 2001, after the deaths of 960 New York employees in the [[September 11 attacks]], financial services firm [[Cantor Fitzgerald]] through [[Microsoft]] broke the passwords of deceased employees to gain access to files needed for servicing client accounts.<ref name=NYTimes20141123/> Technicians used brute-force attacks, and interviewers contacted families to gather personalized information that might reduce the search time for weaker passwords.<ref name=NYTimes20141123>{{cite news |last1=Urbina |first1=Ian |last2=Davis |first2=Leslye |title=The Secret Life of Passwords |url=http://www.nytimes.com/2014/11/19/magazine/the-secret-life-of-passwords.html |website=The New York Times |archiveurl=http://www.webcitation.org/6UQnovwTe |archivedate=November 28, 2014 |date=November 23, 2014}}</ref>\n* In December 2009, a major password breach of the [[RockYou|Rockyou.com]] website occurred that led to the release of 32 million passwords. The hacker then leaked the full list of the 32 million passwords (with no other identifiable information) to the Internet. Passwords were stored in cleartext in the database and were extracted through a SQL injection vulnerability. The [[Imperva]] Application Defense Center (ADC) did an analysis on the strength of the passwords.<ref>{{cite web|url=http://www.imperva.com/docs/WP_Consumer_Password_Worst_Practices.pdf |title=Consumer Password Worst Practices (pdf)}}</ref>\n* In June, 2011, [[NATO]] (North Atlantic Treaty Organization) experienced a security breach that led to the public release of first and last names, usernames, and passwords for more than 11,000 registered users of their e-bookshop. The data was leaked as part of [[Operation AntiSec]], a movement that includes [[Anonymous (group)|Anonymous]], [[LulzSec]], as well as other hacking groups and individuals. The aim of AntiSec is to expose personal, sensitive, and restricted information to the world, using any means necessary.<ref>{{cite web |url=http://www.theregister.co.uk/2011/06/24/nato_hack_attack/ |accessdate = July 24, 2011 |title=NATO site hacked|work=The Register|date=2011-06-24}}</ref>\n* On July 11, 2011, [[Booz Allen Hamilton]], a consulting firm that does work for [[the Pentagon]], had their servers hacked by [[Anonymous (group)|Anonymous]] and leaked the same day. \"The leak, dubbed 'Military Meltdown Monday,' includes 90,000 logins of military personnel\u2014including personnel from [[United States Central Command|USCENTCOM]], [[United States Special Operations Command|SOCOM]], the [[United States Marine Corps|Marine corps]], various [[United States Air Force|Air Force]] facilities, [[Homeland Security]], [[United States State Department|State Department]] staff, and what looks like private sector contractors.\"<ref>{{cite web |url=http://gizmodo.com/5820049/anonymous-leaks-90000-military-email-accounts-in-latest-antisec-attack |title=Anonymous Leaks 90,000 Military Email Accounts in Latest Antisec Attack |date=2011-07-11}}</ref> These leaked passwords wound up being hashed in SHA1, and were later decrypted and analyzed by the ADC team at [[Imperva]], revealing that even military personnel look for shortcuts and ways around the password requirements.<ref>{{cite web |url = http://blog.imperva.com/2011/07/military-password-analysis.html |title=Military Password Analysis |date= 2011-07-12}}</ref>\n\n==Alternatives to passwords for authentication==\n\nThe numerous ways in which permanent or semi-permanent passwords can be compromised has prompted the development of other techniques. Unfortunately, some are inadequate in practice, and in any case few  have become universally available for users seeking a more secure alternative.{{Citation needed|date=January 2010}} A 2012 paper<ref>{{cite web|url=http://research.microsoft.com/pubs/161585/QuestToReplacePasswords.pdf |title=The Quest to Replace Passwords (pdf)|publisher=IEEE |date=2012-05-15 |accessdate=2015-03-11}}</ref> examines why passwords have proved so hard to supplant (despite numerous predictions that they would soon be a thing of the past<ref name=\"CNET\">{{cite web|url=http://news.cnet.com/2100-1029-5164733.html |title=Gates predicts death of the password |publisher=CNET |date=2004-02-25 |accessdate=2015-03-14}}</ref>); in examining thirty representative proposed replacements with respect to security, usability and deployability they  conclude \"none even retains the full set of benefits that legacy passwords already provide.\"\n\n* [[One-time password|Single-use passwords]]. Having passwords which are only valid once makes many potential attacks ineffective. Most users find single use passwords extremely inconvenient. They have, however, been widely implemented in personal [[online banking]], where they are known as [[TAN (banking)|Transaction Authentication Numbers]] (TANs). As most home users only perform a small number of transactions each week, the single use issue has not led to intolerable customer dissatisfaction in this case.\n* [[Time-synchronized one-time passwords]] are similar in some ways to single-use passwords, but the value to be entered is displayed on a small (generally pocketable) item and changes every minute or so.\n* [[PassWindow]] one-time passwords are used as single-use passwords, but the dynamic characters to be entered are visible only when a user superimposes a unique printed visual key over a server generated challenge image shown on the user's screen.\n*Access controls based on [[public key cryptography]] e.g. [[Secure Shell|ssh]]. The necessary keys are usually too large to memorize (but see proposal Passmaze)<ref>[http://eprint.iacr.org/2005/434 Cryptology ePrint Archive: Report 2005/434]. eprint.iacr.org. Retrieved on 2012-05-20.</ref> and must be stored on a local computer, [[security token]] or portable memory device, such as a [[USB flash drive]] or even [[floppy disk]].\n*[[Biometric]] methods promise authentication based on unalterable personal characteristics, but currently (2008) have high error rates and require additional hardware to scan, for example, [[fingerprint]]s, [[iris (anatomy)|iris]]es, etc. They have proven easy to spoof in some famous incidents testing commercially available systems, for example,  the gummie fingerprint spoof demonstration,<ref>{{cite journal|author1=T Matsumoto. H Matsumotot |author2=K Yamada |author3=S Hoshino  |last-author-amp=yes |title= Impact of artificial 'Gummy' Fingers on Fingerprint Systems|journal= Proc SPIE|volume= 4677|doi=10.1117/12.462719|page=275 |year=2002}}</ref> and, because these characteristics are unalterable, they cannot be changed if compromised; this is a highly important consideration in access control as a compromised access token is necessarily insecure.\n*[[Single sign-on]] technology is claimed to eliminate the need for having multiple passwords. Such schemes do not relieve user and administrators from choosing reasonable single passwords, nor system designers or administrators from ensuring that private access control information passed among systems enabling single sign-on is secure against attack. As yet, no satisfactory standard has been developed.\n*Envaulting technology is a password-free way to secure data on removable storage devices such as USB flash drives. Instead of user passwords, access control is based on the user's access to a network resource.\n*Non-text-based passwords, such as graphical passwords or mouse-movement based passwords.<ref>[http://waelchatila.com/2005/09/18/1127075317148.html Using AJAX for Image Passwords \u2013 AJAX Security Part 1 of 3]. waelchatila.com (2005-09-18). Retrieved on 2012-05-20.</ref>  Graphical passwords are an alternative means of [[authentication]] for log-in intended to be used in place of conventional password; they use [[image]]s, [[graphics]] or [[colours]] instead of [[Letter (alphabet)|letters]], [[numerical digit|digits]] or [[special characters]]. One system requires users to select a series of [[face]]s as a password, utilizing the [[human brain]]'s ability to [[face perception|recall faces]] easily.<ref>Butler, Rick A. (2004-12-21) [http://mcpmag.com/reviews/products/article.asp?EditorialsID=486 Face in the Crowd]. mcpmag.com. Retrieved on 2012-05-20.</ref> In some implementations the user is required to pick from a series of images in the correct sequence in order to gain access.<ref>[http://searchsecurity.techtarget.com/sDefinition/0,,sid14_gci1001829,00.html graphical password or graphical user authentication (GUA)]. searchsecurity.techtarget.com. Retrieved on 2012-05-20.</ref> Another graphical password solution creates a [[one-time password]] using a randomly generated grid of images. Each time the user is required to authenticate, they look for the images that fit their pre-chosen categories and enter the randomly generated alphanumeric character that appears in the image to form the one-time password.<ref name=\"Images Could Change the Authentication Picture\">{{cite web |url=http://www.darkreading.com/authentication/security/client/showArticle.jhtml?articleID=228200140 |title=Images Could Change the Authentication Picture |author=Ericka Chickowski |publisher=Dark Reading |date=2010-11-03}}</ref><ref name=\"Confident Technologies Delivers Image-Based, Multifactor Authentication to Strengthen Passwords on Public-Facing Websites\">{{cite web |url=http://www.marketwire.com/press-release/Confident-Technologies-Delivers-Image-Based-Multifactor-Authentication-Strengthen-Passwords-1342854.htm |title=Confident Technologies Delivers Image-Based, Multifactor Authentication to Strengthen Passwords on Public-Facing Websites|date=2010-10-28}}</ref> So far, graphical passwords are promising, but are not widely used. Studies on this subject have been made to determine its usability in the real world. While some believe that graphical passwords would be harder to [[Password cracking|crack]], others suggest that people will be just as likely to pick common images or sequences as they are to pick common passwords.{{Citation needed|date=September 2009}}\n*[[2D Key]] (2-Dimensional Key)<ref>[http://www.xpreeli.com/doc/manual_2DKey_2.0.pdf User Manual for 2-Dimensional Key (2D Key) Input Method and System]. xpreeli.com. (2008-09-08) . Retrieved on 2012-05-20.</ref> is a 2D matrix-like key input method having the key styles of multiline passphrase, crossword, ASCII/Unicode art, with optional textual semantic noises, to create big password/key beyond 128 bits to realize the MePKC (Memorizable Public-Key Cryptography)<ref>Kok-Wah Lee \"Methods and Systems to Create Big Memorizable Secrets and Their Applications\" Patent [http://www.google.com/patents/US20110055585 US20110055585], [http://www.wipo.int/pctdb/en/wo.jsp?WO=2010010430 WO2010010430]. Filing date: December 18, 2008</ref> using fully memorizable private key upon the current private key management technologies like encrypted private key, split private key, and roaming private key.\n*[[Cognitive password]]s use question and answer cue/response pairs to verify identity.\n\n==\"The Password is dead\"==\nThat \"the password is dead\" is a recurring idea in [[computer security]]. It often accompanies arguments that the replacement of passwords by a more secure means of authentication is both necessary and imminent. This claim has been made by numerous people at least since 2004.  Notably, [[Bill Gates]], speaking at the 2004 [[RSA Conference]] predicted the demise of  passwords saying \"they just don't meet the challenge for anything you really want to secure.\"<ref name=\"CNET\"/> In 2011 [[IBM]] predicted  that, within five years, \"You will never need a password again.\"<ref>{{cite web|url=http://www-03.ibm.com/press/us/en/pressrelease/36290.wss |title=IBM Reveals Five Innovations That Will Change Our Lives within Five Years |publisher=IBM |date=2011-12-19 |accessdate=2015-03-14}}</ref> Matt Honan, a journalist at [[Wired (magazine)|Wired]], who was the victim of a hacking incident, in 2012 wrote \"The age of the password has come to an end.\"<ref>{{cite news|url=http://www.wired.com/2012/11/ff-mat-honan-password-hacker/ |title=Kill the Password: Why a String of Characters Can\u2019t Protect Us Anymore |publisher=Wired |date=2012-05-15 |accessdate=2015-03-14 |first=Mat |last=Honan}}</ref> Heather Adkins, manager of Information Security at [[Google]], in 2013 said that \"passwords are done at Google.\"<ref>{{cite web|url=http://www.cnet.com/news/google-security-exec-passwords-are-dead/ |title=Google security exec: 'Passwords are dead' |publisher=CNET |date=2004-02-25 |accessdate=2015-03-14}}</ref> Eric Grosse, VP of security engineering at Google, states that \"passwords and simple bearer tokens, such as cookies, are no longer sufficient to keep users safe.\"<ref>{{cite web|url=http://www.computer.org/csdl/mags/sp/2013/01/msp2013010015-abs.html |title=Authentciation at Scale |publisher=IEEE |date=2013-01-25 |accessdate=2015-03-12}}</ref> Christopher Mims, writing in the [[Wall Street Journal]] said the password \"is finally dying\" and predicted their replacement by device-based authentication.<ref>{{cite news|url=http://www.wsj.com/articles/the-password-is-finally-dying-heres-mine-1405298376 |title=\nThe Password Is Finally Dying. Here's Mine |publisher=Wall Street Journal |date=2014-07-14 |accessdate=2015-03-14 |first=Christopher |last=Mims}}</ref>\nAvivah Litan of [[Gartner]] said in 2014 \"Passwords were dead a few years ago. Now they are more than dead.\"<ref>{{cite web|url=http://www.computerworld.com/article/2490980/security0/russian-credential-theft-shows-why-the-password-is-dead.html |title=Russian credential theft shows why the password is dead |publisher=Computer World |date=2014-08-14 |accessdate=2015-03-14}}</ref>\nThe reasons given often include reference to the [[Usability]] as well as security problems of passwords.\n\nThe claim that \"the password is dead\" is often used by advocates of alternatives to passwords, such as [[Biometrics]], [[Two-factor authentication]] or [[Single sign-on]]. Many initiatives have been launched with the explicit goal of eliminating passwords. These include [[Microsoft]]'s [[Cardspace]], the [[Higgins project]], the [[Liberty Alliance]], [[NSTIC]], the [[FIDO Alliance]] and various [[Identity 2.0]] proposals. Jeremy Grant, head of   NSTIC initiative (the US Dept. of Commerce National Strategy for Trusted Identities in Cyberspace), declared \"Passwords are a disaster from a security perspective, we want to shoot them dead.\"<ref>{{cite web|url=http://fedscoop.com/nstic-head-jeremy-grant-wants-kill-passwords |title=NSTIC head Jeremy Grant wants to kill passwords |publisher=Fedscoop |date=2014-09-14 |accessdate=2015-03-14}}</ref> The FIDO Alliance promises a \"passwordless experience\" in its 2015 specification document.<ref>{{cite web|url=https://fidoalliance.org/specifications |title=Specifications Overview |publisher=FIDO Alliance |date=2014-02-25 |accessdate=2015-03-15}}</ref>\n\nIn spite of these predictions and efforts to replace them passwords still appear as the dominant form of authentication on the web. In \"The Persistence of Passwords,\" Cormac Herley and Paul van Oorschot suggest that every effort should be made to end the \"spectacularly incorrect assumption\" that passwords are dead.<ref>{{cite web|url=http://research.microsoft.com/apps/pubs/?id=154077 |title=\nA Research Agenda Acknowledging the Persistence of Passwords |publisher=IEEE Security&Privacy |date=Jan 2012 |accessdate=2015-06-20}}</ref>\nThey argue that \"no other single technology matches their combination of cost, immediacy and convenience\" and that \"passwords are themselves the best fit for many of the scenarios in which they are currently used.\"\n\n==Website password systems==\nPasswords are used on websites to authenticate users and are usually maintained on the Web server, meaning the browser on a remote system sends a password to the server (by HTTP POST), the server checks the password and sends back the relevant content (or an access denied message). This process eliminates the possibility of local reverse engineering as the code used to authenticate the password does not reside on the local machine.\n\nTransmission of the password, via the browser, in plaintext means it can be intercepted along its journey to the server. Many web authentication systems use SSL to establish an encrypted session between the browser and the server, and is usually the underlying meaning of claims to have a \"secure Web site\". This is done automatically by the browser and increases integrity of the session, assuming neither end has been compromised and that the [[Transport Layer Security|SSL/TLS]] implementations used are high quality ones.\n\n==History of passwords==\nPasswords or ''watchwords'' have been used since ancient times.  [[Polybius]] describes the system for the distribution of watchwords in the [[Military of ancient Rome|Roman military]] as follows:\n\n<blockquote>The way in which they secure the passing round of the watchword for the night is as follows: from the tenth [[maniple (military unit)|maniple]] of each class of infantry and cavalry, the maniple which is encamped at the lower end of the street, a man is chosen who is relieved from guard duty, and he attends every day at sunset at the tent of the [[tribune]], and receiving from him the watchword\u2014that is a wooden tablet with the word inscribed on it \u2013 takes his leave, and on returning to his quarters passes on the watchword and tablet before witnesses to the commander of the next maniple, who in turn passes it to the one next him. All do the same until it reaches the first maniples, those encamped near the tents of the tribunes. These latter are obliged to deliver the tablet to the tribunes before dark. So that if all those issued are returned, the tribune knows that the watchword has been given to all the maniples, and has passed through all on its way back to him. If any one of them is missing, he makes inquiry at once, as he knows by the marks from what quarter the tablet has not returned, and whoever is responsible for the stoppage meets with the punishment he merits.<ref>[http://ancienthistory.about.com/library/bl/bl_text_polybius6.htm Polybius on the Roman Military]. Ancienthistory.about.com (2012-04-13). Retrieved on 2012-05-20.</ref></blockquote>\n\nPasswords in military use evolved to include not just a password, but a password and a counterpassword; for example in the opening days of the [[Invasion of Normandy|Battle of Normandy]], paratroopers of the U.S. 101st Airborne Division used a password\u2014''flash''\u2014which was presented as a challenge, and answered with the correct response\u2014''thunder''. The challenge and response were changed every three days. American paratroopers also famously used a device known as a \"cricket\" on [[D-Day]] in place of a password system as a temporarily unique method of identification; one metallic click given by the device in lieu of a password was to be met by two clicks in reply.<ref>{{cite book|author=Mark Bando|title=101st Airborne: The Screaming Eagles in World War II|url=https://books.google.com/books?id=cBSBtgAACAAJ|accessdate=20 May 2012|year=2007|publisher=Mbi Publishing Company|isbn=978-0-7603-2984-9}}</ref>\n\nPasswords have been used with computers since the earliest days of computing. [[MIT]]'s [[Compatible Time-Sharing System|CTSS]], one of the first time sharing systems, was introduced in 1961. It had a LOGIN command that requested a user password. \"After typing PASSWORD, the system turns off the printing mechanism, if possible, so that the user may type in his password with privacy.\"<ref>CTSS Programmers Guide, 2nd Ed., MIT Press, 1965</ref>  In the early 1970s, [[Robert Morris (cryptographer)|Robert Morris]] developed a system of storing login passwords in a hashed form as part of the [[Unix]] operating system. The system was based on a simulated Hagelin rotor crypto machine, and first appeared in 6th Edition Unix in 1974. A later version of his algorithm, known as [[crypt (Unix)|crypt(3)]], used a 12-bit [[salt (cryptography)|salt]] and invoked a modified form of the [[Data Encryption Standard|DES]] algorithm 25 times to reduce the risk of pre-computed [[dictionary attack]]s.<ref>{{cite web \n | url=http://cm.bell-labs.com/cm/cs/who/dmr/passwd.ps\n | title=Password Security: A Case History.\n | work=Bell Laboratories\n |author1=Morris, Robert |author2=Thompson, Ken | date=1978-04-03\n | accessdate=2011-05-09 }}\n</ref>\n\n==See also==\n{{colbegin|4}}\n* [[Access code (disambiguation)]]\n* [[Authentication]]\n* [[CAPTCHA]]\n* [[Cognitive science]]\n* [[Diceware]]\n* [[Kerberos (protocol)]]\n* [[Keyfile]]\n* [[Passphrase]]\n* [[Password cracking]]\n* [[Password fatigue]]\n* [[Password length parameter]]\n* [[Password manager]]\n* [[Password notification e-mail]]\n* [[Password policy]]\n* [[Password psychology]]\n* [[Password strength]]\n* [[Password synchronization]]\n* [[Password-authenticated key agreement]]\n* [[Pre-shared key]]\n* [[Random password generator]]\n* [[Rainbow table]]\n* [[Self-service password reset]]\n* [[Usability of web authentication systems]]\n{{colend}}\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n* [http://www.acsac.org/2005/abstracts/89.html Graphical Passwords: A Survey]\n* [http://dazzlepod.com/site_media/txt/passwords.txt Large list of commonly used passwords]\n* [http://www.passwordresearch.com/stats/statindex.html Large collection of statistics about passwords]\n* [http://www.jablon.org/passwordlinks.html Research Papers on Password-based Cryptography]\n* [http://folk.uio.no/josang/passwords-conference/ The international passwords conference]\n* [http://www.emiic.net/docs/PasswordGuide.pdf Procedural Advice for Organisations and Administrators] (PDF)\n* [http://www.cscan.org/ Centre for Security, Communications and Network Research], University of Plymouth (PDF)\n\n[[Category:Password authentication]]\n[[Category:Identity documents]]\n[[Category:Security]]"}]}}}}