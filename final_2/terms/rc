{"batchcomplete":"","query":{"normalized":[{"from":"rc","to":"Rc"}],"pages":{"171918":{"pageid":171918,"ns":0,"title":"Rc","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{about|the shell||RC (disambiguation)}}\n{{lowercase|title=rc}}\n{{refimprove|date=March 2014}}\n{{Infobox programming language\n| name                   = rc\n| logo                   = \n| paradigm               = [[Imperative programming|imperative]], [[Pipeline programming|pipeline]]\n| year                   = {{Start date and age|1989}}\n| designer               = [[Tom Duff]]\n| developer              = [[Bell Labs]]\n| latest_release_version = \n| latest_release_date    = \n| latest_test_version    = \n| latest_test_date       = \n| source_model           = [[Open source]]\n| typing                 = [[weak typing|weak]]\n| implementations        = \n| dialects               = Byron's rc\n| influenced_by          = [[Bourne shell]]\n| influenced             = [[es (Unix shell)|es]], The [[Inferno (operating system)|Inferno]] shell.\n| operating_system       = [[Cross-platform]] ([[Version 10 Unix]], [[Plan 9 from Bell Labs|Plan 9]], [[Plan 9 from User Space]])\n| license                =\n| website                = [http://doc.cat-v.org/plan_9/4th_edition/papers/rc Rc - The Plan 9 Shell]\n}}\n[[File:Plan 9 from Bell Labs (process management).png|thumb|An rc session]]\n'''rc''' (for \"[[run commands]]\") is the [[command line interpreter]] for [[Version 10 Unix]] and [[Plan 9 from Bell Labs]] [[operating system]]s. It resembles the [[Bourne shell]], but its syntax is somewhat simpler. It was created by [[Tom Duff]], who is better known for an unusual [[C (programming language)|C programming language]] construct (\"[[Duff's device]]\").\n\nA port of the original rc to Unix is part of [[Plan 9 from User Space]].  A rewrite of rc for [[Unix-like]] operating systems by Byron Rakitzis is also available but includes some incompatible changes.\n\nRc uses C-like control structures instead of [[ALGOL]]-like, as the original Bourne shell, except that it uses an <code>if not</code> construct instead of <code>else</code> and has a Bourne-like <code>for</code> loop to iterate over lists. In rc all variables are lists of strings, which eliminates the need for constructs like \"<code>[[$@]]</code>\".\n\n==Influences== <!--Anchor from redirected [es] article; caution with changes. -->\n\n===es===\n''es'' (for \"extensible shell\") is an [[Open source]], [[command line interpreter]] developed by Rakitzis and Paul Haahr,<ref>{{cite book | url=https://books.google.com/books?id=iEK6eQQwOF0C&pg=PA43&redir_esc=y#v=onepage&q&f=false | title=Spatial Analytical Perspectives on GIS}}</ref> that uses a [[scripting language]] syntactically similar  to the rc shell.<ref>{{cite web | url=http://manpages.ubuntu.com/manpages/hardy/man1/es.1.html |title=Ubuntu Manpage: es - extensible shell |publisher=Manpages.ubuntu.com |date=1992-03-05 |accessdate=2012-08-24}}</ref><ref>{{cite web | url=http://foldoc.org/Extensible+Shell |title=Extensible Shell |publisher=FOLDOC |date= |accessdate=2012-08-24}}</ref>  It was originally based on code from Byron Rakitzis's clone of [[rc shell|rc]] for Unix<ref>{{cite web | url=http://luv.asn.au/overheads/shells-talk.html |title=Shells Available for Linux |publisher=LUV |date= |accessdate=2012-08-24}}</ref><ref>{{cite web|last=Jones|first=Tim|title=Evolution of shells in Linux|url=http://www.ibm.com/developerworks/library/l-linux-shells/|publisher=IBM|accessdate=14 March 2014}}</ref>\n\nExtensible shell is intended to provide a fully [[functional programming|functional]] [[programming language]] as a [[Unix shell]].<ref>{{cite web | url=http://nnc3.com/lj/LJ/LJ12/0062.html |title=Linux Journal 12: What's GNU |date= |accessdate=2012-08-24}}</ref>  The bulk of es development occurred in the early 1990s, after the shell was introduced at the Winter 1993 [[USENIX]] conference in [[San Diego]],<ref>[http://stuff.mit.edu/afs/sipb/user/yandros/doc/es-usenix-winter93.html Es: A shell with higher-order functions] by Byron Rakitzis, [[NetApp|NetApp, Inc]], and Paul Haahr, [[Adobe Systems Incorporated]]; <u>Archived</u> at [http://web.archive.org/web/20090415213858/http://192.220.96.201/es/es-usenix-winter93.html Archive.Org].</ref>  Official releases appear to have ceased after 0.9-beta-1 in 1997,<ref>[ftp://ftp.sys.utoronto.ca/pub/es/ ]</ref> and standard es lacks features as compared to more popular shells, such as [[zsh]] and [[Bash (Unix shell)|bash]].<ref>{{cite web | url=http://www.faqs.org/faqs/unix-faq/shell/shell-differences/ |title=UNIX shell differences| publisher=Faqs.org |date= | accessdate=2012-08-24}}</ref>\n\n==Examples==\nFor example, the Bourne shell script\n\n<source lang=\"bash\">\nif [ \"$1\" = \"hello\" ]; then\n    echo hello, world\nelse\n    case \"$2\" in\n    1) echo $# 'hey' \"jude's\"$3;;\n    2) echo `date` :$*: :\"$@\":;;\n    *) echo why not 1>&2\n    esac\n    for i in a b c; do\n        echo $i\n    done\nfi\n</source>\n\nis expressed in rc as\n\n<source lang=\"text\">\nif(~ $1 hello)\n    echo hello, world\nif not {\n    switch($2) {\n    case 1\n        echo $#* 'hey' 'jude''s'^$3\n    case 2\n        echo `{date} :$\"*: :$*:\n    case *\n        echo why not >[1=2]\n    }\n    for(i in a b c)\n        echo $i\n}\n</source>\n\nBecause <tt>if</tt> and <tt>if not</tt> are two different statements, they must be grouped in order to be used in certain situations.\n\nRc also supports more dynamic piping:\n\n a |[2] b    ''# pipe only [[standard error]] of a to b \u2014 in [[Bourne shell]] as a 3>&2 2>&1 >&3 | b''\n a <>b       ''# opens b as a's [[standard input]] and [[standard output]]''\n a <{b} <{c} ''# becomes a {standard output of b} {standard output of c}''\n\n==References==\n{{reflist|25em}}\n\n==External links==\n*{{man|1|rc|Plan 9||inline}} - Plan 9 manual page.\n*[http://tobold.org/article/rc Byron Rakitzis' rewrite for Unix]\n*[http://hawkwind.utcs.utoronto.ca:8001/mlists/es.html es Official website]\n\n{{Unix Shells}}\n\n[[Category:Plan 9 from Bell Labs]]\n[[Category:Inferno (operating system)]]\n[[Category:Free system software]]\n[[Category:Unix shells]]\n[[Category:Scripting languages]]\n[[Category:Text-oriented programming languages]]\n[[Category:Procedural programming languages]]\n[[Category:Programming languages created in 1989]]"}]}}}}