{"batchcomplete":"","query":{"normalized":[{"from":"access_control_list","to":"Access control list"}],"pages":{"61589":{"pageid":61589,"ns":0,"title":"Access control list","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{about|the computer permissions list|the ligament|Anterior cruciate ligament}}\nAn '''access control list''' ('''ACL'''), with respect to a [[computer]] [[file system]], is a list of [[File system permissions|permissions]] attached to an [[Computer file|object]].  An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed on given objects.<ref>RFC 4949</ref> Each entry in a typical ACL specifies a subject and an operation.  For instance, if a file object has an ACL that contains <tt>(Alice: read,write; Bob: read)</tt>, this would give Alice permission to read and write the file and Bob to only read it.\n\n== Implementations ==\nMany kinds of systems implement ACL, or have a historical implementation.\n\n=== Filesystem ACLs ===\nIn the 1990s the ACL and [[Role-based access control|RBAC]] models were extensively tested and used to administrate file permissions.\nA [[filesystem]] ACL is a data structure (usually a table) containing entries that specify individual user or group rights to specific system objects such as programs, processes, or files. These entries are known as access control entries (ACEs) in the [[Microsoft Windows NT]],<ref>{{cite web\n| url=http://technet.microsoft.com/en-us/library/bb457115.aspx\n| title=Managing Authorization and Access Control\n| date=2005-11-03\n| publisher=[[Microsoft Technet]]\n| accessdate=2013-04-08}}</ref> [[OpenVMS]], [[Unix-like]], and [[Mac OS X]] [[operating system]]s. Each accessible object contains an identifier to its ACL. The privileges or permissions determine specific access rights, such as whether a user can read from, write to, or [[execution (computing)|execute]] an object. In some implementations, an ACE can control whether or not a user, or group of users, may alter the ACL on an object.\n\nMost of the Unix and Unix-like operating systems (e.g. [[Linux]],<ref>{{cite web\n| url=https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_Linux/3/html/Release_Notes/as-x86/index.html\n| title=Red Hat Enterprise Linux AS 3 Release Notes (x86 Edition)\n| quote=EA (Extended Attributes) and ACL (Access Control Lists) functionality is now available for ext3 file systems. In addition, ACL functionality is available for NFS.\n| year=2003\n| publisher=[[Red Hat]]\n| accessdate=2013-04-08}}</ref> [[BSD]], or [[Solaris (operating system)|Solaris]]) support POSIX.1e ACLs, based on an early [[POSIX]] draft that was withdrawn in 1997. Many of them, for example [[AIX]], [[FreeBSD]],<ref>{{cite web\n| url=https://wiki.freebsd.org/NFSv4_ACLs\n| title=NFSv4 ACLs\n| date=2011-09-12\n| publisher=[[FreeBSD]]\n| accessdate=2013-04-08}}</ref> [[Mac OS X]] beginning with version 10.4 (\"[[Mac OS X Tiger|Tiger]]\"), or [[Solaris (operating system)|Solaris]] with [[ZFS]] filesystem,<ref>{{cite web\n| url=http://docs.oracle.com/cd/E19082-01/817-2271/ftyxi/index.html\n| title=Chapter 8 Using ACLs and Attributes to Protect ZFS Files\n| publisher=[[Oracle Corporation]]\n| date=2009-10-01\n| accessdate=2013-04-08}}</ref> support [[NFSv4]] ACLs, which are part of the NFSv4 standard. There are two experimental implementations of NFSv4 ACLs for Linux: NFSv4 ACLs support for [[Ext3]] filesystem<ref>{{cite web\n| url=http://users.suse.com/~agruen/nfs4acl/\n| title=Native NFSv4 ACLs on Linux\n| first=Andreas\n| last=Gr\u00fcnbacher\n| date=May 2008\n| publisher=[[SUSE]]\n| archive-url=https://web.archive.org/web/20130620012339/http://users.suse.com/~agruen/nfs4acl/\n| archive-date=2013-06-20\n| dead-url=yes\n| accessdate=2013-04-08}}</ref> and recent [[Richacls]],<ref>{{cite web\n| url=http://www.bestbits.at/richacl/\n| title=Richacls - Native NFSv4 ACLs on Linux\n| first=Andreas\n| last=Gr\u00fcnbacher\n| date=July\u2013September 2010\n| publisher=bestbits.at\n| accessdate=2013-04-08}}</ref> which brings NFSv4 ACLs support for [[Ext4]] filesystem.\n''\n\n=== Networking ACLs ===\nOn some types of proprietary computer hardware (in particular [[router (computing)|routers]] and [[Network switch|switches]]), an access control list refers to rules that are applied to [[TCP and UDP port|port numbers]] or [[Ip address|IP addresses]] that are available on a [[server (computing)|host]] or other [[Network Layer|layer 3]], each with a list of hosts and/or networks permitted to use the service. Although it is additionally possible to configure access control lists based on network domain names, this is generally a questionable idea because individual TCP, UDP, and ICMP headers do not contain domain names. Consequently, the device enforcing the access control list must separately resolve names to numeric addresses. This presents an additional attack surface for an attacker who is seeking to compromise security of the system which the access control list is protecting. Both individual [[server (computing)|servers]] as well as [[router (computing)|routers]] can have network ACLs. Access control lists can generally be configured to control both inbound and outbound traffic, and in this context they are similar to [[firewall (networking)|firewalls]]. Like firewalls, ACLs could be subject to security regulations and standards such as [[PCI DSS]].\n\n=== SQL implementations ===\nACL algorithms have been ported to [[SQL]] and [[Relational database management system|relational database systems]]. Many \"modern\" (2000's and 2010's) [[SQL]] based systems, like [[enterprise resource planning]] and [[Content management system|content management]] systems, have used ACL model in their administration modules.\n\n== Comparing with RBAC ==\nThe main alternative to the ACL model is the [[Role-based access control]] (RBAC) model.  A \"minimal RBAC Model\", ''RBACm'', can be compared with an ACL mechanism, ''ACLg'', where only groups are permitted as entries in the ACL. Barkley (1997)<ref>J. Barkley (1997) \"[http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.107.6366  Comparing simple role based access control models and access control lists]\", In \"Proceedings of the second ACM workshop on Role-based access control\", pages 127-132.</ref> showed that ''RBACm'' and ''ACLg'' are equivalent.\n\nIn modern SQL implementations, ACL also manage groups and inheritance in a hierarchy of groups.\nSo \"modern ACLs\" can express all that RBAC express, and are notably powerful (compared to \"old ACLs\") in their ability to express access control policy in terms of the way in which administrators view organizations.\n\nFor data interchange, and for \"high level comparisons\", ACL data can be translated to [[XACML]].<ref>G. Karjoth, A. Schade and E. Van Herreweghen (2008) \"[http://www.acsac.org/openconf2008/modules/request.php?module=oc_program&action=view.php&id=73 Implementing ACL-based Policies in XACML]\", In \"2008 Annual Computer Security Applications Conference\".</ref>\n\n== See also ==\n* [[Cacls]]\n* [[Capability-based security]]\n* [[Confused deputy problem]]\n* [[DACL]]\n* [[Role-based access control]] (RBAC)\n\n== References ==\n{{reflist|30em}}\n\n== Further reading ==\n{{refbegin}}\n* {{cite web\n| url=https://www.freebsd.org/doc/en/books/handbook/fs-acl.html\n| title=File System Access Control Lists (ACLs)\n| work=FreeBSD Handbook\n| first=Tom\n| last=Rhodes\n| accessdate=2013-04-08}}\n* {{cite web\n| url=https://www.cs.virginia.edu/~jcg8f/GrsecuritySELinuxCaseStudy.pdf\n| title=SELinux and grsecurity: A Case Study Comparing Linux Security Kernel Enhancements\n|author1=Michael Fox |author2=John Giordano |author3=Lori Stotler |author4=Arun Thomas | publisher=[[University of Virginia]]\n| date=2005-08-24\n| accessdate=2013-04-08}}\n* {{cite web\n| url=http://www.cs.uiuc.edu/class/fa05/cs498sh/seclab/slides/OSNotes.ppt\n| title=Operating System Security\n| first=Susan\n| last=Hinrichs\n| year=2005\n| work=CyberSecurity Spring 2005\n| publisher=[[University of Illinois]]\n| accessdate=2013-04-08}}\n* {{cite web\n| url=https://crypto.stanford.edu/cs155old/cs155-spring03/lecture9.pdf\n| title=Access Control and Operating System Security\n| first=John\n| last=Mitchell\n| publisher=[[Stanford University]]\n| accessdate=2013-04-08}}\n* {{cite web\n| url=https://www.cs.cornell.edu/courses/cs513/2007fa/NL.accessControl.html\n| title=Access Control\n| first=Michael\n| last=Clarkson\n| publisher=[[Cornell University]]\n| accessdate=2013-04-08}}\n* {{cite web\n| url=http://helgeklein.com/blog/2009/03/permissions-a-primer-or-dacl-sacl-owner-sid-and-ace-explained/\n| title=Permissions: A Primer, or: DACL, SACL, Owner, SID and ACE Explained\n| first=Helge\n| last=Klein\n| date=2009-03-12\n| accessdate=2013-04-08}}\n* {{cite web\n| url=http://msdn.microsoft.com/en-us/library/aa374872(VS.85).aspx\n| title=Access Control Lists\n| date=2012-10-26\n| publisher=[[MSDN Library]]\n| accessdate=2013-04-08}}\n* {{cite web\n| url=http://technet.microsoft.com/en-us/library/cc783530(WS.10).aspx\n| title=How Permissions Work\n| date=2003-03-28\n| publisher=[[Microsoft Technet]]\n| accessdate=2013-04-08}}\n{{refend}}\n\n{{DEFAULTSORT:Access Control List}}\n[[Category:Computer access control]]"}]}}}}