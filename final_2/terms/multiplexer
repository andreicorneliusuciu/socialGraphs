{"batchcomplete":"","query":{"normalized":[{"from":"multiplexer","to":"Multiplexer"}],"pages":{"38542":{"pageid":38542,"ns":0,"title":"Multiplexer","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{About|electronics switching|telecommunications|multiplexing}}\n[[File:Multiplexer2.png|thumb|300px|Schematic of a 2-to-1 Multiplexer. It can be equated to a controlled switch.]]\n[[File:Demultiplexer.png|thumb|270px|Schematic of a 1-to-2 Demultiplexer. Like a multiplexer, it can be equated to a controlled switch.]]\nIn [[ electronics]], a '''multiplexer''' (or '''mux''') is a device that selects one of several [[Analog signal|analog]] or [[Digital signal (electronics)|digital]] input signals and forwards the selected input into a single line.<ref name=\"Network+ Guide to Networks\">{{cite book | last = Dean | first = Tamara | title = Network+ Guide to Networks | publisher = Delmar | year = 2010 | location = | pages = 82\u201385 | url = https://books.google.com/books?id=UD0h_GqgbHgC&printsec=frontcover&dq=network%2B+guide+to+networks&src=bmrr#v=onepage&q&f=false}}</ref> A multiplexer of 2<sup>''n''</sup> inputs has ''n'' select lines, which are used to select which input line to send to the output.<ref>{{cite book | last = Debashis | first = De | title = Basic Electronics | publisher = Dorling Kindersley | year = 2010 | location = | pages = 557 | url = https://books.google.com/books?id=mT_j4F1bJx4C&printsec=frontcover&dq=Basic+Electronics+By+De+Debashis#v=onepage&q&f=false}}</ref>  Multiplexers are mainly used to increase the amount of data that can be sent over the [[Computer networks|network]] within a certain amount of time and [[Bandwidth (signal processing)|bandwidth]].<ref name=\"Network+ Guide to Networks\"/> A multiplexer is also called a '''data selector'''. Multiplexers can also be used to implement Boolean functions of multiple variables. \n\nAn electronic multiplexer makes it possible for several signals to share one device or resource, for example one [[A/D converter]] or one communication line, instead of having one device per input signal.\n\nConversely, a '''demultiplexer''' (or '''demux''') is a device taking a single input signal and selecting one of many data-output-lines, which is connected to the single input. A multiplexer is often used with a complementary demultiplexer on the receiving end.<ref name=\"Network+ Guide to Networks\"/>\n\nAn electronic multiplexer can be considered as a [[System analysis#Characterization of systems|multiple-input, single-output]] switch, and a demultiplexer as a [[System analysis#Characterization of systems|single-input, multiple-output]] switch.<ref>{{cite book | last = Lipt\u00e1k | first = B\u00e9la | title = Instrument engineers' handbook: Process software and digital networks | publisher = CRC Press | year = 2002 | location = | pages = 343 | url = https://books.google.com/books?id=KPjLAyA7HgoC&printsec=frontcover&dq=instrument+engineers'+handbook:+Process+software+and+digital+networks+By+B%C3%A9la+G.+Lipt%C3%A1k#v=onepage&q&f=false}}</ref> The schematic symbol for a multiplexer is an [[isosceles trapezoid]] with the longer parallel side containing the input pins and the short parallel side containing the output pin.<ref>{{cite book | last = Harris | first = David | title = Digital Design and Computer Architecture | publisher = Penrose | year = 2007 | location = | pages = 79 | url = https://books.google.com/books?id=5X7JV5-n0FIC&printsec=frontcover&dq=Digital+design+and+computer+architecture+By+David+Money+Harris,+Sarah+L.+Harris#v=onepage&q&f=false}}</ref>  The schematic on the right shows a 2-to-1 multiplexer on the left and an equivalent switch on the right.  The <math>sel</math> wire connects the desired input to the output. \n\n==Cost saving==\n[[File:Telephony multiplexer system.gif|thumb|300px|The basic function of a multiplexer: combining multiple inputs into a single data stream. On the receiving side, a demultiplexer splits the single data stream into the original multiple signals.]]\n\nOne use for multiplexers is economizing connections over a single channel, by connecting the multiplexer's single output to the demultiplexer's single input.\nThe image to the right demonstrates this benefit.\nIn this case, the cost of implementing separate channels for each data source is higher than the cost and inconvenience of providing the multiplexing/demultiplexing functions.\n\nAt the receiving end of the [[data link]] a complementary ''demultiplexer'' is usually required to break the single data stream back down into the original streams.\nIn some cases, the far end system may have  functionality greater than a simple demultiplexer; and while the demultiplexing still occurs technically, it may never be implemented discretely.\nThis would be typical when: a multiplexer serves a number of [[Internet Protocol|IP]] network users; and then feeds directly into a [[router (computing)|router]], which immediately reads the content of the entire link into its [[routing]] processor; and then does the demultiplexing in memory from where it will be converted directly into IP sections.\n\nOften, a multiplexer and demultiplexer are combined together into a single piece of equipment, which is conveniently referred to as a \"multiplexer\". Both circuit elements are needed at both ends of a transmission link because most communications systems transmit in [[Duplex (telecommunications)|both directions]].\n\nIn [[analog circuit]] design, a multiplexer is a special type of analog switch that connects one signal selected from several inputs to a single output.\n\n==Digital multiplexers==\nIn [[digital circuit]] design, the selector wires are of digital value.  In the case of a 2-to-1 multiplexer, a logic value of 0 would connect <math>\\scriptstyle I_0</math> to the output while a logic value of 1 would connect <math>\\scriptstyle I_1</math> to the output.\nIn larger multiplexers, the number of selector pins is equal to <math>\\scriptstyle \\left \\lceil \\log_2(n) \\right \\rceil</math> where <math>\\scriptstyle n</math> is the number of inputs.\n\nFor example, 9 to 16 inputs would require no fewer than 4 selector pins and 17 to 32 inputs would require no fewer than 5 selector pins. The binary value expressed on these selector pins determines the selected input pin.\n\nA 2-to-1 multiplexer has a [[boolean equation]] where <math>\\scriptstyle A</math> and <math>\\scriptstyle B</math> are the two inputs, <math>\\scriptstyle S</math> is the selector input, and <math>\\scriptstyle Z</math> is the output:\n: <math>Z = ( A \\cdot \\overline{S}) + (B \\cdot S)</math>\n\n[[File:Multiplexer 2-to-1.svg|thumb|175px|A 2-to-1 mux]]\nWhich can be expressed as a [[truth table]]:\n\n{| class=\"wikitable\"\n|-\n! <math>\\scriptstyle S</math> !! <math>\\scriptstyle A</math> !! <math>\\scriptstyle B</math> !! <math>\\scriptstyle Z</math>\n|-\n| 0 || 0 || 0 || 0\n|-\n| 0 || 0 || 1 || 0\n|-\n| 0 || 1 || 0 || 1\n|-\n| 0 || 1 || 1 || 1\n|-\n| 1 || 0 || 0 || 0\n|-\n| 1 || 0 || 1 || 1\n|-\n| 1 || 1 || 0 || 0\n|-\n| 1 || 1 || 1 || 1\n|}\n\nOr, in simpler notation:\n\n{| class=\"wikitable\"\n|-\n! <math>\\scriptstyle S</math> !! <math>\\scriptstyle Z</math>\n|-\n| 0 || A\n|-\n| 1 || B\n|}\n\nThese tables show that when <math>\\scriptstyle S=0</math> then <math>\\scriptstyle Z=A</math> but when <math>\\scriptstyle S=1</math> then <math>\\scriptstyle Z=B</math>. A straightforward realization of this 2-to-1 multiplexer would need 2 AND gates, an OR gate, and a NOT gate. While this is mathematically correct, it should be noted that a direct physical implementation would be prone to [[race condition]]s that require additional gates to suppress.<ref>Crowe, John and Barrie Hayes-Gill (1998) ''Introduction to Digital Electronics'' pp. 111-113</ref>\n\nLarger multiplexers are also common and, as stated above, require <math>\\scriptstyle \\left \\lceil \\log_2(n) \\right \\rceil</math> selector pins for <math>n</math> inputs.  Other common sizes are 4-to-1, 8-to-1, and 16-to-1.  Since digital logic uses binary values, powers of 2 are used (4, 8, 16) to maximally control a number of inputs for the given number of selector inputs.\n\n<gallery>\nFile:Multiplexer 4-to-1.svg|4-to-1 mux\nFile:Multiplexer 8-to-1.svg|8-to-1 mux\nFile:Multiplexer 16-to-1.svg|16-to-1 mux\n</gallery>\n\nThe boolean equation for a 4-to-1 multiplexer is:\n:<math>Z = (A \\cdot \\overline{S_0} \\cdot \\overline{S_1}) + (B \\cdot S_0 \\cdot \\overline{S_1}) + (C \\cdot \\overline{S_0} \\cdot S_1) + (D \\cdot S_0 \\cdot S_1)</math>\n\nThe following 4-to-1 multiplexer is constructed from [[3-state buffers]] and AND gates (the AND gates are acting as the decoder):\n\n[[File:Mux from 3 state buffers.png|200px]]\n\nThe subscripts on the <math>\\scriptstyle I_n</math> inputs indicate the decimal value of the binary control inputs at which that input is let through.\n\n===Chaining multiplexers===\nLarger Multiplexers can be constructed by using smaller multiplexers by chaining them together.  For example, an 8-to-1 multiplexer can be made with two 4-to-1 and one 2-to-1 multiplexers.  The two 4-to-1 multiplexer outputs are fed into the 2-to-1 with the selector pins on the 4-to-1's put in parallel giving a total number of selector inputs to 3, which is equivalent to an 8-to-1.\n\n===List of ICs which provide multiplexing===\nThe [[7400 series]] has several ICs that contain multiplexer(s):\n{| class=\"wikitable\"\n|-\n! S.No. !! IC No. !! Function !! Output State\n|-\n| 1\n| 74157\n| Quad 2:1 mux.\n| Output same as input given\n|-\n| 2\n| 74158\n| Quad 2:1 mux.\n| Output is inverted input\n|-\n| 0\n| 74153\n| Dual 4:1 mux.\n| Output same as input\n|-\n| 5\n| 74352\n| Dual 4:1 mux.\n| Output is inverted input\n|-\n| 9\n| 74151A\n| 8:1 mux.\n| Both outputs available (i.e., complementary outputs)\n|-\n| 6\n| 74151\n| 8:1 mux.\n| Output is inverted input\n|-\n| 7\n| 74150\n| 16:1 mux.\n| Output is inverted input\n|}\n\n==Digital demultiplexers==\nDemultiplexers take one data input and a number of selection inputs, and they have several outputs.\nThey forward the data input to one of the outputs depending on the values of the selection inputs.\nDemultiplexers are sometimes convenient for designing general purpose logic, because if the demultiplexer's input is always true, the demultiplexer acts as a [[Binary decoder|decoder]].\nThis means that any function of the selection bits can be constructed by logically OR-ing the correct set of outputs.\n\nIf X is the input and S is the selector, and A and B are the outputs:\n\n<math>A = ( X \\cdot \\overline{S})</math>\n\n<math>B = ( X \\cdot S)</math>\n\n[[File:Demultiplexer Example01.svg|thumb|450px|left|Example: A Single Bit 1-to-4 Line Demultiplexer]]\n{{clear}}\n\n===List of ICs which provide demultiplexing===\n[[File:ROCKY-518HV - Fairchild 74F138-2387.jpg|thumb|[[Fairchild Semiconductor|Fairchild]] 74F138]]\nThe [[7400 series]] has several ICs that contain demultiplexer(s):\n{| class=\"wikitable\"\n|-\n! S.No. !! IC No. (7400) !! IC No. (4000) !! Function !! Output State\n|-\n| 1\n| 74139\n|\n| Dual 1:4 demux.\n| Output is inverted input\n|-\n| 3\n| 74156\n|\n| Dual 1:4 demux.\n| Output is [[open collector]]\n|-\n| 4\n| 74138\n|\n| 1:8 demux.\n| Output is inverted input\n|-\n| 5\n| 74238\n|\n| 1:8 demux.\n|\n|-\n| 6\n| 74154\n|\n| 1:16 demux.\n| Output is inverted input\n|- 1:8 demux.\n| 7\n| 74159\n| CD4514/15\n| 1:16 demux.\n| Output is open collector and same as input\n|}\n\n==Multiplexers as PLDs==\nMultiplexers can also be used as [[programmable logic device]]s, specifically to implement Boolean functions. Any Boolean function of ''n'' variables and one result can be implemented with a multiplexer with ''n'' selector inputs. The variables are connected to the selector inputs, and the function result, 0 or 1, for each possible combination of selector inputs is connected to the corresponding data input. This is especially useful in situations when cost is a factor, for modularity, and r ease of modification. If one of the variables (for example, ''D'') is also available inverted, a multiplexer with ''n''-1 selector inputs is sufficient; the data inputs are connected to 0, 1, ''D'', or ~''D'', according to the desired output for each combination of the selector inputs.<ref>{{cite book\n|title=The TTL Cookbook\n|author=Donald E. Lancaster\n|publisher=Howard W. Sams & Co.\n|date=1975 \n|pages=140-143}}</ref>\n\n==See also==\n* [[Priority encoder]]\n* [[Inverse multiplexer]]\n* [[Statistical multiplexer]]\n* [[Digital subscriber line access multiplexer]] (DSLAM)\n* [[Rule 184]], a [[cellular automaton]] in which each cell acts as a multiplexer for the values from the two adjacent cells\n* [[Multiplexing]]\n** [[CDMA|Code-division multiplexing]]\n** [[Frequency-division multiplexing]]\n** [[Time-division multiplexing]]\n**[[Wavelength-division multiplexing]]\n**[[Statistical multiplexing]]\n** [[Charlieplexing]]\n\n==References==\n{{Reflist}}\n\n==Further reading==\n*{{cite book\n |author1=M. Morris Mano\n |author2=Charles R. Kime\n |title=Logic and Computer Design Fundamentals\n |edition=4\n |isbn=0-13-198926-X\n |publisher=[[Prentice Hall]]\n |year=2008\n}}\n\n==External links==\n*{{Wiktionary-inline|multiplexer}}\n*{{Commons category-inline|Multiplexers}}\n\n{{CPU technologies}}\n\n{{Authority control}}\n[[Category:Multiplexing]]\n[[Category:Digital circuits]]"}]}}}}