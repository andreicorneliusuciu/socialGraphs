{"batchcomplete":"","query":{"normalized":[{"from":"port_forwarding","to":"Port forwarding"}],"pages":{"757166":{"pageid":757166,"ns":0,"title":"Port forwarding","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"In [[computer networking]], '''port forwarding''' or '''port mapping''' is an application of [[network address translation]] (NAT) that redirects a communication request from one [[IP address|address]] and [[port number]] combination to another while the [[Network packet|packets]] are traversing a network gateway, such as a [[router (computing)|router]] or [[firewall (computing)|firewall]]. This technique is most commonly used to make services on a host residing on a protected or [[IP masquerading|masqueraded]] (internal) network available to hosts on the opposite side of the gateway (external network), by remapping the destination IP address and port number of the communication to an internal host.<ref>{{cite news | title = Definition of: port forwarding | url = http://www.pcmag.com/encyclopedia_term/0,1237,t=port+forwarding&i=49509,00.asp | publisher = [[PC Magazine]]|accessdate= 2008-10-11}}</ref><ref>{{cite web|title=Using ssh Port Forwarding to Print at Remote Locations|author=Rory Krause|url=http://www.linuxjournal.com/article/5462|publisher=[[Linux Journal]]|accessdate=2008-10-11}}</ref>\n\n==Purpose==\nPort forwarding allows remote computers (for example, computers on the [[Internet]]) to connect to a specific computer or service within a private local-area network (LAN).<ref>{{cite web|title=How to set up a home web server|author=Jeff \"Crash\" Goldin|url=http://www.redhat.com/magazine/022aug06/features/webserver/|publisher=[[Red Hat]]|accessdate=2008-10-11}}</ref>\n\nIn a typical residential network, nodes obtain Internet access through a [[DSL modem|DSL]] or [[cable modem]] connected to a [[router (computing)|router]] or [[network address translator]] (NAT/NAPT). Hosts on the private network are connected to an Ethernet switch or communicate via a [[wireless LAN]]. The NAT device's external interface is configured with a public IP address. The computers behind the router, on the other hand, are invisible to hosts on the Internet as they each communicate only with a private IP address.\n\nWhen configuring port forwarding, the network administrator sets aside one port number on the gateway for the exclusive use of communicating with a service in the private network, located on a specific host. External hosts must know this port number and the address of the gateway to communicate with the network-internal service. Often, the port numbers of well-known Internet services, such as port number 80 for web services (HTTP), are used in port forwarding, so that common Internet services may be implemented on hosts within private networks.\n\nTypical applications include the following:\n* Running a public [[HTTP]] server within a private LAN\n* Permitting [[Secure Shell]] access to a host on the private LAN from the Internet\n* Permitting [[FTP]] access to a host on a private LAN from the Internet\n* Running a publicly available game server within a private LAN\n\nAdministrators configure port forwarding in the gateway's operating system. In [[Linux]] kernels, this is achieved by packet filter rules in the [[iptables]] or [[netfilter]] kernel components. [[BSD]] and [[Mac OS X]] operating systems prior to [[OS_X_Yosemite|Yosemite]] (OS 10.10.X) implement it in the [[Ipfirewall]] (ipfw) module while and [[Mac OS X]] operating systems beginning with [[OS_X_Yosemite|Yosemite]] implement it in the [[PF_(firewall)|Packet Filter]] (pf) module.\n\nWhen used on gateway devices, a port forward may be implemented with a single rule to translate the destination address and port. (On [[Linux]] kernels, this is DNAT rule).  The source address and port are, in this case, left unchanged. When used on machines that are not the default gateway of the network, the source address must be changed to be the address of the translating machine, or packets will bypass the translator and the connection will fail.\n\nWhen a port forward is implemented by a proxy process (such as on application layer firewalls, SOCKS based firewalls, or via TCP circuit proxies), then no packets are actually translated, only data is proxied.  This usually results in the source address (and port number) being changed to that of the proxy machine.\n\nUsually only one of the private hosts can use a specific forwarded port at one time, but configuration is sometimes possible to differentiate access by the originating host's source address.\n\nUnix-like operating systems sometimes use port forwarding where port numbers smaller than 1024 can only be created by software running as the root user. Running with superuser privileges (in order to bind the port) may be a security risk to the host, therefore port forwarding is used to redirect a low-numbered port to another high-numbered port, so that application software may execute as a common operating system user with reduced privileges.\n\nThe [[Universal Plug and Play]] protocol (UPnP) provides a feature to automatically install instances of port forwarding in residential Internet gateways. UPnP defines the [[Internet Gateway Device Protocol]] (IGD) which is a network service by which an Internet gateway advertises its presence on a private network via the [[Simple Service Discovery Protocol]] (SSDP). An application that provides an Internet-based service may discover such gateways and use the UPnP IGD protocol to reserve a port number on the gateway and cause the gateway to forward packets to its listening [[Internet socket|socket]].\n\n==Types of port forwarding==\nPort forwarding can be divided into the following types:<ref>[https://help.ubuntu.com/community/SSH/OpenSSH/PortForwarding OpenSSH Port forwarding]</ref>\n\n*Local port forwarding\n*Remote port forwarding\n*Dynamic port forwarding\n\n===Local port forwarding===\nLocal port forwarding is the most common type of port forwarding.  It is used to forward data securely from another client application running on the same computer as the Secure Shell Client.  Local Port Forwarding lets a user connect from the local computer to another server.  By using local port forwarding, firewalls that block certain web pages are able to be bypassed.<ref>{{cite web|url=http://support.attachmate.com/techdocs/2433.html |title=Local and Remote Port Forwarding and the Reflection for Secure IT Client 7.1 or Higher - Tech Note 2433 |publisher=Support.attachmate.com |date=2012-11-09 |accessdate=2014-01-30}}</ref>\n\nTwo important items in local port forwarding are the destination server, and two port numbers.  Connections from the SSH client are forwarded via the SSH server, then to a destination server.  As stated above, local port forwarding forwards data from another client application running on the same computer as the Secure Shell Client.  The Secure Shell client is configured to redirect data from a specified local port through the secure tunnel to a specified destination host and port.  This port is on the same computer as the Secure Shell client.  Any other client can be configured that is running on the same computer to connect to the forwarded port (rather than directly to the destination host and port).  After this connection is established, the Secure Shell client listens on the specified port and redirects all data sent to that port through the secure tunnel to the Secure Shell server.  The server decrypts the data, and then directs it to the destination host and port.<ref name=\"ubuntu1\">{{cite web|url=https://help.ubuntu.com/community/SSH/OpenSSH/PortForwarding |title=SSH/OpenSSH/PortForwarding - Community Ubuntu Documentation |publisher=Help.ubuntu.com |date=2013-12-13 |accessdate=2014-01-30}}</ref>\n\nOn the command line, \u201c-L\u201d specifies local port forwarding.  The destination server, and two port numbers need to be included.  Port numbers less than 1024 or greater than 49150 are reserved for the system.  Some programs will only work with specific source ports, but for the most part any source port number can be used.\n\nSome uses of local port forwarding:\n\n* Using local port forwarding to Receive Mail <ref>{{cite web|url=http://docs.oracle.com/cd/E19683-01/806-4078/secsshuser-ex-42/index.html |title=Example \u2014 Using Local Port Forwarding to Receive Mail (System Administration Guide: Security Services) |publisher=Docs.oracle.com |date= |accessdate=2014-01-30}}</ref>\n* Connect from a laptop to a website using an SSH tunnel.\n\n=== {{Anchor|RPF}}Remote port forwarding ===\nThis form of port forwarding enables applications on the server side of a Secure Shell (SSH) connection to access services residing on the SSH's client side.<ref>{{cite web|author=http://www.vandyke.com |url=http://www.vandyke.com/solutions/port_forwarding/appendix_a.html |title=Tunneling with Secure Shell - Appendix A: Remote Port Forwarding |publisher=Vandyke.com |date=2005-06-12 |accessdate=2014-01-30}}</ref> In addition to SSH, there are proprietary tunnelling schemes that utilize remote port forwarding for the same general purpose.<ref>{{cite web|title=Local versus Remote Port Forwarding|url=http://www.networkactiv.com/Pages/Local-versus-Remote-Port-Forwarding.html|website=NetworkActiv|accessdate=8 June 2014}}</ref> In other words, remote port forwarding lets users connect from the server side of a tunnel, SSH or another, to a remote network service located at the tunnel's client side.\n\nTo use remote port forwarding, the address of the destination server (on the tunnel's client side) and two port numbers must be known. The port numbers chosen depend on which application is to be used.\n\nRemote port forwarding allows other computers to access applications hosted on remote servers. Two examples:\n\n* An employee of a company hosts an FTP server at his own home and wants to give access to the FTP service to employees using computers in the workplace. In order to do this, an employee can set up remote port forwarding through SSH on the company's internal computers by including their FTP server\u2019s address and using the correct port numbers for FTP (standard FTP port is TCP/21) <ref>{{cite web|url=http://compnetworking.about.com/od/tcpip/p/port-numbers-21-ftp.htm |title=FTP Port Number 21 - Port 21 TCP |publisher=Compnetworking.about.com |date=2013-12-19 |accessdate=2014-01-30}}</ref>\n* Opening remote desktop sessions is a common use of remote port forwarding. Through SSH, this can be accomplished by opening the virtual network computing port (5900) and including the destination computer\u2019s address.<ref name=\"ubuntu1\" />\n\n===Dynamic port forwarding===\nDynamic port forwarding (DPF) is an on-demand method of traversing a firewall or NAT through the use of firewall pinholes.  The goal is to enable clients to connect securely to a trusted server that acts as an intermediary for the purpose of sending/receiving data to one or many destination servers.<ref>{{cite web|url=http://pages.cs.wisc.edu/~sschang/firewall/dpf/mechanism.htm |title=DPF Mechanism |publisher=Pages.cs.wisc.edu |date= |accessdate=2014-01-30}}</ref>\n\nDPF can be implemented by setting up a local application, such as SSH, as a SOCKS proxy server, which can be used to process data transmissions through the network or over the Internet.  Programs, such as web browsers, must be configured individually to direct traffic through the proxy, which acts as a secure tunnel to another server. Once the proxy is no longer needed, the programs must be reconfigured to their original settings.  Because of the manual requirements of DPF, it is not often used.<ref name=\"ubuntu1\"/>\n\nOnce the connection is established, DPF can be used to provide additional security for a user connected to an untrusted network.  Since data must pass through the secure tunnel to another server before being forwarded to its original destination, the user is protected from packet sniffing that may occur on the LAN.<ref>{{cite web|url=http://www.irongeek.com/i.php?page=videos/sshdynamicportforwarding |title=SSH Dynamic Port Forwarding (Hacking Illustrated Series InfoSec Tutorial Videos) |publisher=Irongeek.com |date= |accessdate=2014-01-30}}</ref>\n\nDPF is a powerful tool with many uses; for example, a user connected to the Internet through a coffee shop, hotel, or otherwise minimally secure network may wish to use DPF as a way of protecting data. DPF can also be used to bypass firewalls that restrict access to outside websites, such as in corporate networks.\n\n== See also ==\n{{Portal|Computer networking}}\n\n* [[Firewall pinhole]]\n* [[NAT traversal]]\n* [[Packet forwarding]]\n* [[Port address translation]] (PAT)\n* [[Port triggering]]\n* [[Secure Shell]]\n\n==References==\n{{Reflist|30em}}\n\n==External links==\n* {{cite web|title=Warp Speed Web Access: Sharing the Bandwidth|url=http://pcworld.about.com/magazine/1901p102id35287.htm|author=Alan Stafford|publisher=[[PC World (magazine)|PC World]]|accessdate=2008-10-11}}\n* [http://www.codeproject.com/KB/IP/PortForward.aspx Using UPnP for Programmatic Port Forwardings and NAT Traversal]{{snd}} Free software which uses UPnP and the Internet Gateway Device Protocol (IGD) to automate port forwarding\n* [http://blog.brunogarcia.com/2012/10/simple-tcp-forwarder-in-c.html TCP forwarding source code in C#]{{snd}} Source code in C# explaining/PoC TCP forwarding.\n* [https://github.com/lontivero/Open.Nat Open.NAT]{{snd}} Lightweight and easy-to-use .NET class library to allow port forwarding in NAT devices that support UPNP and PMP.\n\n{{DEFAULTSORT:Port Forwarding}}\n[[Category:Computer network security]]\n[[Category:Routing]]"}]}}}}