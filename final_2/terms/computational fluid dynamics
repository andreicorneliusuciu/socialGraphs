{"batchcomplete":"","query":{"normalized":[{"from":"computational_fluid_dynamics","to":"Computational fluid dynamics"}],"pages":{"305924":{"pageid":305924,"ns":0,"title":"Computational fluid dynamics","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{multiple issues|\n{{Refimprove |date=June 2008}}\n{{more footnotes|date=September 2014}}\n}}\n{{Merge from|Fluid simulation|discuss=Talk:Computational fluid dynamics#Merge with Fluid simulation|date=September 2014}}\n\n{{Computational physics}}\n\n'''Computational fluid dynamics''' ('''CFD''') is a branch of [[fluid mechanics]] that uses [[numerical analysis]] and [[algorithm]]s to solve and analyze problems that involve [[fluid dynamics|fluid flows]]. Computers are used to perform the calculations required to simulate the interaction of liquids and gases with surfaces defined by [[Boundary value problem#Boundary value conditions|boundary conditions]]. With high-speed [[supercomputer]]s, better solutions can be achieved. Ongoing research yields software that improves the accuracy and speed of complex simulation scenarios such as [[transonic]] or [[turbulence|turbulent]] flows. Initial experimental validation of such software is performed using a [[wind tunnel]] with the final validation coming in full-scale testing, e.g. [[flight test]]s.\n\n==Background and history==\n[[Image:CFD Shuttle.jpg|thumb|right|A computer simulation of high velocity air flow around the [[Space Shuttle]] during re-entry.]]\n[[Image:X-43A (Hyper - X) Mach 7 computational fluid dynamic (CFD).jpg|thumb|right|A simulation of the [[Hyper-X]] scramjet vehicle in operation at [[Mach number|Mach]]-7]] The fundamental basis of almost all CFD problems are the [[Navier\u2013Stokes equations]], which define many single-phase (gas or liquid, but not both) fluid flows.  These equations can be simplified by removing terms describing [[viscous]] actions to yield the [[Euler equations (fluid dynamics)|Euler equations]].  Further simplification, by removing terms describing [[vorticity]] yields the [[full potential equation]]s. Finally, for small [[Perturbation theory|perturbation]]s in subsonic and [[supersonic]] flows (not [[transonic]] or [[hypersonic]]) these equations can be [[Linearization|linearized]] to yield the linearized potential equations.\n\nHistorically, methods were first developed to solve the linearized potential equations. Two-dimensional (2D) methods, using [[conformal transformation]]s of the flow about a [[Cylinder (geometry)|cylinder]] to the flow about an [[airfoil]] were developed in the 1930s.<ref>{{cite book|last=Milne-Thomson|first=L.M.|authorlink=L. M. Milne-Thomson|title=Theoretical Aerodynamics|year=1973|publisher=Dover Publications|isbn=0-486-61980-X}}</ref>\n\nOne of the earliest type of calculations resembling modern CFD are those by [[Lewis Fry Richardson]], in the sense that these calculations used finite differences and divided the physical space in cells. Although they failed dramatically, these calculations, together with Richardson's book \"Weather prediction by numerical process\",<ref>{{cite book|title=Weather prediction by numerical process|year=1965|publisher=Dover Publications|author=Richardson, L. F.|author2=Chapman, S.}}</ref> set the basis for modern CFD and numerical meteorology. In fact, early CFD calculations during the 1940s using [[ENIAC]] used methods close to those in Richardson's 1922 book.<ref>{{cite journal|last=Hunt|title=Lewis Fry Richardson and his contributions to mathematics, meteorology, and models of conflict|journal=Annual Review of Fluid Mechanics|year=1998|volume=30|doi=10.1146/annurev.fluid.30.1.0|bibcode = 1998AnRFM..30D..13H }}</ref>\n\nThe computer power available paced development of [[Three-dimensional space|three-dimensional]] methods.  Probably the first work using computers to model fluid flow, as governed by the Navier-Stokes equations, was performed at [[Los Alamos National Lab]], in the T3 group.<ref name=legacy_T3>{{cite web|title=The Legacy of Group T-3|url=https://www.lanl.gov/orgs/t/t3/history.shtml#early|accessdate=March 13, 2013}}</ref><ref name=harlow2004fluid>{{cite journal|last=Harlow|first=F. H.|title=Fluid dynamics in Group T-3 Los Alamos National Laboratory:(LA-UR-03-3852)|journal=[[Journal of Computational Physics]]|year=2004|volume=195|issue=2|pages=414\u2013433|publisher=Elsevier|url=http://www.sciencedirect.com/science/article/pii/S0021999103005692|bibcode = 2004JCoPh.195..414H |doi = 10.1016/j.jcp.2003.09.031 }}</ref> This group was led by [[Francis H. Harlow]], who is widely considered as one of the pioneers of CFD. From 1957 to late 1960s, this group developed a variety of numerical methods to simulate transient two-dimensional fluid flows, such as \n[[Particle-in-cell]] method (Harlow, 1957),<ref>{{Cite journal|author=[[Francis H. Harlow|F.H. Harlow]]|title=A Machine Calculation Method for Hydrodynamic Problems|publisher=Los Alamos Scientific Laboratory report LAMS-1956|year=1955}}</ref> \n[[Fluid-in-cell]] method (Gentry, Martin and Daly, 1966),<ref>{{Cite journal|author1=Gentry, R. A. |author2=Martin, R. E. |author3=Daly, J. B. |title=An Eulerian differencing method for unsteady compressible flow problems|journal=[[Journal of Computational Physics]]|volume=1|issue=1|pages=87\u2013118|year=1966|url=http://www.sciencedirect.com/science/article/pii/0021999166900143|bibcode = 1966JCoPh...1...87G |doi = 10.1016/0021-9991(66)90014-3 }}</ref>\n[[Vorticity stream function]] method (Jake Fromm, 1963),<ref name=Fromm1963>{{cite journal|last=Fromm|first=J. E.|author2=F. H. Harlow|title=Numerical solution of the problem of vortex street development|journal=[[Physics of Fluids]]|year=1963|volume=6|pages=975|url=http://pof.aip.org/resource/1/pfldas/v6/i7/p975_s1|bibcode = 1963PhFl....6..975F |doi = 10.1063/1.1706854 }}</ref> and\n[[Marker-and-cell method]] (Harlow and Welch, 1965).<ref name=harlow_welch>{{cite journal|last=Harlow|first=F. H.|author2=J. E. Welch|title=Numerical calculation of time-dependent viscous incompressible flow of fluid with a free surface|journal=[[Physics of Fluids]]|year=1965|volume=8|pages=2182\u20132189|url=http://www.cs.rpi.edu/~cutler/classes/advancedgraphics/S09/papers/harlow_welch.pdf|bibcode = 1965PhFl....8.2182H |doi = 10.1063/1.1761178 }}</ref> Fromm's vorticity-stream-function method for 2D, transient, incompressible flow was the first treatment of strongly contorting incompressible flows in the world.\n\nThe first paper with three-dimensional model was published by John Hess and [[A.M.O. Smith]] of [[Douglas Aircraft]] in 1967.<ref>{{cite journal|last=Hess|first=J.L.|author2=A.M.O. Smith|year=1967|title=Calculation of Potential Flow About Arbitrary Bodies|journal=Progress in Aerospace Sciences|volume=8|pages=1\u2013138|doi=10.1016/0376-0421(67)90003-6|url=http://www.sciencedirect.com/science?_ob=ArticleURL&_udi=B6V3V-4811PYT-33&_user=10&_coverDate=12%2F31%2F1967&_alid=1339703692&_rdoc=1&_fmt=high&_orig=search&_cdi=5740&_docanchor=&view=c&_ct=176&_acct=C000050221&_version=1&_urlVersion=0&_userid=10&md5=2939d59a5c94a28fcc51ab6d6cec0305|bibcode = 1967PrAeS...8....1H }}</ref> This method discretized the surface of the geometry with panels, giving rise to this class of programs being called Panel Methods.  Their method itself was simplified, in that it did not include lifting flows and hence was mainly applied to ship hulls and aircraft fuselages.  The first lifting Panel Code (A230) was described in a paper written by Paul Rubbert and Gary Saaris of Boeing Aircraft in 1968.<ref>Rubbert, Paul and Saaris, Gary, \"Review and Evaluation of a Three-Dimensional Lifting Potential Flow Analysis Method for Arbitrary Configurations,\" AIAA paper 72-188, presented at the AIAA 10th Aerospace Sciences Meeting, San Diego California, January 1972.</ref>  In time, more advanced three-dimensional Panel Codes were developed at [[Boeing]] (PANAIR, A502),<ref>Carmichael, R. and Erickson, L.L., \"PAN AIR - A Higher Order Panel Method for Predicting Subsonic or Supersonic Linear Potential Flows About Arbitrary Configurations,\" AIAA paper 81-1255, presented at the AIAA 14th Fluid and Plasma Dynamics Conference, Palo Alto California, June 1981.</ref> [[Lockheed Corporation|Lockheed]] (Quadpan),<ref>Youngren, H.H., Bouchard, E.E., Coopersmith, R.M. and Miranda, L.R., \"Comparison of Panel Method Formulations and its Influence on the Development of QUADPAN, an Advanced Low Order Method,\" AIAA paper 83-1827, presented at the AIAA Applied Aerodynamics Conference, Danvers, Massachusetts, July 1983.</ref> [[Douglas Aircraft Company|Douglas]] (HESS),<ref>Hess, J.L. and Friedman, D.M., \"Analysis of Complex Inlet Configurations Using a Higher-Order Panel Method,\" AIAA paper 83-1828, presented at the AIAA Applied Aerodynamics Conference, Danvers, Massachusetts, July 1983.</ref> [[McDonnell Aircraft]] (MACAERO),<ref>Bristow, D.R., \"Development of Panel Methods for Subsonic Analysis and Design,\" NASA CR-3234, 1980.</ref> [[NASA]] (PMARC)<ref>Ashby, Dale L.; Dudley, Michael R.; Iguchi, Steve K.; Browne, Lindsey and Katz, Joseph, \u201cPotential Flow Theory and Operation Guide for the Panel Code PMARC\u201d, NASA NASA-TM-102851 1991.</ref> and Analytical Methods (WBAERO,<ref>Woodward, F.A., Dvorak, F.A. and Geller, E.W., \"A Computer Program for Three-Dimensional Lifting Bodies in Subsonic Inviscid Flow,\" USAAMRDL Technical Report, TR 74-18, Ft. Eustis, Virginia, April 1974.</ref> USAERO<ref>Katz, J. and Maskew, B., \"Unsteady Low-Speed Aerodynamic Model for Complete Aircraft Configurations,\" AIAA paper 86-2180, presented at the AIAA Atmospheric Flight Mechanics Conference, Williamsburg Virginia, August 1986.</ref> and VSAERO<ref>Maskew, Brian, \"Prediction of Subsonic Aerodynamic Characteristics: A Case for Low-Order Panel Methods,\" AIAA paper 81-0252, presented at the AIAA 19th Aerospace Sciences Meeting, St. Louis, Missouri, January 1981.</ref><ref>Maskew, Brian, \u201cProgram VSAERO Theory Document: A Computer Program for Calculating Nonlinear Aerodynamic Characteristics of Arbitrary Configurations\u201d, NASA CR-4023, 1987.</ref>).  Some (PANAIR, HESS and MACAERO) were higher order codes, using higher order distributions of surface singularities, while others (Quadpan, PMARC, USAERO and VSAERO) used single singularities on each surface panel.  The advantage of the lower order codes was that they ran much faster on the computers of the time.  Today, VSAERO has grown to be a multi-order code and is the most widely used program of this class. It has been used in the development of many [[submarine]]s, surface [[ship]]s, [[automobile]]s, [[helicopter]]s, [[aircraft]], and more recently [[wind turbines]].  Its sister code, USAERO is an unsteady panel method that has also been used for modeling such things as high speed trains and racing [[yacht]]s.  The NASA PMARC code from an early version of VSAERO and a derivative of PMARC, named CMARC,<ref>Pinella, David and Garrison, Peter, \u201cDigital Wind Tunnel CMARC; Three-Dimensional Low-Order Panel Codes,\u201d Aerologic, 2009.</ref> is also commercially available.\n\nIn the two-dimensional realm, a number of Panel Codes have been developed for airfoil analysis and design.  The codes typically have a [[boundary layer]] analysis included, so that viscous effects can be modeled.  Professor [[Richard Eppler]] of the [[University of Stuttgart]] developed the [[PROFILE]] code, partly with NASA funding, which became available in the early 1980s.<ref>Eppler, R.; Somers, D. M., \"A Computer Program for the Design and Analysis of Low-Speed Airfoils,\" NASA TM-80210, 1980.</ref>  This was soon followed by [[MIT]] Professor Mark Drela's [[XFOIL]] code.<ref>Drela, Mark, \"XFOIL: An Analysis and Design System for Low Reynolds Number Airfoils,\" in Springer-Verlag Lecture Notes in Engineering, No. 54, 1989.</ref> Both PROFILE and XFOIL incorporate two-dimensional panel codes, with coupled boundary layer codes for airfoil analysis work.  PROFILE uses a [[conformal transformation]] method for inverse airfoil design, while XFOIL has both a conformal transformation and an inverse panel method for airfoil design.\n\nAn intermediate step between Panel Codes and Full Potential codes were codes that used the Transonic Small Disturbance equations.  In particular, the three-dimensional WIBCO code,<ref>Boppe, C.W., \"Calculation of Transonic Wing Flows by Grid Embedding,\" AIAA paper 77-207, presented at the AIAA 15th Aerospace Sciences Meeting, Los Angeles California, January 1977.</ref> developed by Charlie Boppe of [[Grumman Aircraft]] in the early 1980s has seen heavy use.\n\nDevelopers turned to Full Potential codes, as panel methods could not calculate the non-linear flow present at [[transonic]] speeds.  The first description of a means of using the Full Potential equations was published by Earll Murman and [[Julian Cole]] of Boeing in 1970.<ref>Murman, Earll and Cole, Julian, \"Calculation of Plane Steady Transonic Flow,\" AIAA paper 70-188, presented at the AIAA 8th Aerospace Sciences Meeting, New York New York, January 1970.</ref> Frances Bauer, [[Paul Garabedian]] and [[David Korn (computer scientist)|David Korn]] of the Courant Institute at [[New York University]] (NYU) wrote a series of two-dimensional Full Potential airfoil codes that were widely used, the most important being named Program H.<ref>Bauer, F., Garabedian, P., and Korn, D. G., \"A Theory of Supercritical Wing Sections, with Computer Programs and Examples,\" Lecture Notes in Economics and Mathematical Systems 66, Springer-Verlag, May 1972. ISBN  978-3540058076</ref>  A further growth of Program H was developed by Bob Melnik and his group at [[Grumman Aerospace]] as Grumfoil.<ref>Mead, H. R.; Melnik, R. E., \"GRUMFOIL: A computer code for the viscous transonic flow over airfoils,\" NASA CR-3806, 1985.</ref>  [[Antony Jameson]], originally at Grumman Aircraft and the Courant Institute of NYU, worked with David Caughey to develop the important three-dimensional Full Potential code FLO22<ref>Jameson A. and Caughey D., \"A Finite Volume Method for Transonic Potential Flow Calculations,\" AIAA paper 77-635, presented at the Third AIAA Computational Fluid Dynamics Conference, Alburquerque New Mexico, June 1977.</ref> in 1975.  Many Full Potential codes emerged after this, culminating in Boeing's Tranair (A633) code,<ref>Samant, S.S., Bussoletti J.E., Johnson F.T., Burkhart, R.H., Everson, B.L., Melvin, R.G., Young, D.P., Erickson, L.L., Madson M.D. and Woo, A.C., \"TRANAIR: A Computer Code for Transonic Analyses of Arbitrary Configurations,\" AIAA paper 87-0034, presented at the AIAA 25th Aerospace Sciences Meeting, Reno Nevada, January 1987.</ref> which still sees heavy use.\n\nThe next step was the Euler equations, which promised to provide more accurate solutions of transonic flows.  The methodology used by Jameson in his three-dimensional FLO57 code<ref>Jameson, A., Schmidt, W. and Turkel, E., \"Numerical Solution of the Euler Equations by Finite Volume Methods Using Runge-Kutta Time-Stepping Schemes,\" AIAA paper 81-1259, presented at the AIAA 14th Fluid and Plasma Dynamics\nConference, Palo Alto California, 1981.</ref> (1981) was used by others to produce such programs as Lockheed's TEAM program<ref>Raj, P. and Brennan, J.E., \"Improvements to an Euler Aerodynamic Method for Transonic Flow Simulation,\" AIAA paper 87-0040, presented at the 25th Aerospace Sciences Meeting, Reno Nevada, January 1987.</ref> and IAI/Analytical Methods' MGAERO program.<ref>Tidd, D.M., Strash, D.J., Epstein, B., Luntz, A., Nachshon A. and Rubin T., \"Application of an Efficient 3-D Multigrid Euler Method (MGAERO) to Complete Aircraft Configurations,\" AIAA paper 91-3236, presented at the AIAA 9th Applied Aerodynamics Conference, Baltimore Maryland, September 1991.</ref>  MGAERO is unique in being a structured [[cartesian coordinate system|cartesian]] mesh code, while most other such codes use structured body-fitted grids (with the exception of NASA's highly successful CART3D code,<ref>Melton, J.E., Berger, M.J., Aftosmis, M.J. and Wong, M.D., \"3D Application of a Cartesian Grid Euler Method,\" AIAA paper 95-0853, presented at the 33rd Aerospace Sciences Meeting and Exhibit, Reno Nevada, January 1995.</ref> Lockheed's SPLITFLOW code<ref>Karmna, Steve L. Jr., \"SPLITFLOW: A 3D Unstructurted Cartesian Prismatic Grid CFD Code for Complex Geometries,\" AIAA paper 95-0343, presented at the 33rd Aerospace Sciences Meeting and Exhibit, Reno Nevada, January 1995.</ref> and [[Georgia Institute of Technology|Georgia Tech]]'s NASCART-GT).<ref>Marshall, D., and Ruffin, S.M., \" An Embedded Boundary Cartesian Grid Scheme for Viscous Flows using a New Viscous Wall Boundary Condition Treatment,\u201d AIAA Paper 2004-0581, presented at the AIAA 42nd Aerospace Sciences Meeting, January 2004.</ref> [[Antony Jameson]] also developed the three-dimensional AIRPLANE code<ref>Jameson, A., Baker, T.J. and Weatherill, N.P., \"Calculation of Inviscid Tramonic Flow over a Complete Aircraft,\" AIAA paper 86-0103, presented at the AIAA 24th Aerospace Sciences Meeting, Reno Nevada, January 1986.</ref> which made use of unstructured tetrahedral grids.\n\nIn the two-dimensional realm, Mark Drela and Michael Giles, then graduate students at MIT, developed the ISES Euler program<ref>Giles, M., Drela, M. and Thompkins, W.T. Jr., \"Newton Solution of Direct and Inverse Transonic Euler Equations,\" AIAA paper 85-1530, presented at the Third Symposium on Numerical and Physical Aspects of Aerodynamic Flows, Long Beach, California, January 1985.</ref> (actually a suite of programs) for airfoil design and analysis.  This code first became available in 1986 and has been further developed to design, analyze and optimize single or multi-element airfoils, as the MSES program.<ref>Drela, M. \"Newton Solution of Coupled Viscous/Inviscid Multielement Airfoil Flows,\", AIAA paper 90-1470, presented at the AIAA 21st Fluid Dynamics, Plasma Dynamics and Lasers Conference, Seattle Washington, June 1990.</ref>  MSES sees wide use throughout the world.  A derivative of MSES, for the design and analysis of airfoils in a cascade, is MISES,<ref>Drela, M. and Youngren H., \"A User's Guide to MISES 2.53\", MIT Computational Sciences Laboratory, December 1998.</ref> developed by Harold \"Guppy\" Youngren while he was a graduate student at MIT.\n\nThe Navier\u2013Stokes equations were the ultimate target of development.  Two-dimensional codes, such as NASA Ames' ARC2D code first emerged.  A number of three-dimensional codes were developed (ARC3D, [[Overflow (software)|OVERFLOW]], CFL3D are three successful NASA contributions), leading to numerous commercial packages.\n\n==Methodology==\nIn all of these approaches the same basic procedure is followed.\n* During [[preprocessor (CAE)|preprocessing]]\n** The [[geometry]] (physical bounds) of the problem is defined.\n** The [[volume]] occupied by the fluid is divided into discrete cells (the mesh). The mesh may be uniform or non-uniform.\n** The physical modeling is defined \u2013 for example, the equations of motion + [[enthalpy]] + radiation + species conservation\n** Boundary conditions are defined. This involves specifying the fluid behaviour and properties at the boundaries of the problem. For transient problems, the initial conditions are also defined.\n* The [[computer simulation|simulation]] is started and the equations are solved iteratively as a steady-state or transient.\n* Finally a postprocessor is used for the analysis and visualization of the resulting solution.\n\n===Discretization methods===\n{{further|Discretization of Navier\u2013Stokes equations}}\n\nThe stability of the selected discretisation is generally established numerically rather than analytically as with simple linear problems.  Special care must also be taken to ensure that the discretisation handles discontinuous solutions gracefully.  The [[Euler equations (fluid dynamics)|Euler equations]] and [[Navier\u2013Stokes equations]] both admit shocks, and contact surfaces.\n\nSome of the discretization methods being used are:\n\n==== Finite volume method ====\n\n{{Main article|Finite volume method}}\n\nThe finite volume method (FVM) is a common approach used in CFD codes, as it has an advantage in [[Random-access memory|memory]] usage and solution speed, especially for large problems, high [[Reynolds number]] turbulent flows, and source term dominated flows (like combustion).<ref>{{cite book|last=Patankar|first=Suhas V.|authorlink=Suhas Patankar|title=Numerical Heat Transfer and Fluid FLow|year=1980|publisher=Hemisphere Publishing Corporation\n|isbn=0891165223}}</ref>\n\nIn the finite volume method, the governing partial differential equations (typically the Navier-Stokes equations, the mass and energy conservation equations, and the turbulence equations) are recast in a conservative form, and then solved over discrete control volumes. This [[discretization]] guarantees the conservation of fluxes through a particular control volume. The finite volume equation yields governing equations in the form,\n:<math>\\frac{\\partial}{\\partial t}\\iiint Q\\, dV + \\iint F\\, d\\mathbf{A} = 0,</math>\nwhere <math>Q</math> is the vector of conserved variables, <math>F</math> is the vector of fluxes (see [[Euler equations (fluid dynamics)|Euler equations]] or [[Navier\u2013Stokes equations]]), <math>V</math> is the volume of the control volume element, and <math>\\mathbf{A}</math> is the surface area of the control volume element.\n\n==== Finite element method ====\n\n{{Main article|Finite element method}}\n\nThe finite element method (FEM) is used in structural analysis of solids, but is also applicable to fluids.  However, the FEM formulation requires special care to ensure a conservative solution. The FEM formulation has been adapted for use with fluid dynamics governing equations.{{Citation needed|date=November 2010}} Although FEM must be carefully formulated to be conservative, it is much more stable than the finite volume approach.<ref>{{cite journal\n| title=k-version of finite element method in gas dynamics: higher-order global differentiability numerical solutions\n| last1=Surana\n| first1=K.A.\n| last2=Allu\n| first2=S.\n| last3=Tenpas\n| first3=P.W.\n| last4=Reddy\n| first4=J.N.\n| journal=International Journal for Numerical Methods in Engineering\n| volume=69\n| issue=6\n| pages=1109\u20131157\n|date=February 2007\n| doi=10.1002/nme.1801\n|bibcode = 2007IJNME..69.1109S }}</ref>  However, FEM can require more memory and has slower solution times than the FVM.<ref>{{cite book\n|author1=Huebner, K. H. |author2=Thornton, E. A. |author3=and Byron, T. D. | title=The Finite Element Method for Engineers\n| edition=Third\n| publisher=Wiley Interscience\n| year=1995}}</ref>\n\nIn this method, a weighted residual equation is formed:\n\n:<math>R_i = \\iiint W_i Q \\, dV^e</math>\n\nwhere <math>R_i</math> is the equation residual at an element vertex <math>i</math>, <math>Q</math> is the conservation equation expressed on an element basis, <math>W_i</math> is the weight factor, and <math>V^{e}</math> is the volume of the element.\n\n==== Finite difference method ====\n\n{{Main article|Finite difference method}}\n\nThe finite difference method (FDM) has historical importance{{Citation needed|date=November 2010}} and is simple to program.  It is currently only used in few specialized codes, which handle complex geometry with high accuracy and efficiency by using embedded boundaries or overlapping grids (with the solution interpolated across each grid).{{Citation needed|date=November 2010}} \n:<math> \n\\frac{\\partial Q}{\\partial t}+\n\\frac{\\partial F}{\\partial x}+\n\\frac{\\partial G}{\\partial y}+\n\\frac{\\partial H}{\\partial z}=0\n</math>\nwhere <math>Q</math> is the vector of conserved variables, and <math>F</math>, <math>G</math>, and <math>H</math> are the fluxes in the <math>x</math>, <math>y</math>, and <math>z</math> directions respectively.\n\n==== Spectral element method ====\n\n{{Main article|Spectral element method}}\n\nSpectral element method is a finite element type method. It requires the mathematical problem (the partial differential equation) to be cast in a weak formulation. This is typically done by multiplying the differential equation by an arbitrary test function and integrating over the whole domain. Purely mathematically, the test functions are completely arbitrary - they belong to an infinite-dimensional function space. Clearly an infinite-dimensional function space cannot be represented on a discrete spectral element mesh; this is where the spectral element discretization begins. The most crucial thing is the choice of interpolating and testing functions. In a standard, low order FEM in 2D, for quadrilateral elements the most typical choice is the bilinear test or interpolating function of the form <math>v(x,y) = ax+by+cxy+d</math>. In a spectral element method however, the interpolating and test functions are chosen to be polynomials of a very high order (typically e.g. of the 10th order in CFD applications). This guarantees the rapid convergence of the method. Furthermore, very efficient integration procedures must be used, since the number of integrations to be performed in a numerical codes is big. Thus, high order Gauss integration quadratures are employed, since they achieve the highest accuracy with the smallest number of computations to be carried out.\nAt the time there are some academic CFD codes based on the spectral element method and some more are currently under development, since the new time-stepping schemes arise in the scientific world. You can refer to the [http://c-cfd.meil.pw.edu.pl/ccfd/index.php?item=7 C-CFD] website to see movies of incompressible flows in channels simulated with a spectral element solver or to the [http://numerical-mechanics.com/page19.php Numerical Mechanics (see bottom of the page)] website to see a movie of the lid-driven cavity flow obtained with a compeletely novel unconditionally stable time-stepping scheme combined with a spectral element solver.\n\n==== Boundary element method ====\n\n{{Main article|Boundary element method}}\n\nIn the boundary element method, the boundary occupied by the fluid is divided into a surface mesh.\n\n==== High-resolution discretization schemes ====\n\n{{Main article|High-resolution scheme}}\n\nHigh-resolution schemes are used where shocks or discontinuities are present. Capturing sharp changes in the solution requires the use of second or higher-order numerical schemes that do not introduce spurious oscillations. This usually necessitates the application of [[flux limiters]] to ensure that the solution is [[total variation diminishing]].{{Citation needed|date=November 2010}}\n\n===Turbulence models===\n{{Expand section|\n* Models should be listed in some order (increasing cost, increasing accuracy, alphabetically...)\n* Add the [[One-dimensional turbulence]] model (and its predecessor [[Linear eddy model]])\n|date=November 2010}}\n\nIn computational modeling of turbulent flows, one common objective is to obtain a model that can predict quantities of interest, such as fluid velocity, for use in engineering designs of the system being modeled.  For turbulent flows, the range of length scales and complexity of phenomena involved in turbulence make most modeling approaches prohibitively expensive; the resolution required to resolve all scales involved in turbulence is beyond what is computationally possible.  The primary approach in such cases is to create numerical models to approximate unresolved phenomena.  This section lists some commonly used computational models for turbulent flows.\n\nTurbulence models can be classified based on computational expense, which corresponds to the range of scales that are modeled versus resolved (the more turbulent scales that are resolved, the finer the resolution of the simulation, and therefore the higher the computational cost). If a majority or all of the turbulent scales are not modeled, the computational cost is very low, but the tradeoff comes in the form of decreased accuracy.\n\nIn addition to the wide range of length and time scales and the associated computational cost, the governing equations of fluid dynamics contain a [[Nonlinear system|non-linear]] convection term and a non-linear and non-local pressure gradient term.  These nonlinear equations must be solved numerically with the appropriate boundary and initial conditions.\n\n==== Reynolds-averaged Navier\u2013Stokes ====\n{{main article|Reynolds-averaged Navier\u2013Stokes equations}}\n\n[[Reynolds-averaged Navier\u2013Stokes equations|Reynolds-averaged Navier-Stokes]] (RANS) equations are the oldest approach to turbulence modeling. An ensemble version of the governing equations is solved, which introduces new ''apparent stresses'' known as [[Reynolds stresses]]. This adds a second order tensor of unknowns for which various models can provide different levels of closure. It is a common misconception that the RANS equations do not apply to flows with a time-varying mean flow because these equations are 'time-averaged'. In fact, statistically unsteady (or non-stationary) flows can equally be treated. This is sometimes referred to as URANS. There is nothing inherent in Reynolds averaging to preclude this, but the turbulence models used to close the equations are valid only as long as the time over which these changes in the mean occur is large compared to the time scales of the turbulent motion containing most of the energy.\n\nRANS models can be divided into two broad approaches:\n\n; [[Turbulence modeling|Boussinesq hypothesis]]: This method involves using an algebraic equation for the Reynolds stresses which include determining the turbulent viscosity, and depending on the level of sophistication of the model, solving transport equations for determining the turbulent kinetic energy and dissipation. Models include k-\u03b5 ([[Brian Launder|Launder]] and [[Brian Spalding|Spalding]]),<ref>{{cite journal|last=Launder|first=B. E.|author2=D. B. Spalding|year=1974|title= The Numerical Computation of Turbulent Flows|journal=Computer Methods in Applied Mechanics and Engineering|pages=269\u2013289|doi = 10.1016/0045-7825(74)90029-2|bibcode = 1974CMAME...3..269L|volume=3|issue=2 }}</ref> Mixing Length Model ([[Ludwig Prandtl|Prandtl]]),<ref name=wilcox>{{cite book|last=Wilcox|first=David C.|title=Turbulence Modeling for CFD|year=2006|publisher=DCW Industries, Inc.|isbn=978-1-928729-08-2|edition=3}}</ref> and Zero Equation Model (Cebeci and [[Apollo M. O. Smith|Smith]]).<ref name=wilcox /> The models available in this approach are often referred to by the number of transport equations associated with the method. For example, the Mixing Length model is a \"Zero Equation\" model because no transport equations are solved; the <math>k-\\epsilon</math> is a \"Two Equation\" model because two transport equations (one for <math>k</math> and one for <math>\\epsilon</math>) are solved.\n; [[Reynolds stress model]] (RSM): This approach attempts to actually solve transport equations for the Reynolds stresses. This means introduction of several transport equations for all the Reynolds stresses and hence this approach is much more costly in CPU effort.{{Citation needed|date=November 2010}}\n\n====Large eddy simulation====\n{{main article|Large eddy simulation}}\n\n[[Image:LESPremixedFlame.jpg|thumb|right|250px|Volume rendering of a non-premixed swirl flame as simulated by LES.]]\n[[Large eddy simulation]] (LES) is a technique in which the smallest scales of the flow are removed through a filtering operation, and their effect modeled using subgrid scale models.  This allows the largest and most important scales of the turbulence to be resolved, while greatly reducing the computational cost incurred by the smallest scales. This method requires greater computational resources than RANS methods, but is far cheaper than DNS.\n\n====Detached eddy simulation====\n{{main article|Detached eddy simulation}}\n\n[[Detached eddy simulation]]s (DES) is a modification of a RANS model in which the model switches to a subgrid scale formulation in regions fine enough for LES calculations. Regions near solid boundaries and where the turbulent length scale is less than the maximum grid dimension are assigned the RANS mode of solution. As the turbulent length scale exceeds the grid dimension, the regions are solved using the LES mode. Therefore, the grid resolution for DES is not as demanding as pure LES, thereby considerably cutting down the cost of the computation. Though DES was initially formulated for the Spalart-Allmaras model (Spalart et al., 1997), it can be implemented with other RANS models (Strelets, 2001), by appropriately modifying the length scale which is explicitly or implicitly involved in the RANS model. So while Spalart-Allmaras model based DES acts as LES with a wall model, DES based on other models (like two equation models) behave as a hybrid RANS-LES model. Grid generation is more complicated than for a simple RANS or LES case due to the RANS-LES switch. DES is a non-zonal approach and provides a single smooth velocity field across the RANS and the LES regions of the solutions.\n\n====Direct numerical simulation====\n{{main article|Direct numerical simulation}}\n\n[[Direct numerical simulation]] (DNS) resolves the entire range of turbulent length scales.  This marginalizes the effect of models, but is extremely expensive.  The computational cost is proportional to <math>Re^{3}</math>.<ref name=\"Pope_2000\">{{cite book|title=Turbulent Flows|author=Pope, S. B.|publisher=Cambridge University Press|year=2000|isbn=978-0-521-59886-6}}</ref> DNS is intractable for flows with complex geometries or flow configurations.\n\n====Coherent vortex simulation====\n\nThe coherent vortex simulation approach decomposes the turbulent flow field into a coherent part, consisting of organized vortical motion, and the incoherent part, which is the random background flow.<ref name=\"Farge_2001\">{{cite journal\n|title=Coherent Vortex Simulation (CVS), A Semi-Deterministic Turbulence Model Using Wavelets\n|last1=Farge | first1= Marie | author1-link = Marie Farge\n|author2=Schneider, Kai\n|journal=Flow, Turbulence and Combustion\n|volume=66\n|issue=4\n|pages=393\u2013426\n|doi=10.1023/A:1013512726409\n|year=2001}}</ref>  This decomposition is done using [[wavelet]] filtering.  The approach has much in common with LES, since it uses decomposition and resolves only the filtered portion, but different in that it does not use a linear, low-pass filter.  Instead, the filtering operation is based on wavelets, and the filter can be adapted as the flow field evolves.  [[Marie Farge|Farge]] and Schneider tested the CVS method with two flow configurations and showed that the coherent portion of the flow exhibited the <math>-\\frac{40}{39}</math> energy spectrum exhibited by the total flow, and corresponded to coherent structures ([[vortex stretching|vortex tubes]]), while the incoherent parts of the flow composed homogeneous background noise, which exhibited no organized structures.  Goldstein and Vasilyev<ref name=\"Goldstein_2004\">{{cite journal\n|author1=Goldstein, Daniel\n|author2=Vasilyev, Oleg\n|title=Stochastic coherent adaptive large eddy simulation method\n|journal=Physics of Fluids A\n|year=1995\n|volume=24\n|page=2497\n|doi=10.1063/1.1736671|bibcode = 2004PhFl...16.2497G\n|issue=7 }}</ref> applied the FDV model to large eddy simulation, but did not assume that the wavelet filter completely eliminated all coherent motions from the subfilter scales.  By employing both LES and CVS filtering, they showed that the SFS dissipation was dominated by the SFS flow field's coherent portion.\n\n====PDF methods====\n\n[[Probability density function]] (PDF) methods for turbulence, first introduced by [[Thomas S. Lundgren|Lundgren]],<ref name=\"Lundgren_1969\">{{cite journal\n|title=Model equation for nonhomogeneous turbulence\n|author=Lundgren, T.S.\n|journal=Physics of Fluids A\n|volume=12\n|issue=3\n|year=1969\n|pages=485\u2013497\n|doi=10.1063/1.1692511|bibcode = 1969PhFl...12..485L }}</ref> are based on tracking the one-point PDF of the velocity, <math>f_{V}(\\boldsymbol{v};\\boldsymbol{x},t) d\\boldsymbol{v}</math>, which gives the probability of the velocity at point <math>\\boldsymbol{x}</math> being between <math>\\boldsymbol{v}</math> and <math>\\boldsymbol{v}+d\\boldsymbol{v}</math>.  This approach is analogous to the [[kinetic theory of gases|kinetic theory]] of gases, in which the macroscopic properties of a gas are described by a large number of particles.  PDF methods are unique in that they can be applied in the framework of a number of different turbulence models; the main differences occur in the form of the PDF transport equation.  For example, in the context of [[large eddy simulation]], the PDF becomes the filtered PDF.<ref name=\"Colucci_1998\">{{cite journal\n|title=Filtered density function for large eddy simulation of turbulent reacting flows\n|author1=Colucci, P. J.\n|author2=Jaberi, F. A\n|author3=Givi, P.\n|author4=Pope, S. B.\n|journal=Physics of Fluids A\n|year=1998\n|volume=10\n|issue=2\n|pages=499\u2013515\n|doi=10.1063/1.869537|bibcode = 1998PhFl...10..499C }}</ref>  PDF methods can also be used to describe chemical reactions,<ref name=\"Fox_2003\">{{cite book\n|author=Fox, Rodney\n|title=Computational models for turbulent reacting flows\n|year=2003\n|publisher=Cambridge University Press\n|isbn=978-0-521-65049-6}}</ref><ref name=\"Pope_1985\">{{cite journal\n|title=PDF methods for turbulent reactive flows\n|author=Pope, S. B.\n|journal=Progress in Energy and Combustion Science\n|year=1985\n|volume=11\n|pages=119\u2013192|bibcode = 1985PrECS..11..119P\n|doi=10.1016/0360-1285(85)90002-4\n|issue=2 }}</ref> and are particularly useful for simulating chemically reacting flows because the chemical source term is closed and does not require a model.  The PDF is commonly tracked by using Lagrangian particle methods; when combined with large eddy simulation, this leads to a [[Langevin equation]] for subfilter particle evolution.\n\n====Vortex method====\n{{expand section|disadvantages of the method, accessment of reasons behind it not being used everywhere.|date=September 2013}}\nThe vortex method is a grid-free technique for the simulation of turbulent flows. It uses vortices as the computational elements, mimicking the physical structures in turbulence. Vortex methods were developed as a grid-free methodology that would not be limited by the fundamental smoothing effects associated with grid-based methods. To be practical, however, vortex methods require means for rapidly computing velocities from the vortex elements \u2013 in other words they require the solution to a particular form of the [[N-body problem]] (in which the motion of N objects is tied to their mutual influences). A breakthrough came in the late 1980s with the development of the [[fast multipole method]] (FMM), an algorithm by V. Rokhlin (Yale) and L. Greengard (Courant Institute). This breakthrough paved the way to practical computation of the velocities from the vortex elements and is the basis of successful algorithms.  They are especially well-suited to simulating filamentary motion, such as wisps of smoke, in real-time simulations such as video games, because of the fine detail achieved using minimal computation.<ref>{{cite web\n| url=http://software.intel.com/en-us/articles/fluid-simulation-for-video-games-part-1/\n| title=Fluid Simulation for Video Games\n| last=Gourlay\n| first=Michael J.\n| publisher=Intel Software Network\n|date=July 2009}}</ref>\n\nSoftware based on the vortex method offer a new means for solving tough fluid dynamics problems with minimal user intervention.{{Citation needed|date=November 2010}}  All that is required is specification of problem geometry and setting of boundary and initial conditions. Among the significant advantages of this modern technology;\n* It is practically grid-free, thus eliminating numerous iterations associated with RANS and LES.\n* All problems are treated identically. No modeling or calibration inputs are required.\n* Time-series simulations, which are crucial for correct analysis of acoustics, are possible.\n* The small scale and large scale are accurately simulated at the same time.\n\n====Vorticity confinement method====\n\n{{Main article|Vorticity confinement}}\n\nThe [[vorticity confinement]] (VC) method is an Eulerian technique used in the simulation of turbulent wakes. It uses a solitary-wave like approach to produce a stable solution with no numerical spreading. VC can capture the small-scale features to within as few as 2 grid cells. Within these features, a nonlinear difference equation is solved as opposed to the [[finite difference equation]]. VC is similar to [[shock capturing methods]], where conservation laws are satisfied, so that the essential integral quantities are accurately computed.\n\n====Linear eddy model====\n\nThe Linear eddy model is a technique used to simulate the convective mixing that takes place in turbulent flow.<ref>{{cite journal|last=Krueger|first=Steven K.|title=Linear Eddy Simulations Of Mixing In A Homogeneous Turbulent Flow|journal=Physics Of Fluids|year=1993|volume=5|issue=4|pages=1023|bibcode = 1993PhFl....5.1023M |doi = 10.1063/1.858667 }}<!--|accessdate=2 December 2012--></ref> Specifically, it provides a mathematical way to describe the interactions of a scalar variable within the vector flow field. It is primarily used in one-dimensional representations of turbulent flow, since it can be applied across a wide range of length scales and Reynolds numbers. This model is generally used as a building block for more complicated flow representations, as it provides high resolution predictions that hold across a large range of flow conditions.\n\n===Two-phase flow===\n\n[[File:Bubble-rising.jpg|thumb|right|Simulation of bubble swarm using [[volume of fluid method]]]]\n\nThe modeling of [[two-phase flow]] is still under development. Different methods have been proposed lately.<ref>{{cite news|last1=Hirt|last2=Nichols|first1=C.W.|first2=B.D.|title=Volume of fluid (VOF) method for the dynamics of free boundaries|year=1981|publisher=Journal of Computational Physics }}</ref><ref>{{cite news|last1=Unverdi |first1=S. O.|last2=Tryggvason|first2=G.|authorlink2=Gretar Tryggvason|title=A Front-Tracking Method for Viscous, Incompressible, Multi-Fluid Flows|year=1992|publisher=J. Comput. Phys}}</ref> The [[Volume of fluid method]] has received a lot of attention lately,{{by whom|date=November 2010}} for problems that do not have dispersed particles,{{Citation needed|date=November 2010}} but the [[Level set method]] and [[front tracking]] are also valuable approaches {{According to whom|date=November 2010}}. Most of these methods are either good in maintaining a sharp interface or at conserving mass {{According to whom|date=November 2010}}.  This is crucial since the evaluation of the density, viscosity and surface tension is based on the values averaged over the interface.{{Citation needed|date=November 2010}} Lagrangian multiphase models, which are used for dispersed media, are based on solving the Lagrangian equation of motion for the dispersed phase.{{Citation needed|date=November 2010}}\n\n===Solution algorithms===\n\nDiscretization in the space produces a system of [[ordinary differential equations]] for unsteady problems and algebraic equations for steady problems. Implicit or semi-implicit methods are generally used to integrate the ordinary differential equations, producing a system of (usually) nonlinear algebraic equations.  Applying a [[Newton's method#Nonlinear systems of equations|Newton]] or [[Fixed point iteration|Picard]] iteration produces a system of linear equations which is nonsymmetric in the presence of advection and indefinite in the presence of incompressibility. Such systems, particularly in 3D, are frequently too large for direct solvers, so iterative methods are used, either stationary methods such as [[Successive over-relaxation|successive overrelaxation]] or [[Krylov subspace]] methods. Krylov methods such as [[Generalized minimal residual method|GMRES]], typically used with [[Preconditioner|preconditioning]], operate by minimizing the residual over successive subspaces generated by the preconditioned operator.\n\n[[Multigrid method|Multigrid]] has the advantage of asymptotically optimal performance on many problems. Traditional{{According to whom|date=November 2010}} solvers and preconditioners are effective at reducing high-frequency components of the residual, but low-frequency components typically require many iterations to reduce. By operating on multiple scales, multigrid reduces all components of the residual by similar factors, leading to a mesh-independent number of iterations.{{Citation needed|date=November 2010}}\n\nFor indefinite systems, preconditioners such as [[incomplete LU factorization]], [[Additive Schwarz method|additive Schwarz]], and [[Multigrid method|multigrid]] perform poorly or fail entirely, so the problem structure must be used for effective preconditioning.<ref>{{cite journal\n| author=Benzi, Golub, Liesen\n| title=Numerical solution of saddle-point problems\n| journal=Acta Numerica\n| year=2005\n| doi=10.1017/S0962492904000212\n| volume=14\n| pages=1\u2013137|bibcode = 2005AcNum..14....1B }}</ref> Methods commonly used in CFD are the [[SIMPLE algorithm|SIMPLE]] and [[Uzawa iteration|Uzawa algorithms]] which exhibit mesh-dependent convergence rates, but recent advances based on block LU factorization combined with multigrid for the resulting definite systems have led to preconditioners that deliver mesh-independent convergence rates.<ref>{{cite journal\n| author=Elman\n| title=A taxonomy and comparison of parallel block multi-level preconditioners for the incompressible Navier\u2013Stokes equations\n| journal=Journal of Computational Physics\n| volume=227\n| issue=3\n|date=January 2008\n| doi=10.1016/j.jcp.2007.09.026\n| last2=Howle\n| first2=V\n| last3=Shadid\n| first3=J\n| last4=Shuttleworth\n| first4=R\n| last5=Tuminaro\n| first5=R\n| pages=1790\u20131808|bibcode = 2008JCoPh.227.1790E |display-authors=etal}}</ref>\n\n===Unsteady Aerodynamics===\nCFD made a major break through in late 70s with the introduction of LTRAN2, a 2-D code to model oscillating airfoils based on [[transonic]] small perturbation theory by Ballhaus and associates.<ref>{{cite web | url = http://history.arc.nasa.gov/hist_pdfs/bio_ballhaus.pdf | format = PDF | title = Bioographies | last = Haigh | first = Thomas | work = IEEE Annals of the History of Computing | year = 2006}}</ref> It uses a Murman-Cole switch algorithm for modeling the moving shock-waves.<ref>Murman, E.M. and Cole, J.D., \"Calculation of Plane Steady Transonic Flows\", AIAA Journal , Vol 9, No 1, pp 114-121, Jan 1971. Reprinted in AIAA Journal, Vol 41, No 7A, pp 301-308, July 2003</ref> Later it was extended to 3-D with use of a rotated difference scheme by  AFWAL/Boeing that resulted in LTRAN3.<ref>{{cite journal | url = http://onlinelibrary.wiley.com/doi/10.1002/cpa.3160270302/abstract | title = Iterative solution of transonic flows over airfoils and wings, including flows at mach 1 | last = Jameson | first = Antony | publisher = Communications on Pure and Applied Mathematics | doi = 10.1002/cpa.3160270302 | date = October 13, 2006 | volume = 27 | issue = 3 | pages = 283\u2013309}}</ref><ref>Borland, C. J., \u201cXTRAN3S - Transonic Steady and Unsteady Aerodynamics for Aeroelastic Applications,\u201dAFWAL-TR-85-3214, Air Force Wright Aeronautical Laboratories, Wright-Patterson AFB, OH, January, 1986</ref>\n\n===Biomedical Engineering===\n\n[[File:Vel-Streamline-FC.jpg|thumb|right|Simulation of blood flow in a human [[aorta]]]]\nCFD investigations are used to clarify the characteristics of aortic flow in detail that are otherwise invisible to experimental measurements. To analyze these conditions, CAD models of the human vascular system are extracted employing modern imaging techniques. A 3D model is reconstructed from this data and the fluid flow can be computed. Blood properties like Non-Newtonian behavior and realistic boundary conditions (e.g.  systemic pressure) have to be taken into consideration. Therefore, making it possible to analyze and optimize the flow in the cardiovascular system for different applications.<ref>Kaufmann, T.A.S., Graefe, R., Hormes, M., Schmitz-Rode, T. and Steinseiferand, U., \"Computational Fluid Dynamics in Biomedical Engineering\", Computational Fluid Dynamics: Theory, Analysis and Applications , pp 109-136</ref>\n\n== See also ==\n* [[Advanced Simulation Library]]\n* [[Blade element theory]]\n* [[Central differencing scheme]]\n* [[Computational magnetohydrodynamics]]\n* [[Different types of boundary conditions in fluid dynamics]]\n* [[Finite element analysis]]\n* [[Finite volume method for unsteady flow]]\n* [[Fluid simulation]]\n* [[Immersed boundary method]]\n* [[KIVA (software)]]\n* [[Lattice Boltzmann methods]]\n* [[List of finite element software packages]]\n* [[Meshfree methods]]\n* [[Moving particle semi-implicit method]]\n* [[Multi-particle collision dynamics]]\n* [[Multidisciplinary design optimization]]\n* [[Numerical methods in fluid mechanics]]\n* [[Smoothed-particle hydrodynamics]]\n* [[Stochastic Eulerian Lagrangian method]]\n* [[Turbulence modeling]]\n* [[Visualization (graphic)|Visualization]]\n* [[Wind tunnel]]\n* [[Cavitation modelling]]\n* [[Shape optimization]]\n\n==References==\n{{reflist|30em}}\n\n==Notes==\n\n*{{Cite book\n  | last = Anderson\n  | first = John D.\n  | title = Computational Fluid Dynamics: The Basics With Applications\n  | publisher = McGraw-Hill Science\n  | series = Science/Engineering/Math\n  | year = 1995\n  | isbn = 0-07-001685-2\n  | postscript = <!-- Bot inserted parameter. Either remove it; or change its value to \".\" for the cite to end in a \".\", as necessary. -->{{inconsistent citations}}}}\n*{{Cite book\n  | last = Patankar\n  | first = Suhas\n  | title = Numerical Heat Transfer and Fluid Flow\n  | publisher = Taylor & Francis\n  | series = Hemisphere Series on Computational Methods in Mechanics and Thermal Science\n  | year = 1980\n  | isbn = 0-89116-522-3\n  | postscript = <!-- Bot inserted parameter. Either remove it; or change its value to \".\" for the cite to end in a \".\", as necessary. -->{{inconsistent citations}}  }}\n*{{Cite journal\n  | last =Shah\n  | first =Tasneem M.\n  | authorlink =Tasneem M. Shah\n  |author2=Sadaf Siddiq |author3=Zafar U. Koreshi\n   | title =An analysis and comparison of tube natural frequency modes with fluctuating force frequency from the thermal cross-flow fluid in 300 MWe PWR\n  | journal = International Journal of Engineering and Technology\n  | volume = 9\n  | issue =9\n  | pages =201\u2013205\n  | publisher =\n  | url =https://docs.google.com/viewer?a=v&q=cache:4gQM2Vj9itIJ:www.ijens.org/1936091%2520IJET.pdf+tasneem+M.+Shah&hl=en&gl=us&pid=bl&srcid=ADGEESg-lxYkvf5xfu4Nv6UfF-xgO2yzh2O6wa7EzNVurfVgtXdi_bkvvSAijrk7DvwDqWJE9Ke-trzYKGEM5GCvi5w-qmbo5nvDaGt4kv-mBr-XL6in2xo0WRyHVX3o4roKLkcZgTAk&sig=AHIEtbQ4XElNn3nmOsUXoM0JdkNeY9cMxg\n  | issn =\n  | doi =\n  | accessdate = }}\n\n==External links==\n{{Sister project links| wikt=no | commons=Category:Computational fluid dynamics | b=no | n=no | q=Computational fluid dynamics | s=no | v=no | voy=no | species=no | d=no}}\n\n* ''Course:'' [http://www.mathematik.uni-dortmund.de/~kuzmin/cfdintro/cfd.html Introduction to CFD] \u2013 Dmitri Kuzmin ([[Dortmund University of Technology]])\n* ''Course:'' [http://www3.nd.edu/~dbalsara/Numerical-PDE-Course/ Numerical PDE Techniques for Scientists and Engineers], Open access Lectures and Codes for Numerical PDEs, including a modern view of Compressible CFD\n* [http://software.intel.com/en-us/articles/fluid-simulation-for-video-games-part-1/ Fluid Simulation for Video Games], a series of over a dozen articles describing numerical methods for simulating fluids\n\n{{Authority control}}\n\n{{DEFAULTSORT:Computational Fluid Dynamics}}\n[[Category:Computational fluid dynamics| ]]\n[[Category:Computational fields of study]]"}]}}}}