{"batchcomplete":"","query":{"normalized":[{"from":"Point-to-Point_Tunneling_Protocol","to":"Point-to-Point Tunneling Protocol"}],"pages":{"186698":{"pageid":186698,"ns":0,"title":"Point-to-Point Tunneling Protocol","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{IPstack}}\nThe '''Point-to-Point Tunneling Protocol''' ('''PPTP''') is an obsolete method for implementing [[virtual private network]]s, with many known security issues. PPTP uses a control channel over [[Transmission Control Protocol|TCP]] and a [[Generic Routing Encapsulation|GRE]] tunnel operating to encapsulate [[Point-to-Point Protocol|PPP]] packets.\n\nThe PPTP specification does not describe [[encryption]] or [[authentication]] features and relies on the Point-to-Point Protocol being tunneled to implement security functionality. However, the most common PPTP implementation shipping with the [[Microsoft Windows]] product families implements various levels of authentication and encryption natively as standard features of the Windows PPTP stack. The intended use of this protocol is to provide security levels and remote access levels comparable with typical [[Virtual private network|VPN]] products.\n\nA specification for PPTP was published in July 1999 as RFC 2637<ref>RFC 2637</ref> and was developed by a vendor consortium formed by [[Microsoft]], [[Ascend Communications]] (today part of [[Alcatel-Lucent]]), [[3Com]], and others. PPTP has not been proposed nor ratified as a standard by the [[Internet Engineering Task Force]].\n\n== Protocol description ==\nA PPTP tunnel is instantiated by communication to the peer on [[Transport Control Protocol|TCP]] port 1723. This TCP connection is then used to initiate and manage a second [[Generic Routing Encapsulation|GRE]] tunnel to the same peer. The PPTP GRE packet format is non standard, including an additional ''acknowledgement'' field replacing the typical ''routing'' field in the GRE header. However, as in a normal GRE connection, those modified GRE packets are directly encapsulated into IP packets, and seen as IP protocol number 47. The GRE tunnel is used to carry encapsulated PPP packets, allowing the tunnelling of any protocols that can be carried within PPP, including [[Internet Protocol|IP]], [[NetBEUI]] and [[IPX]].\n\nIn the Microsoft implementation, the tunneled PPP traffic can be authenticated with [[Password authentication protocol|PAP]], [[Challenge-handshake authentication protocol|CHAP]], [[MS-CHAP|MS-CHAP v1/v2]] .\n\n==Security==\nPPTP has been the subject of many security analyses and serious security vulnerabilities have been found in the protocol. The known vulnerabilities relate to the underlying PPP authentication protocols used, the design of the MPPE protocol as well as the integration between MPPE and PPP authentication for session key establishment.<ref>{{cite web|title=Microsoft says don't use PPTP and MS-CHAP|url=http://www.h-online.com/security/news/item/Microsoft-says-don-t-use-PPTP-and-MS-CHAP-1672257.html|accessdate=2012-11-03}}</ref><ref>{{cite web|title=A death blow for PPTP|url=http://www.h-online.com/security/features/A-death-blow-for-PPTP-1716768.html|accessdate=2012-11-03}}</ref><ref>{{cite news|title=Differences between PPTP and L2TP|url=https://www.bestvpnrating.com/blog/main-differences-between-pptp-l2tp|accessdate=7 August 2016|work=bestvpnrating}}</ref>\n\nA summary of these vulnerabilities is below:\n\n* [[MS-CHAP]]-v1 is fundamentally insecure. Tools exist to trivially extract the NT Password hashes from a captured MSCHAP-v1 exchange.<ref name=\"schneier1\">[http://www.schneier.com/paper-pptp.pdf Bruce Schneier, ''Cryptanalysis of Microsoft's Point to Point Tunneling Protocol (PPTP)''].</ref>\n* When using MS-CHAP-v1, [[Microsoft Point-to-Point Encryption|MPPE]] uses the same RC4 session key for encryption in both directions of the communication flow. This can be cryptanalysed with standard methods by XORing the streams from each direction together.<ref>[http://www.schneier.com/paper-pptpv2.pdf Bruce Schneier, ''Cryptanalysis of Microsoft's PPTP Authentication Extensions (MS-CHAPv2)'', October 19 1999].</ref>\n* MS-CHAP-v2 is vulnerable to dictionary attacks on the captured challenge response packets. Tools exist to perform this process rapidly.<ref>Josh of willhackforsushi.com \"[http://www.willhackforsushi.com/Asleap.html news]\".</ref>\n* In 2012, it was demonstrated that the complexity of a brute-force attack on a MS-CHAP-v2 key is equivalent to a brute-force attack on a single [[Data Encryption Standard|DES]] key. An online service was also demonstrated which is capable of decrypting a MS-CHAP-v2 MD4 passphrase in 23 hours.<ref>{{cite web|url=https://www.cloudcracker.com/blog/2012/07/29/cracking-ms-chap-v2/ |title=Divide and Conquer: Cracking MS-CHAPv2 with a 100% success rate |publisher=Cloudcracker.com |date=2012-07-29 |accessdate=2012-09-07}}</ref><ref>{{cite web|url=http://www.theregister.co.uk/2012/07/31/ms_chapv2_crack/ |title=Marlinspike demos MS-CHAPv2 crack |publisher=[[The Register]] |date=2012-07-31 |accessdate=2012-09-07}}</ref>\n* MPPE uses the [[RC4]] stream cipher for encryption. There is no method for authentication of the ciphertext stream and therefore the ciphertext is vulnerable to a bit-flipping attack. An attacker could modify the stream in transit and adjust single bits to change the output stream without possibility of detection. These bit flips may be detected by the protocols themselves through checksums or other means.<ref name=\"schneier1\"/>\n\n[[Extensible Authentication Protocol|EAP-TLS]] is seen as the superior authentication choice for PPTP;<ref>[http://technet.microsoft.com/en-us/library/cc739638%28WS.10%29.aspx Choosing [[EAP-TLS]] or MS-CHAP v2 for User-Level Authentication], Microsoft TechNet, March 28, 2003</ref> however, it requires implementation of a [[public-key infrastructure]] for both client and server certificates. As such, it may not be a viable authentication option for some remote access installations.\n\n==See also==\n*[[IPsec]]\n*[[Layer 2 Tunneling Protocol|Layer 2 Tunneling Protocol (L2TP)]]\n*[[Secure Socket Tunneling Protocol|Secure Socket Tunneling Protocol (SSTP)]]\n*[[OpenVPN]], open source software application that implements VPN\n\n==References==\n{{reflist|30em}}\n\n==External links==\n* [http://www.microsoft.com/technet/archive/winntas/plan/pptpudst.mspx Windows NT: Understanding PPTP] from Microsoft\n* [http://www.schneier.com/pptp-faq.html FAQ on security flaws in Microsoft's implementation], [[Bruce Schneier]], 1998\n* [http://www.schneier.com/paper-pptpv2.html Cryptanalysis of Microsoft's PPTP Authentication Extensions] (MS-CHAPv2), [[Bruce Schneier]], 1999\n\n{{VPN}}\n[[Category:Broken cryptography algorithms]]\n[[Category:Transport layer protocols]]\n[[Category:Tunneling protocols]]"}]}}}}