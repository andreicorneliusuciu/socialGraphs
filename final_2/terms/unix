{"batchcomplete":"","query":{"normalized":[{"from":"unix","to":"Unix"}],"pages":{"21347364":{"pageid":21347364,"ns":0,"title":"Unix","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{pp-move-indef|small=yes}}\n{{Use dmy dates|date=August 2012}}\n{{Infobox OS\n| name               = Unix\n| logo               = \n| screenshot         = Unix history-simple.svg\n| caption            = Evolution of Unix and Unix-like systems\n| website            = {{URL|http://unix.org}}\n| developer          = [[Ken Thompson]], [[Dennis Ritchie]], [[Brian Kernighan]], [[Douglas McIlroy]], and [[Joe Ossanna]] at [[Bell Labs]]\n| source_model       = Historically [[Closed-source software|closed-source]], while some Unix projects (including [[Berkeley Software Distribution|BSD]] family and [[Illumos]]) are [[open-source]]\n| programmed_in      = [[C (programming language)|C]]  and [[assembly language]]\n| kernel_type        = [[Monolithic Kernel|Monolithic]]\n| ui                 = [[Command-line interface]] and [[Graphical user interface|Graphical]] ([[X Window System]])\n| language           = English\n| family             = Unix\n| released           = Development started in {{start date and age|df=yes|1969}}<br />First manual published [[Research Unix|internally]] in {{start date|1971|11|df=yes}}<ref name=\"reader\">{{cite techreport |first1=M. D. |last1=McIlroy |authorlink1=Doug McIlroy |year=1987 |url=http://www.cs.dartmouth.edu/~doug/reader.pdf |title=A Research Unix reader: annotated excerpts from the Programmer's Manual, 1971\u20131986 |series=CSTR |number=139 |institution=Bell Labs}}</ref><br />Announced outside Bell Labs in {{start date|1973|10|df=yes}}<ref>{{cite journal |first1=D. M. |last1=Ritchie |first2=K. |last2=Thompson |year=1974 |url=https://www.bell-labs.com/usr/dmr/www/cacm.pdf |title=The UNIX Time-Sharing System |journal=CACM |volume=17 |issue=7 |pages=365\u2013375}}</ref>\n| license            = Varies; some versions are [[Proprietary software|proprietary]], others are [[free software|free]]/[[open-source software]]\n| working_state      = Current\n}}\n\n'''Unix''' ({{IPAc-en|\u02c8|j|u:|.|n|\u026a|k|s}}; trademarked as '''UNIX''') is a family of [[Computer multitasking|multitasking]], [[multiuser]] computer [[operating system]]s that derive from the original [[AT&T Corporation|AT&T]] Unix, developed in the 1970s at the [[Bell Labs]] research center by [[Ken Thompson]], [[Dennis Ritchie]], and others.<ref name=\"Ritchie\">{{cite journal | last = Ritchie | first = D.M. | authorlink =  |author2=Thompson, K. | title = The UNIX Time-Sharing System | journal = Bell System Tech. J. | volume = 57 | issue = 6 | pages = 1905\u20131929 | publisher = American Tel. & Tel. | location = USA | date = July 1978 | url = https://archive.org/details/bstj57-6-1905 | accessdate = December 9, 2012 | doi = 10.1002/j.1538-7305.1978.tb02136.x}}</ref>\n\nInitially intended for use inside the [[Bell System]], AT&T licensed Unix to outside parties from the late 1970s, leading to a variety of both academic and commercial variants of Unix from vendors such as the [[University of California, Berkeley]] ([[Berkeley Software Distribution|BSD]]), [[Microsoft]] ([[Xenix]]), [[IBM]] ([[AIX]]) and [[Sun Microsystems]] ([[Solaris (operating system)|Solaris]]). AT&T finally sold its rights in Unix to [[Novell]] in the early 1990s, which then sold its Unix business to the [[Santa Cruz Operation]] (SCO) in 1995,<ref>{{Cite web|title = Novell Completes Sale of UnixWare Business to The Santa Cruz Operation {{!}} Micro Focus|url = http://www.novell.com/news/press/archive/1995/12/pr95274.html|website = www.novell.com|accessdate = 2015-12-20}}</ref> but the UNIX trademark passed to the industry standards consortium [[The Open Group]], which allows the use of the mark for certified operating systems compliant with the [[Single UNIX Specification]] (SUS). Among these is [[Apple Inc.|Apple]]'s [[macOS]],<ref>[http://www.opengroup.org/openbrand/register/brand3602.htm Apple Inc. - UNIX 03] Register of Certified Products, The Open Group</ref> which is the Unix version with the largest installed base as of 2014.\n\nFrom the power user's or programmer's perspective, Unix systems are characterized by a modular design that is sometimes called the \"[[Unix philosophy]]\", meaning that the operating system provides a set of simple tools that each perform a limited, well-defined function,<ref>{{cite book |title=The Art of Unix Programming |first=Eric |last=Raymond |authorlink=Eric S. Raymond |date=2003-09-19 |isbn=0-13-142901-9 |publisher=Addison-Wesley |url=http://www.catb.org/~esr/writings/taoup/html/ |accessdate=2009-02-09}}</ref> with a unified [[Unix filesystem|filesystem]] as the main means of communication<ref name=\"Ritchie\"/> and a [[Unix shell|shell]] scripting and command language to combine the tools to perform complex workflows.  Aside from the modular design, Unix also distinguishes itself from its predecessors as the first [[Software portability|portable]] operating system: almost the entire operating system is written in the [[C (programming language)|C programming language]]<ref name=\"dottcl\">{{cite web |url = https://www.bell-labs.com/usr/dmr/www/chist.pdf|title = The Development of the C Language|last = Ritchie|first = Dennis M.|authorlink = Dennis Ritchie|date = January 1993|accessdate = 20 December 2015|format = PDF}}</ref> that allowed Unix to reach numerous platforms.\n\nMany [[Unix-like|clones of Unix]] have arisen over the years, of which [[Linux]] is the most popular, having displaced [[Single UNIX Specification|SUS]]-certified Unix on many server platforms since its inception in the early 1990s.\n\n== Overview ==\n[[File:Version 7 Unix SIMH PDP11 Emulation DMR.png|thumb|[[Version 7 Unix]], the [[Research Unix]] ancestor of all modern Unix systems]]\n\nUnix was originally meant to be a convenient platform for programmers developing software to be run on it and on other systems, rather than for non-programmer users.<ref>{{cite web|url=http://www.faqs.org/docs/artu/ch03s01.html|title=The Elements of Operating-System Style}}</ref><ref>{{cite web |quote=UNIX was created by software developers for software developers, to give themselves an environment they could completely manipulate.|url=https://archive.org/stream/Whole_Earth_Software_Catalog_1984_Point/Whole_Earth_Software_Catalog_1984_Point_djvu.txt |title=Tandy/Radio Shack Book: Whole Earth Software Catalog |year=1984}}</ref>  The system grew larger as the operating system started spreading in academic circles, as users added their own tools to the system and shared them with colleagues.<ref>{{cite book | last1 = Powers | first1 = Shelley | last2 = Peek | first2 = Jerry | last3 = O'Reilly | first3 = Tim | last4 = Loukides | first4 = Mike | title = Unix Power Tools | year = 2002 | isbn = 0-596-00330-7}}</ref>\n\nUnix was designed to be [[porting|portable]], [[computer multitasking|multi-tasking]] and [[multi-user]] in a [[time-sharing]] configuration. Unix systems are characterized by various concepts: the use of [[plain text]] for storing data; a hierarchical [[file system]]; treating devices and certain types of [[inter-process communication]] (IPC) as files; and the use of a large number of [[programming tool|software tool]]s, small programs that can be strung together through a [[command-line interpreter]] using [[pipeline (Unix)|pipe]]s, as opposed to using a single monolithic program that includes all of the same functionality. These concepts are collectively known as the \"[[Unix philosophy]]\". [[Brian Kernighan]] and [[Rob Pike]] summarize this in ''[[The Unix Programming Environment]]'' as \"the idea that the power of a system comes more from the relationships among programs than from the programs themselves\".<ref>Kernighan, Brian W. Pike, Rob. ''The UNIX Programming Environment.'' 1984. viii</ref>\n\nBy the early 1980s users began seeing Unix as a potential universal operating system, suitable for computers of all sizes.<ref>{{cite news | url=https://archive.org/stream/byte-magazine-1983-10/1983_10_BYTE_08-10_UNIX#page/n133/mode/2up | title=The Unix Tutorial / Part 3: Unix in the Microcomputer Marketplace | work=BYTE | date=October 1983 | accessdate=30 January 2015 | author=Fiedler, Ryan | page=132}}</ref><ref>{{cite web |quote=The best thing about UNIX is its portability. UNIX ports across a full range of hardware\u2014from the single-user $5000 IBM PC to the $5 million Cray. For the first time, the point of stability becomes the software environment, not the hardware architecture; UNIX transcends changes in hardware technology, so programs written for the UNIX environment can move into the next generation of hardware. |title=Tandy/Radio Shack Book: Whole Earth Software Catalog |url=https://archive.org/stream/Whole_Earth_Software_Catalog_1984_Point/Whole_Earth_Software_Catalog_1984_Point_djvu.txt |year=1984}}</ref> The Unix environment and the [[client\u2013server]] program model were essential elements in the development of the [[Internet]] and the reshaping of computing as centered in [[Computer networking|networks]] rather than in individual computers.\n\nBoth Unix and the [[C (programming language)|C programming language]] were developed by AT&T and distributed to government and academic institutions, which led to both being ported to a wider variety of machine families than any other operating system.\n\nUnder Unix, the operating system consists of many utilities along with the master control program, the [[Kernel (operating system)|kernel]]. The kernel provides services to start and stop programs, handles the [[file system]] and other common \"low-level\" tasks that most programs share, and schedules access to avoid conflicts when programs try to access the same resource or device simultaneously. To mediate such access, the kernel has special rights, reflected in the division between [[user space|user space and kernel space]].\n\nThe [[microkernel]] concept was introduced in an effort to reverse the trend towards larger kernels and return to a system in which most tasks were completed by smaller utilities. In an era when a standard computer consisted of a hard disk for storage and a [[data terminal]] for input and output (I/O), the Unix file model worked quite well, as most I/O was linear. However, modern systems include networking and other new devices. As graphical user interfaces developed, the file model proved inadequate to the task of handling asynchronous events such as those generated by a [[mouse (computing)|mouse]]. In the 1980s, [[non-blocking I/O]] and the set of [[inter-process communication]] mechanisms were augmented with [[Unix domain socket]]s, [[shared memory]], [[message queue]]s, and [[semaphore (programming)|semaphore]]s. In microkernel implementations, functions such as network protocols could be moved out of the kernel, while conventional ([[Monolithic kernel|monolithic]]) Unix implementations have network protocol stacks as part of the kernel.\n\n== History ==\n{{main article|History of Unix}}\n[[File:Ken Thompson (sitting) and Dennis Ritchie at PDP-11 (2876612463).jpg|thumb|[[Ken Thompson]] (sitting) and [[Dennis Ritchie]] working together at a [[PDP-11]]]]\n\nThe pre-history of Unix dates back to the mid-1960s when the [[Massachusetts Institute of Technology]], [[Bell Labs]], and [[General Electric]] were developing an innovative [[time-sharing]] operating system called [[Multics]] for the [[GE-600 series|GE-645]] mainframe.<ref>{{cite book\n|title=Principles of operating systems: design & applications\n|last=Stuart |first=Brian L.\n|year=2009\n|publisher=Thompson Learning\n|location=Boston, Massachusetts\n|isbn=1-4188-3769-5\n|page=23\n}}</ref>\nMultics introduced many [[Multics#Novel ideas|innovations]], but had many problems. Frustrated by the size and complexity of Multics but not by the aims, Bell Labs slowly pulled out of the project. Their last researchers to leave Multics, [[Ken Thompson]], [[Dennis Ritchie]], [[Douglas McIlroy|M. D. McIlroy]], and [[Joe Ossanna|J. F. Ossanna]],<ref name=\"DRM\">{{cite web |first=Dennis M. |last=Ritchie |title=The Evolution of the Unix Time-sharing System |url=http://cm.bell-labs.com/cm/cs/who/dmr/hist.html |accessdate=2009-11-29}}</ref> decided to redo the work on a much smaller scale.\n\nThe name ''Unics'' (Uniplexed Information and Computing Service, pronounced as \"[[eunuch]]s\"), a [[word play|pun]] on ''[[Multics]]'' (Multiplexed Information and Computer Services), was initially suggested for the project in 1970: the new operating system was an emasculated Multics. [[Peter H. Salus]] credits [[Peter G. Neumann|Peter Neumann]] with the pun,<ref>{{cite book\n|title=A Quarter Century of UNIX\n|last=Salus |first=Peter H.\n|year=1994\n|publisher=Addison Wesley\n|isbn=0-201-54777-5\n|page=9\n}}</ref> while [[Brian Kernighan]] claims the coining for himself, and adds that \"no one can remember\" who came up with the final spelling Unix.<ref>{{cite web |website=[[Linux Journal]] |first=Aleksey |last=Dolya |date=29 July 2003 |url=http://www.linuxjournal.com/article/7035|title=Interview with Brian Kernighan}}</ref> Dennis Ritchie also credits Kernighan.{{r|DRM}}\n\nIn 1972, Unix was rewritten in the [[C (programming language)|C programming language]].<ref name=\"Stallings\">Stallings, William. \"Operating Systems: Internals and Design Principles\" 5th ed, page 91. Pearson Education, Inc. 2005.</ref> The migration from assembly to the [[High-level programming language|higher-level language]] C resulted in much more [[Software quality#Portability|portable]] software,<ref>{{cite news | url= https://archive.org/stream/byte-magazine-1983-08/1983_08_BYTE_08-08_The_C_Language#page/n189/mode/2up | title= The History of Unix | work= BYTE | date=August 1983 | accessdate=31 January 2015 | page=188}}</ref> requiring only a relatively small amount of machine-dependent code to be replaced when porting Unix to other [[computing platform]]s. Bell Labs produced several versions of Unix that are collectively referred to as [[Research Unix]]. In 1975, the first source license for UNIX was sold to [[Donald B. Gillies|faculty]] at the [[University of Illinois at Urbana\u2013Champaign|University of Illinois]] Department of Computer Science.<ref>{{cite web |website=UBC ECE Website |first=Ken |last=Thompson |date=16 Sep 2014 |url=http://www.ece.ubc.ca/~gillies/mail/dbgillies_ken_thompson.txt|title=personal communication, Ken Thompson to Donald W. Gillies}}</ref>  UIUC graduate student [[Greg Chesson]] (who had worked on the UNIX kernel at Bell Labs) was instrumental in negotiating the terms of this license.<ref>{{cite web |website=UBC ECE Website |first=Greg |last=Chesson |date=12 Nov 2014 |url=http://www.ece.ubc.ca/~gillies/mail/greg_chesson.txt|title=Personal Communication, Greg Chesson to Donald W. Gillies}}</ref>\n\nDuring the late 1970s and early 1980s, the influence of Unix in academic circles led to large-scale adoption of Unix ([[BSD]] and [[System&nbsp;V]]) by commercial startups, including [[Sequent Computer Systems|Sequent]], [[HP-UX]], [[Solaris (operating system)|Solaris]], [[AIX operating system|AIX]], and [[Xenix]]. In the late 1980s, AT&T [[Unix System Laboratories]] and [[Sun Microsystems]] developed System&nbsp;V Release&nbsp;4 ([[SVR4]]), which was subsequently adopted by many commercial Unix vendors.\n\nIn the 1990s, Unix-like systems grew in popularity as [[Linux]] and BSD distributions were developed through collaboration by a worldwide network of programmers. In 2000, Apple released [[Darwin (operating system)|Darwin]] that became the core of the [[macOS]] operating system.<ref>{{cite web\n|url= http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/OSX_Technology_Overview/SystemTechnology/SystemTechnology.html#//apple_ref/doc/uid/TP40001067-CH207-BCICAIFJ \n|title= Loading |publisher=Developer.apple.com |accessdate=2012-08-22\n}}</ref>\n\nUnix operating systems are widely used in modern [[Server (computing)|server]]s, [[workstation]]s, and [[mobile device]]s.<ref>{{cite web|author=|url=http://www.asymco.com/2010/09/29/unixs-revenge/ |title=Unix\u2019s Revenge |publisher=asymco |date=29 September 2010 |accessdate=2010-11-09}}</ref>\n\n== Standards ==\n[[File:CDE 2012 on Linux.png|thumb|The [[Common Desktop Environment]] (CDE), part of the [[Common Open Software Environment|COSE initiative]]]]\n\nBeginning in the late 1980s, an open operating system standardization effort now known as [[POSIX]] provided a common baseline for all operating systems; [[IEEE]] based POSIX around the common structure of the major competing variants of the Unix system, publishing the first POSIX standard in 1988. In the early 1990s, a separate but very similar effort was started by an industry consortium, the [[Common Open Software Environment]] (COSE) initiative, which eventually became the [[Single UNIX Specification]] (SUS) administered by [[The Open Group]]. Starting in 1998, the Open Group and IEEE started the [[Austin Group]], to provide a common definition of POSIX and the Single UNIX Specification, which, by 2008, had become the Open Group Base Specification.\n\nIn 1999, in an effort towards compatibility, several Unix system vendors agreed on SVR4's [[Executable and Linkable Format]] (ELF) as the standard for binary and object code files. The common format allows substantial binary compatibility among Unix systems operating on the same CPU architecture.\n\nThe [[Filesystem Hierarchy Standard]] was created to provide a reference directory layout for Unix-like operating systems, and has mainly been used in Linux.\n\n== Components ==\n{{see also|List of Unix commands}}\n\nThe Unix system is composed of several components that were originally packaged together. By including the development environment, libraries, documents and the portable, modifiable source code for all of these components, in addition to the [[Kernel (computer science)|kernel]] of an operating system, Unix was a self-contained software system. This was one of the key reasons it emerged as an important teaching and learning tool and has had such a broad influence.{{according to whom|date=April 2015}}\n\nThe inclusion of these components did not make the system large{{snd}} the original V7 UNIX distribution, consisting of copies of all of the compiled binaries plus all of the source code and documentation occupied less than 10&nbsp;MB and arrived on a single nine-track [[Magnetic tape data storage|magnetic tape]]. The printed documentation, typeset from the on-line sources, was contained in two volumes.\n\nThe names and filesystem locations of the Unix components have changed substantially across the history of the system. Nonetheless, the V7 implementation is considered by many{{who|date=February 2014}} to have the canonical early structure:\n* ''Kernel''{{snd}} source code in /usr/sys, composed of several sub-components:\n** ''conf''{{snd}} configuration and machine-dependent parts, including boot code\n** ''dev''{{snd}} device drivers for control of hardware (and some pseudo-hardware)\n** ''sys''{{snd}} operating system \"kernel\", handling memory management, process scheduling, system calls, etc.\n** ''h''{{snd}} header files, defining key structures within the system and important system-specific invariables\n* ''Development environment''{{snd}} early versions of Unix contained a development environment sufficient to recreate the entire system from source code:\n** ''cc''{{snd}} [[C (programming language)|C language]] compiler (first appeared in V3 Unix)\n** ''as''{{snd}} machine-language assembler for the machine\n** ''ld''{{snd}} linker, for combining object files\n** ''lib''{{snd}} object-code libraries (installed in /lib or /usr/lib).  ''[[libc]]'', the system library with C run-time support, was the primary library, but there have always been additional libraries for such things as mathematical functions (''[[libm]]'') or database access. V7 Unix introduced the first version of the modern \"Standard I/O\" library ''stdio'' as part of the system library. Later implementations increased the number of libraries significantly.\n** ''[[make (software)|make]]''{{snd}} build manager (introduced in [[PWB/UNIX]]), for effectively automating the build process\n** ''include''{{snd}} header files for software development, defining standard interfaces and system invariants\n** ''Other languages''{{snd}} V7 Unix contained a Fortran-77 compiler, a programmable arbitrary-precision calculator (''bc'', ''dc''), and the [[awk]] scripting language; later versions and implementations contain many other language compilers and toolsets. Early BSD releases included [[Pascal (programming language)|Pascal]] tools, and many modern Unix systems also include the [[GNU Compiler Collection]] as well as or instead of a proprietary compiler system.\n** ''Other tools''{{snd}} including an object-code archive manager (''ar''), symbol-table lister (''nm''), compiler-development tools (e.g. ''[[Lex (software)|lex]]'' & ''[[yacc]]''), and debugging tools.\n* ''Commands''{{snd}} Unix makes little distinction between commands (user-level programs) for system operation and maintenance (e.g. ''cron''), commands of general utility (e.g. ''grep''), and more general-purpose applications such as the text formatting and typesetting package. Nonetheless, some major categories are:\n** ''[[Bourne shell|sh]]''{{snd}} the \"shell\" programmable [[command-line interpreter]], the primary user interface on Unix before window systems appeared, and even afterward (within a \"command window\").\n** ''Utilities''{{snd}} the core toolkit of the Unix command set, including ''cp'', ''ls'', ''grep'', ''find'' and many others. Subcategories include:\n*** ''System utilities''{{snd}} administrative tools such as ''[[mkfs]]'', ''[[fsck]]'', and many others.\n*** ''User utilities''{{snd}} environment management tools such as ''passwd'', ''kill'', and others.\n** ''Document formatting''{{snd}} Unix systems were used from the outset for document preparation and typesetting systems, and included many related programs such as ''[[nroff]]'', ''[[troff]]'', ''[[tbl]]'', ''[[eqn]]'', ''[[refer (software)|refer]]'', and ''[[Pic language|pic]]''. Some modern Unix systems also include packages such as [[TeX]] and [[Ghostscript]].\n** ''Graphics''{{snd}} the ''plot'' subsystem provided facilities for producing simple vector plots in a device-independent format, with device-specific interpreters to display such files. Modern Unix systems also generally include [[X11]] as a standard windowing system and [[GUI]], and many support [[OpenGL]].\n** ''Communications''{{snd}} early Unix systems contained no inter-system communication, but did include the inter-user communication programs ''mail'' and ''write''. V7 introduced the early inter-system communication system [[UUCP]], and systems beginning with BSD release 4.1c included [[TCP/IP]] utilities.\n* ''Documentation''{{snd}} Unix was the first{{Citation needed|date=November 2015}} operating system to include all of its documentation online in machine-readable form. The documentation included:\n** ''[[Manual page (Unix)|man]]''{{snd}} manual pages for each command, library component, [[system call]], header file, etc.\n** ''doc''{{snd}} longer documents detailing major subsystems, such as the C language and troff\n\n== Impact ==\n{{See also|Unix-like}}\n{{Unreferenced section|date=April 2014}}\n\n[[File:Ken n dennis.jpg|thumb|[[Ken Thompson]] and [[Dennis Ritchie]], principal developers of [[Research Unix]]]]\n[[File:Usenix84 1.jpg|thumb|Photo from [[USENIX]] 1984, including [[Dennis Ritchie]] (center)]]\n[[File:Plan 9 from Bell Labs (with acme).png|thumb|[[Plan 9 from Bell Labs]] extends Unix design principles, and was developed as a successor to Unix]]\n\nThe Unix system had significant impact on other operating systems. It achieved its reputation by its interactivity, by providing the software at a nominal fee for educational use, by running on inexpensive hardware, and by being easy to adapt and move to different machines. Unix was originally written in [[assembly language]] (which had been thought necessary for system implementations on early computers), but was soon rewritten in [[C (programming language)|C]], a [[high-level programming language]].<ref>{{cite web |author=Ritchie, Dennis |url=https://www.bell-labs.com/usr/dmr/www/hist.html |title=The Evolution of the Unix Time-sharing System |year=1979 |accessdate=2016-04-30 |publisher=Bell Labs |quote=Perhaps the most important watershed occurred during 1973, when the operating system kernel was rewritten in C.}}</ref> Although this followed the lead of [[Multics]] and [[Burroughs large systems|Burroughs]], it was Unix that popularized the idea.\n\nUnix had a drastically simplified file model compared to many contemporary operating systems: treating all kinds of files as simple byte arrays. The file system hierarchy contained machine services and devices (such as [[computer printer|printer]]s, [[computer terminal|terminal]]s, or [[disk drive]]s), providing a uniform interface, but at the expense of occasionally requiring additional mechanisms such as [[ioctl]] and mode flags to access features of the hardware that did not fit the simple \"stream of bytes\" model. The [[Plan 9 from Bell Labs|Plan 9]] operating system pushed this model even further and eliminated the need for additional mechanisms.\n\nUnix also popularized the hierarchical file system with arbitrarily nested subdirectories, originally introduced by Multics. Other common operating systems of the era had ways to divide a storage device into multiple directories or sections, but they had a fixed number of levels, often only one level. Several major proprietary operating systems eventually added recursive subdirectory capabilities also patterned after Multics. DEC's [[RSX-11]]M's \"group, user\" hierarchy evolved into [[Virtual Memory System|VMS]] directories, [[CP/M]]'s volumes evolved into [[MS-DOS]] 2.0+ subdirectories, and HP's [[Multi-Programming Executive|MPE]] group.account hierarchy and IBM's [[System Support Program|SSP]] and [[OS/400]] library systems were folded into broader POSIX file systems.\n\nMaking the command interpreter an ordinary user-level program, with additional commands provided as separate programs, was another Multics innovation popularized by Unix. The [[Unix shell]] used the same language for interactive commands as for scripting ([[shell script]]s&nbsp;\u2013 there was no separate job control language like IBM's [[Job Control Language|JCL]]). Since the shell and OS commands were \"just another program\", the user could choose (or even write) his own shell. New commands could be added without changing the shell itself. Unix's innovative command-line syntax for creating modular chains of producer-consumer processes ([[pipeline (Unix)|pipelines]]) made a powerful programming paradigm ([[coroutine]]s) widely available. Many later command-line interpreters have been inspired by the Unix shell.\n\nA fundamental simplifying assumption of Unix was its focus on [[newline]]-[[Delimiter|delimited]] text for nearly all file formats. There were no \"binary\" editors in the original version of Unix&nbsp;\u2013 the entire system was configured using textual shell command scripts. The common denominator in the I/O system was the byte&nbsp;\u2013 unlike [[Record-oriented filesystem|\"record-based\" file systems]]. The focus on text for representing nearly everything made Unix pipes especially useful, and encouraged the development of simple, general tools that could be easily combined to perform more complicated ''ad hoc'' tasks. The focus on text and bytes made the system far more scalable and portable than other systems. Over time, text-based applications have also proven popular in application areas, such as printing languages ([[PostScript]], [[ODF]]), and at the application layer of the [[Internet Protocol Suite|Internet protocols]], e.g., [[FTP]], [[SMTP]], [[HTTP]], [[SOAP]], and [[Session Initiation Protocol|SIP]].\n\nUnix popularized a syntax for [[regular expressions]] that found widespread use. The Unix programming interface became the basis for a widely implemented operating system interface standard (POSIX, see above).  The [[C (programming language)|C programming language]] soon spread beyond Unix, and is now ubiquitous in systems and applications programming.\n\nEarly Unix developers were important in bringing the concepts of [[Modularity (programming)|modularity]] and [[reusability]] into [[software engineering]] practice, spawning a \"software tools\" movement.  Over time, the leading developers of Unix (and programs that ran on it) established a set of cultural norms for developing software, norms which became as important and influential as the technology of Unix itself; this has been termed the [[Unix philosophy]].\n\nThe [[Internet protocol suite|TCP/IP networking protocols]] were quickly implemented on the Unix versions widely used on relatively inexpensive computers, which contributed to the [[Internet]] explosion of worldwide real-time connectivity, and which formed the basis for implementations on many other platforms.\n\nThe Unix policy of extensive on-line documentation and (for many years) ready access to all system source code raised programmer expectations, and contributed to the 1983 launch of the [[free software movement]].\n\n=== Free Unix and Unix-like variants ===\n{{See also|Operating system#Unix and Unix-like operating systems}}\n{{Multiple image\n | width = 220\n | direction = vertical\n | image1 = Debian 6.0 Console Login.png\n | image2 = FreeBSD 9.1 Console Login.png\n | footer = Console screenshots of [[Debian]] (top, a popular [[Linux distribution]]) and [[FreeBSD]] (bottom, a popular [[Unix-like]] operating system)\n}}\n\nIn 1983, [[Richard Stallman]] announced the [[GNU]] project, an ambitious effort to create a [[free software]] [[Unix-like]] system; \"free\" in the sense that everyone who received a copy would be free to use, study, modify, and redistribute it. The GNU project's own kernel development project, [[GNU Hurd]], had not produced a working kernel, but in 1991 [[Linus Torvalds]] released the [[Linux kernel]] as free software under the [[GNU General Public License]]. In addition to their use in the [[Linux]] operating system, many GNU packages&nbsp;\u2013 such as the [[GNU Compiler Collection]] (and the rest of the [[GNU toolchain]]), the [[glibc|GNU C library]] and the [[Coreutils|GNU core utilities]]&nbsp;\u2013 have gone on to play central roles in other free Unix systems as well.\n\n[[Linux distributions]], consisting of the Linux kernel and large collections of compatible software have become popular both with individual users and in business. Popular distributions include [[Red Hat Enterprise Linux]], [[Fedora (operating system)|Fedora]], [[SUSE Linux|SUSE Linux Enterprise]], [[openSUSE]], [[Debian|Debian GNU/Linux]], [[Ubuntu (operating system)|Ubuntu]], [[Linux Mint]], [[Mandriva Linux]], [[Slackware Linux]], and [[Gentoo Linux|Gentoo]].\n\nA free derivative of [[BSD]] Unix, [[386BSD]], was released in 1992 and led to the [[NetBSD]] and [[FreeBSD]] projects. With the 1994 settlement of a lawsuit brought against the University of California and Berkeley Software Design Inc. ([[USL v. BSDi]]) by [[UNIX Systems Laboratories]], it was clarified that Berkeley had the right to distribute BSD Unix for free, if it so desired. Since then, BSD Unix has been developed in several different product branches, including [[OpenBSD]] and [[DragonFly BSD]].\n\nLinux and BSD are increasingly filling the market needs traditionally served by proprietary Unix operating systems, as well as expanding into new markets such as the consumer desktop and mobile and embedded devices. Because of the modular design of the Unix model, sharing components is relatively common; consequently, most or all Unix and Unix-like systems include at least some BSD code, and some systems also include GNU utilities in their distributions.\n\nIn a 1999 interview, Dennis Ritchie voiced his opinion that Linux and BSD operating systems are a continuation of the basis of the Unix design, and are derivatives of Unix:<ref name=\"Interview_1999\">{{cite web|author=Benet, Manuel|url=http://www.linuxfocus.org/English/July1999/article79.html|title=Interview With Dennis M. Ritchie|year=1999|publisher=LinuxFocus.org}}</ref>\n\n{{quote|I think the Linux phenomenon is quite delightful, because it draws so strongly on the basis that Unix provided. Linux seems to be the among the healthiest of the direct Unix derivatives, though there are also the various BSD systems as well as the more official offerings from the workstation and mainframe manufacturers.}}\n\nIn the same interview, he states that he views both Unix and Linux as \"the continuation of ideas that were started by Ken and me and many others, many years ago.\"<ref name=\"Interview_1999\" />\n\n[[OpenSolaris]] was the open-source counterpart to [[Solaris (operating system)|Solaris]] developed by [[Sun Microsystems]], which included a [[CDDL]]-licensed kernel and a primarily [[GNU]] userland. However, [[Oracle Corporation|Oracle]] discontinued the project upon their acquisition of Sun, which prompted a group of former Sun employees and members of the OpenSolaris community to fork OpenSolaris into the [[illumos]] kernel. As of 2014, illumos remains the only active open-source System V derivative.\n\n=== ARPANET ===\nIn May 1975, RFC 681 described the development of ''Network Unix'' by the Center for Advanced Computation at the [[University of Illinois]]. The system was said to \"present several interesting capabilities as an [[ARPANET]] mini-host\". At the time Unix required a license from [[Bell Laboratories]] that at $20,000(US) was very expensive for non-[[university]] users, while an educational license cost just $150. It was noted that Bell was \"open to suggestions\" for an ARPANET-wide license.\n\nSpecific features found beneficial were the local processing facilities, [[compiler]]s, [[Text editor|editors]], a [[Roff (computer program)|document preparation system]]<!--Correct link?-->, efficient file system and access control, [[Mount (computing)|mountable]] and unmountable volumes, unified treatment of peripherals as [[Device file system|special files]], integration of the [[Network Control Program|network control program]] (NCP) within the Unix file system, treatment of [[Connection-oriented protocol|network connections]] as special files that can be accessed through standard Unix [[System call|I/O calls]], closing of all files on program exit, and the decision to be \"desirable to minimize the amount of code added to the basic Unix kernel\".\n\n== Branding ==\n{{See also|List of Unix systems}}\n[[File:UNIX-Licence-Plate.JPG|thumb|Promotional [[license plate]] by [[Digital Equipment Corporation]]]]\n[[File:HP-HP9000-C110-Workstation 10.jpg|thumb|[[HP9000]] [[workstation]] running [[HP-UX]], a certified Unix operating system]]\n\nIn October 1993, [[Novell]], the company that owned the rights to the Unix System V source at the time, transferred the [[trademark]]s of Unix to the X/Open Company (now [[The Open Group]]),<ref name=\"autogenerated2\" >{{cite web|author=Chuck Karish &nbsp; View profile &nbsp; &nbsp;More options |url=http://groups.google.com/group/comp.std.unix/msg/c9974cf0022884f8 |title=The name UNIX is now the property of X/Open&nbsp;\u2013 comp.std.unix &#124; Google Groups |publisher=Groups.google.com |accessdate=2010-11-09}}</ref> and in 1995 sold the related business operations to [[Santa Cruz Operation]] (SCO).<ref name=\"autogenerated1\" >{{cite web|url=http://www.novell.com/news/press/archive/1995/09/pr95220.html |title=HP, Novell and SCO To Deliver High-Volume UNIX OS With Advanced Network And Enterprise Services |publisher=Novell.com |date=20 September 1995 |accessdate=2010-11-09}}</ref> Whether Novell also sold the [[copyright]]s to the actual software was the subject of a 2006 federal lawsuit, [[SCO v. Novell]], which Novell won. The case was appealed, but on August 30, 2011, the United States Court of Appeals for the Tenth Circuit affirmed the trial decisions, closing the case.<ref>{{cite web|last=Jones|first=Pamela|title=SCO Files Docketing Statement and We Find Out What Its Appeal Will Be About|url=http://groklaw.net/article.php?story=20100723230825165|work=Groklaw|publisher=Groklaw.net|accessdate=12 April 2011}}</ref> Unix vendor [[SCO Group|SCO Group Inc.]] accused Novell of [[slander of title]].\n\nThe present owner of the trademark ''UNIX'' is The Open Group, an industry standards consortium. Only systems fully compliant with and certified to the [[Single UNIX Specification]] qualify as \"UNIX\" (others are called \"Unix system-like\" or \"[[Unix-like]]\").\n\nBy decree of The Open Group, the term \"UNIX\" refers more to a class of operating systems than to a specific implementation of an operating system; those operating systems which meet The Open Group's Single UNIX Specification should be able to bear the [[UNIX 98]] or [[UNIX 03]] trademarks today, after the operating system's vendor pays a substantial certification fee and annual trademark royalties to The Open Group.<ref>{{cite web|author=The Open Group|title= The Open Brand Fee Schedule|url=http://www.opengroup.org/openbrand/Brandfees.htm|accessdate=26 December 2011|quote=The right to use the UNIX Trademark requires the Licensee to pay to The Open Group an additional annual fee, calculated in accordance with the fee table set out below.}}</ref>  Systems licensed to use the UNIX trademark include [[AIX]],<ref>{{cite web|author=The Open Group|title=AIX 6 Operating System V6.1.2 with SP1 or later certification|url=http://www.opengroup.org/openbrand/register/brand3576.htm}}</ref> [[HP-UX]],<ref>{{cite web|author=The Open Group|title=HP-UX 11i V3 Release B.11.31 or later certification|url=http://www.opengroup.org/openbrand/register/brand3543.htm}}</ref> [[Inspur K-UX]],<ref>{{cite web|author=The Open Group|title=Inspur K-UX 2.0 certification|url=http://www.opengroup.org/openbrand/register/brand3596.htm}}</ref> [[IRIX]],<ref>{{cite web|author=The Open Group|title=IRIX 6.5.28 with patches (4605 and 7029) certification|url=http://www.opengroup.org/openbrand/register/brand2686.htm}}</ref> [[Solaris (operating system)|Solaris]],<ref>{{cite web|author=The Open Group|title=Oracle Solaris 11 FCS and later certification|url=http://www.opengroup.org/openbrand/register/brand3585.htm}}</ref> [[Tru64 UNIX]] (formerly \"Digital UNIX\", or [[OSF/1]]),<ref>{{cite web| url=http://www.opengroup.org/csq/repository/RID=dec%252FXU2%252F1.html| title=Hewlett-Packard Company Conformance Statement| author=Bonnie Talerico| publisher=The Open Group| accessdate=2015-12-08}}</ref> [[macOS]],<ref>{{cite web|publisher=The Open Group|url=http://www.opengroup.org/openbrand/register/brand3627.htm|title=macOS version 10.12 Sierra on Intel-based Mac computers}}</ref> and a part of [[z/OS]].<ref>{{cite web| url=https://www5.opengroup.org/csq/view.mhtml?norationale=1&noreferences=1&RID=ibm%2FXU1%2F6| title=IBM Corporation Conformance Statement| author=Vivian W. Morabito| publisher=The Open Group| accessdate=2015-12-08}}</ref> Notably, Inspur K-UX is a Linux distribution certified as UNIX&nbsp;03 compliant.<ref name=\"inspur_conformance_statement\">{{cite web| url=http://www.opengroup.org/csq/repository/RID=inspur%252FXY1%252F1.html| title=Inspur Conformance Statement| author=Xie Ruohong| publisher=The Open Group| accessdate=2015-12-08}}</ref><ref name=\"inspur_conformance_commands\">{{cite web| url=http://www.opengroup.org/csq/repository/RID=inspur%252FCX1%252F1.html| title=Inspur Conformance Statement: Commands and Utilities V4| author=Xie Ruohong| publisher=The Open Group| accessdate=2015-12-08}}</ref>\n\nSometimes a representation like ''Un*x'', ''*NIX'', or ''*N?X'' is used to indicate all operating systems similar to Unix. This comes from the use of the asterisk (''*'') and the question mark characters as wildcard indicators in many utilities. This notation is also used to describe other Unix-like systems that have not met the requirements for UNIX branding from the Open Group.\n\nThe Open Group requests that ''UNIX'' is always used as an adjective followed by a generic term such as ''system'' to help avoid the creation of a [[genericized trademark]].\n\n''Unix'' was the original formatting, but the usage of ''UNIX'' remains widespread because it was once typeset in [[small caps]] (''<span style=\"font-variant: small-caps;\">Unix</span>''). according to [[Dennis Ritchie]], when presenting the original Unix paper to the third Operating Systems Symposium of the American [[Association for Computing Machinery]] (ACM), \"we had a new typesetter and ''[[troff]]'' had just been invented and we were intoxicated by being able to produce small caps.\"<ref>{{cite web|url=http://catb.org/jargon/html/U/Unix.html |title=Unix |publisher=Catb.org |accessdate=2010-11-09}}</ref> Many of the operating system's predecessors and contemporaries used all-uppercase lettering, so many people wrote the name in upper case due to force of habit. It is not an acronym.<ref name=\"USDT\">{{cite book\n | last = Troy\n | first = Douglas\n | authorlink =\n | title = UNIX Systems\n | publisher = Benjamin/Cumming Publishing Company\n | series = Computing Fundamentals\n | year = 1990\n | pages = 4\n | isbn = 0-201-19827-4\n}}</ref>\n\nSeveral plural forms of Unix are used casually to refer to multiple brands of Unix and Unix-like systems. Most common is the conventional ''Unixes'', but ''Unices'', treating Unix as a [[Latin]] noun of the [[Latin declension#Third declension (i)|third declension]], is also popular. The pseudo-[[Anglo-Saxon language|Anglo-Saxon]] plural form ''Unixen'' is not common, although occasionally seen. Trademark names can be registered by different entities in different countries and trademark laws in some countries allow the same trademark name to be controlled by two different entities if each entity uses the trademark in easily distinguishable categories. The result is that Unix has been used as a brand name for various products including book shelves, ink pens, bottled glue, diapers, hair driers and food containers.<ref>{{cite web|url=http://cm.bell-labs.com/cm/cs/who/dmr/otherunix.html |title=Autres Unix, autres moeurs (OtherUnix) |publisher=Cm.bell-labs.com |date=1 April 2000 |accessdate=2010-11-09}}</ref>\n\n== See also ==\n{{Wikipedia books|Unix}}\n* [[Comparison of operating systems]] and [[Comparison of open-source and closed-source software|open-source and closed-source software]]\n* [[List of operating systems]], [[List of Unix systems|Unix systems]], and [[List of Unix utilities|Unix utilities]]\n* [[Usage share of operating systems|Market share of operating systems]]\n* [[Operating systems timeline]]\n* [[Plan 9 from Bell Labs]]\n* [[Unix time]]\n* [[Year 2038 problem]]\n\n== References ==\n{{Reflist|30em}}\n\n== Further reading ==\n;General\n* {{cite journal|last1=Ritchie|first1=D.M.|author1link=Dennis Ritchie|last2=Thompson|first2=K.|authorlink2=Ken Thompson|title=The UNIX Time-Sharing System|journal=[[Bell System Technical Journal]]|url=http://bstj.bell-labs.com/oldfiles/year.1978/BSTJ.1978.5706-2.html|archive-url=https://web.archive.org/web/20101103053325/http://bstj.bell-labs.com/oldfiles/year.1978/BSTJ.1978.5706-2.html|date=July\u2013August 1978|volume=57|issue=6|archive-date=November 3, 2010}}\n* {{cite web | url=http://www.levenez.com/unix/ | title=UNIX History | work=www.levenez.com | accessdate= 17 March 2005 }}\n* {{cite web | url=http://www.unixguide.net/ | title=AIX, FreeBSD, HP-UX, Linux, Solaris, Tru64 | work=UNIXguide.net | accessdate= 17 March 2005 }}\n* {{cite web | url=https://lwn.net/2002/0221/bigpage.php3 | title=Linux Weekly News, February 21, 2002 | work=lwn.net | accessdate = 7 April 2006 }}\n* [[John Lions|Lions, John]]: ''Lions' {{cite web | url=http://www.lemis.com/grog/Documentation/Lions/ | title=Commentary on the Sixth Edition UNIX Operating System}} with Source Code'', Peer-to-Peer Communications, 1996; ISBN 1-57398-013-7\n;Books\n* [[Peter H. Salus|Salus, Peter H.]]: ''A Quarter Century of UNIX'', Addison Wesley, 1 June 1994; ISBN 0-201-54777-5\n;Television\n* [[Computer Chronicles]] (1985). \"[https://archive.org/details/UNIX1985 UNIX]\".\n* [[Computer Chronicles]] (1989). \"[https://archive.org/details/unix_2 Unix]\".\n\n== External links ==\n{{Wiktionary|Unix}}\n{{Commons category}}\n{{Wikibooks|Guide to Unix|Commands}}\n* [http://www.unix.org The UNIX System], at [[The Open Group]].\n* {{webarchive |url=https://web.archive.org/web/20150408054606/http://cm.bell-labs.com/cm/cs/who/dmr/hist.html |date=8 April 2015 |title=The Evolution of the Unix Time-sharing System }}\n* {{webarchive |url=https://web.archive.org/web/20140402192351/http://www.bell-labs.com/history/unix/ |date=2 April 2014 |title=The Creation of the UNIX Operating System }}\n* [http://minnie.tuhs.org/UnixTree/ The Unix Tree: files from historic releases]\n* {{dmoz|Computers/Software/Operating_Systems/Unix/}}\n* [http://man.cat-v.org/unix-1st/ The Unix 1st Edition Manuals].\n* [http://techchannel.att.com/play-video.cfm/2012/2/22/AT&T-Archives-The-UNIX-System 1982 film about Unix featuring Dennis Ritchie, Ken Thompson, Brian Kernighan, Alfred Aho, and more]\n* [http://www.darwinsys.com/history/hist.html A History of UNIX before Berkeley: UNIX Evolution: 1975-1984]\n* [https://archive.org/stream/byte-magazine-1986-09/1986_09_BYTE_11-09_The_68000_Family#page/n171/mode/2up BYTE Magazine, September 1986: UNIX and the MC68000]{{snd}} a software perspective on the MC68000 CPU architecture and UNIX compatibility\n\n{{Unix commands}}\n{{unix-like}}\n{{Operating System}}\n\n{{Authority control}}\n\n[[Category:1969 software]]\n[[Category:Operating system families]]\n[[Category:Time-sharing operating systems]]\n[[Category:Unix| ]]"}]}}}}