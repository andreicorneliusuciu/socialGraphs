{"batchcomplete":"","query":{"normalized":[{"from":"Data_striping","to":"Data striping"}],"pages":{"474567":{"pageid":474567,"ns":0,"title":"Data striping","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{Other uses|Stripe (disambiguation)}}\n\nIn [[computer data storage]], '''data striping''' is the technique of segmenting logically sequential data, such as a file, so that consecutive segments are stored on different physical storage devices.\n\nStriping is useful when a processing device requests data more quickly than a single storage device can provide it. By spreading segments across multiple devices which can be accessed concurrently, total data throughput is increased. It is also a useful method for balancing I/O load across an array of disks. Striping is used across [[disk drive]]s in [[redundant array of independent disks]] (RAID) storage, [[network interface controller]]s, different computers in [[clustered file system]]s and [[grid-oriented storage]], and [[Random-access memory|RAM]] in some systems.\n\n== Method ==\nOne method of striping is done by interleaving sequential segments on storage devices in a [[round-robin scheduling|round-robin]] fashion from the beginning of the data sequence. This works well for streaming data, but subsequent random accesses will require knowledge of which device contains the data.  If the data is stored such that the physical address of each data segment is assigned a 1-to-1 mapping to a particular device,  the device to access each segment requested can be calculated from the address without knowing the offset of the data within the full sequence.\n\nOther methods might be employed in which sequential segments are not stored on sequential devices. Such non-sequential interleaving can have benefits in some [[Error detection and correction|error correction]] schemes.\n\n== Advantages and disadvantages ==\nAdvantages of striping include performance and throughput. Sequential time interleaving of data accesses allows the lesser data access throughput of each storage devices to be cumulatively multiplied by the number of storage devices employed. Increased throughput allows the data processing device to continue its work without interruption, and thereby finish its procedures more quickly. This is manifested in improved performance of the data processing.\n\nBecause different segments of data are kept on different storage devices, the failure of one device causes the corruption of the full data sequence. In effect, the [[Mean time between failures|failure rate]] of the array of storage devices is equal to the sum of the failure rate of each storage device. This disadvantage of striping can be overcome by the storage of redundant information, such as [[Parity bit|parity]], for the purpose of error correction. In such a system, the disadvantage is overcome at the cost of requiring extra storage.\n\n== Terminology ==\nThe segments of sequential data written to or read from a disk before the operation continues on the next disk are usually called ''chunks'', ''strides'' or ''stripe units'', while their logical groups forming single striped operations are called ''strips'' or ''stripes''.  The amount of data in one chunk (stripe unit), often denominated in bytes, is variously referred to as the ''chunk size'', ''stride size'', ''stripe size'', ''stripe depth'' or ''stripe length''.  The number of data disks in the array is sometimes called the ''stripe width'', but it may also refer to the amount of data within a stripe.<ref>{{cite web\n | url = https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/6/html/Storage_Administration_Guide/ch-ext4.html\n | title = Red Hat Enterprise Linux 6 Storage Administration Guide, Chapter 6. The Ext4 File System\n | date = October 9, 2014 | accessdate = February 8, 2015\n | publisher = [[Red Hat]]\n}}</ref><ref>{{cite web\n | url = http://linux.die.net/man/8/mdadm\n | title = mdadm(8) \u2013  Linux man page\n | accessdate = February 8, 2015\n | website = linux.die.net\n}}</ref><ref>{{cite web\n | url = https://raid.wiki.kernel.org/index.php/RAID_setup\n | title = Linux kernel documentation: RAID setup\n | date = November 11, 2014 | accessdate = February 8, 2015\n | website = kernel.org\n}}</ref><ref>{{cite web\n | url = http://www.xyratex.com/sites/default/files/Xyratex_White_Paper_RAID_Chunk_Size_1-0.pdf#page=8\n | title = RAID Chunk Size\n | date = January 2008 | accessdate = February 8, 2015\n | website = xyratex.com | format = PDF\n | pages = 6&ndash;7\n}}</ref>\n\nThe amount of data in one stride multiplied by the number of data disks in the array (i.e., ''stripe depth'' times ''stripe width'', which in the geometrical analogy would yield an area) is sometimes called the ''stripe size'' or ''stripe width''.<ref>[http://docs.oracle.com/cd/B10501_01/server.920/a96533/iodesign.htm \"Stripe depth is the size of the stripe, sometimes called stripe unit. Stripe width is the product of the stripe depth and the number of drives in the striped set.\"]</ref>  ''Wide striping'' occurs when chunks of data are spread across multiple arrays, possibly all the drives in the system. ''Narrow striping'' occurs when the chunks of data are spread across the drives in a single array.\n\n== Applications ==\nData striping is used in some [[database]]s, such as [[Sybase]], and in certain RAID devices under software or hardware control, such as [[IBM]]'s [[IBM 9394 RAMAC Array|9394 RAMAC Array]] subsystem. File systems of [[Computer cluster|clusters]] also use striping. [[Oracle Corporation|Oracle]] [[Automatic Storage Management]] allows ASM files to be either coarse or fine striped.\n\n; Linux LVM\n: Data striping can also be achieved with Linux's [[Logical Volume Management]] (LVM). The LVM system allows for the adjustment of coarseness of the striping pattern. LVM tools will allow implementation of data striping in conjunction with [[disk mirroring|mirroring]]; however, LVM1 will not allow adding additional disks to a striped [[logical volume|Logical Volume (LV)]]. This can be achieved with LVM2 using LVM2 format metadata.<ref>{{Cite web |url=http://tldp.org/HOWTO/LVM-HOWTO/recipethreescsistripe.html |title=Setting up LVM on three SCSI disks with striping |work=LVM HOWTO |publisher=tldp.org |accessdate=2014-01-02}}</ref>\n\n; RAID\n: In some RAID configurations, such as [[RAID&nbsp;0]], failure of a single member drive of the RAID array causes all stored data to be lost. In other RAID configurations, such as a [[RAID&nbsp;5]] that contains distributed parity and provides [[Redundancy (information theory)|redundancy]], if one member drive fails the data can be restored using the other drives in the array.\n\n== See also ==\n{{Portal|Computing}}\n\n* [[Partition alignment]]\n\n== References ==\n{{Reflist}}\n\n{{DEFAULTSORT:Data Striping}}\n[[Category:Data partitioning]]\n[[Category:RAID]]"}]}}}}