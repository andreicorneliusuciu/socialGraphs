{"batchcomplete":"","query":{"normalized":[{"from":"clean_room_design","to":"Clean room design"}],"pages":{"75034":{"pageid":75034,"ns":0,"title":"Clean room design","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{about|the design copying technique|the manufacturing or research environment|Clean room|the software development methodology|Cleanroom software engineering}}\n\n'''Clean room design''' (also known as the [[Chinese wall#Computer science|Chinese wall]] technique) is the method of copying a design by [[reverse engineering]] and then recreating it without infringing any of the [[copyright]]s associated with the original design.  Clean room design is useful as a defense against copyright infringement because it relies on independent invention. However, because independent invention is not a defense against [[patent]]s, clean room designs typically cannot be used to circumvent patent restrictions.\n\nThe term implies that the design team works in an environment that is \"clean\" or demonstrably uncontaminated by any knowledge of the proprietary techniques used by the competitor.\n\nTypically, a clean-room design is done by having someone examine the system to be reimplemented and having this person write a specification. This specification is then reviewed by a lawyer to ensure that no copyrighted material is included. The specification is then implemented by a team with no connection to the original examiners.\n\n== Examples ==\n\n[[Phoenix Technologies]] sold its clean-room implementation to various PC clone manufacturers.<ref name=\"cleanroom\">{{cite web|url=http://www.computerworld.com/s/article/65532/Reverse_Engineering?pageNumber=1 |title=Reverse-Engineering |first=Mathew |last=Schwartz |date=2001-11-12 |accessdate=2013-06-23 |publisher=computerworld.com |quote=''To protect against charges of having simply (and illegally) copied IBM's BIOS, Phoenix reverse-engineered it using what's called a \"clean room,\" or \"Chinese wall,\" approach. First, a team of engineers studied the IBM BIOS\u2014about 8KB of code\u2014and described everything it did as completely as possible without using or referencing any actual code. Then Phoenix brought in a second team of programmers who had no prior knowledge of the IBM BIOS and had never seen its code. Working only from the first team's functional specifications, the second team wrote a new BIOS that operated as specified.''}}</ref><ref name=\"Galler1995\">{{cite book|author=Bernard A. Galler|title=Software and Intellectual Property Protection: Copyright and Patent Issues for Computer and Legal Professionals|url=https://books.google.com/books?id=QACY2JCu4BUC&pg=PA130|year=1995|publisher=Greenwood Publishing Group|isbn=978-0-89930-974-3|page=130}}</ref> \n\nSeveral other PC clone companies, including [[Corona Data Systems]], [[Eagle Computer]], and Handwell Corporation, were successfully sued by IBM for copyright infringement in 1984, and were forced to re-implement their BIOS in a way which did not infringe IBM's copyrights.<ref name=infoworld3>{{Citation | last = Caruso | first = Denise | author-link = | last2 = | first2 = | author2-link = | title = IBM Wins Disputes Over PC Copyrights | newspaper = InfoWorld | pages = 15 | date = February 27, 1984 | url = https://books.google.com/books?id=gy4EAAAAMBAJ&lpg=PA15&dq=ibm%20wins%20disputes%20over%20pc%20copyrights&pg=PA15#v=onepage&q=ibm%20wins%20disputes%20over%20pc%20copyrights&f=false | archiveurl = | archivedate = | accessdate = February 28, 2011 }}</ref><ref>[http://www.nytimes.com/1984/06/09/business/eagle-s-battle-for-survival.html EAGLE'S BATTLE FOR SURVIVAL]</ref> \n\nThese 3 settlements happened before Phoenix announced in July of that year, that they were licensing their own BIOS code, expressly emphasizing the clean-room process through which Phoenix's BIOS code had been written by a programmer who did not even have prior exposure to Intel microprocessors, himself having been a [[Texas Instruments TMS9900|TMS9900]] programmer beforehand.<ref name=\"Inc.1984\">{{cite book|title=Phoenix Says Its BIOS May Foil IBM's Lawsuits|url=https://books.google.com/books?id=Bwng8NJ5fesC&pg=PA56|date=10 July 1984|publisher=Ziff Davis, Inc.|page=56|issn=0888-8507}}</ref> As late as the early 1990s, IBM was winning millions of dollars from settling BIOS copyright infringement lawsuits against some other PC clone manufacturers like Matsushita/[[Panasonic]] (1987)<ref>{{cite book|title=Matsushita, IBM settle BIOS copyright infringement dispute|url=https://books.google.com/books?id=SZ4AAehqfn0C&pg=PA67|date=2 March 1987|publisher=Computerworld|pages=67|issn=0010-4841}}</ref> and [[Kyocera]] (1993-1994), although the latter suit was for infringements between 1985 and 1990.<ref>[http://www.nytimes.com/1993/02/02/business/company-news-japanese-company-is-sued-by-ibm-over-copyrights.html Japanese Company Is Sued By I.B.M. Over Copyrights]</ref><ref name=\"DavisOda1996\">{{cite book|author1=Joseph W. S. Davis|author2=Hiroshi Oda|author3=Yoshikazu Takaishi|title=Dispute resolution in Japan|year=1996|publisher=Kluwer Law International|isbn=978-90-411-0974-3|pages=248\u2013254}}</ref>\n\nAnother clean-room design example is [[VTech]]'s successful clones of the [[Apple II]] [[Read-only memory|ROM]]s for the [[Laser 128]], the only computer model among dozens of Apple II compatibles which survived [[litigation]] brought by [[Apple Computer]].{{citation needed|date=February 2014}}\n\n[[ReactOS]] is an [[GNU General Public License|open source]] operating system made from clean-room reverse-engineered components of [[Microsoft Windows|Windows]].\n\n== Case law ==\nClean room design is usually employed as best practice, but not strictly required by law. In ''[[NEC Corp. v Intel Corp.]]'' (1990), NEC sought [[declaratory judgment]] against Intel's charges that NEC's engineers simply copied the [[microcode]] of the [[8086]] processor in their [[NEC V20]] clone. A US judge ruled that while the early, internal revisions of NEC's microcode were indeed a copyright violation, the later one, which actually went into NEC's product, although derived from the former, were sufficiently different that they could be considered free of copyright violations. While NEC themselves did not follow a strict clean room approach in the development of their clone's microcode, during the trial, they hired an independent contractor who was only given access to specifications but ended up writing code that had certain similarities to both NEC's and Intel's code. From this evidence, the judge concluded that similarity in certain routines was a matter of functional constraints resulting from the compatibility requirements, and thus were likely free of a creative element.<ref>Jorge Contreras, Laura Handley, and Terrence Yang, \"[http://jolt.law.harvard.edu/articles/pdf/v03/03HarvJLTech209.pdf NEC v. INTEL : BREAKING NEW GROUND IN THE LAW OF COPYRIGHT], ''Harvard Journal of Law & Technology'', Volume 3, Spring Issue, 1990, pp. 209-222 (particularly p. 213)</ref> Although the clean room approach had been used as preventative measure in view of possible litigation before (e.g. in the Phoenix BIOS case), the NEC v. Intel case was the first time that the clean room argument was accepted in a US court trial. A related aspect worth mentioning here is that NEC did have a license for Intel's patents governing the 8086 processor.<ref>David S. Elkins, \u201c[http://repository.jmls.edu/cgi/viewcontent.cgi?article=1423&context=jitpl NEC v. Intel: A Guide to Using \"Clean Room\" Procedures as Evidence]\u201d, Computer Law Journal, vol. 4, issue  10, (Winter 1990) pp. 453-481</ref>\n\n''[[Sony Computer Entertainment, Inc. v. Connectix Corporation]]'' was a 1999 lawsuit which established an important [[precedent]] in regard to reverse engineering.<ref>{{Cite court\n  |litigants = Sony Computer Entertainment, Inc. v. Connectix Corporation\n  |vol = 203\n  |reporter = F.3d\n  |opinion = 596\n  |court = 9th Cir.\n  |year = 2000\n  |url=http://www.law.cornell.edu/copyright/cases/203_F3d_596.htm }}</ref><ref>''[http://web.archive.org/web/20070228070634/http://www.ca9.uscourts.gov/ca9/newopinions.nsf/0/66b3a352ea33712988256952007578c2?OpenDocument Sony Computer Entertainment, Inc. v. Connectix Corporation]'', 203 F.3d 596 (9th Cir. 2000).  Web Archive.org copy, Feb 28, 2007.</ref> [[Sony]] sought damages for [[copyright infringement]] over [[Connectix]]'s [[Virtual Game Station]] emulator, alleging that its proprietary BIOS code had been copied into Connectix's product without permission. Sony won the initial judgment, but the ruling was overturned on appeal. Sony eventually purchased the rights to Virtual Game Station to prevent its further sale and development. This established a precedent addressing the legal implications of commercial reverse engineering efforts.\n\nDuring production, Connectix unsuccessfully attempted a [[Chinese wall#Computer science|Chinese wall]] approach to [[reverse engineering|reverse engineer]] the BIOS, so its engineers [[disassembler|disassembled]] the [[object code]] directly. Connectix's successful appeal maintained that the direct disassembly and observation of proprietary code was necessary because there was no other way to determine its behavior. From the ruling:\n\n<blockquote>\n''Some works are closer to the core of intended copyright protection than others. Sony's BIOS lay at a distance from the core because it contains unprotected aspects that cannot be examined without copying. The court of appeal therefore accorded it a lower degree of protection than more traditional literary works.''</blockquote>\n\n== See also ==\n* [[Code morphing]]\n\n== References ==\n<references/>\n\n== Further reading ==\n* {{cite book|author=Rachel Parker|title='Secured Facility' Solves Compatibility Conflicts|url=https://books.google.com/books?id=ljsEAAAAMBAJ&pg=PA41|date=28 September 1987|publisher=InfoWorld|pages=41|issn=0199-6649}}\n* {{cite book|author=Peter Groves|title=A Dictionary of Intellectual Property Law|url=https://books.google.com/books?id=JxczwL7ut3UC&pg=PA53|year=2011|publisher=Edward Elgar Publishing|isbn=978-1-84980-778-4|page=53}}\n* {{cite book|author=Lee Burgunder|title=Legal Aspects of Managing Technology|url=https://books.google.com/books?id=MMagWbrzJ-QC&pg=PA280|year=2010|publisher=Cengage Learning|isbn=1-4390-7981-1|pages=281\u2013285|edition=5th}}\n* {{cite book|author1=Jonathan Band|author2=Masanobu Katoh|title=Interfaces on Trial 2.0|year=2011|publisher=MIT Press|isbn=978-0-262-29446-1}}\n\n{{Design}}\n\n[[Category:Computer law]]\n[[Category:Cleanroom technology]]"}]}}}}