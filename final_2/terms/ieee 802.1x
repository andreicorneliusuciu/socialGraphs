{"batchcomplete":"","query":{"normalized":[{"from":"IEEE_802.1X","to":"IEEE 802.1X"}],"pages":{"346883":{"pageid":346883,"ns":0,"title":"IEEE 802.1X","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"{{Technical|date=September 2010}}\n'''IEEE 802.1X''' is an [[IEEE Standard]] for port-based [[Network Access Control]] (PNAC). It is part of the [[IEEE 802.1]] group of networking protocols.  It provides an [[authentication]] mechanism to devices wishing to attach to a [[Local area network|LAN]] or [[Wireless LAN|WLAN]].\n\nIEEE 802.1X defines the encapsulation of the [[Extensible Authentication Protocol]] (EAP) over [[IEEE 802]],<ref>RFC 3748, \u00a7 3.3</ref><ref>RFC 3748, \u00a7 7.12</ref> which is known as \"EAP over LAN\" or EAPOL.<ref>IEEE 802.1X-2001, \u00a7 7</ref> EAPOL was originally designed for [[IEEE 802.3]] Ethernet in 802.1X-2001, but was clarified to suit other IEEE 802 LAN technologies such as [[IEEE 802.11]] wireless and [[Fiber Distributed Data Interface]] (ISO 9314-2) in 802.1X-2004.<ref>IEEE 802.1X-2004, \u00a7 3.2.2</ref> The EAPOL protocol was also modified for use with [[IEEE 802.1AE]] (\u201cMACsec\u201d) and [[IEEE 802.1AR]] (Secure Device Identity, DevID) in 802.1X-2010<ref name=\"802.1X-2010_seciv\">IEEE 802.1X-2010, page iv</ref><ref name=\"802.1X-2010_sec5\">IEEE 802.1X-2010, \u00a7 5</ref> to support service identification and optional point to point encryption over the local LAN segment.\n\n==Overview==\n[[Image:802.1X wired protocols.png|444px|thumb|right|EAP data is first encapsulated in EAPOL frames between the Supplicant and Authenticator, then re-encapsulated between the Authenticator and the Authentication server using RADIUS or Diameter.]]\n802.1X authentication involves three parties: a supplicant, an authenticator, and an authentication server. The '''[[Supplicant (computer)|supplicant]]''' is a client device (such as a laptop) that wishes to attach to the LAN/WLAN. The term 'supplicant' is also used interchangeably to refer to the software running on the client that provides credentials to the authenticator. The '''[[authenticator]]''' is a network device, such as an Ethernet switch or wireless access point; and the '''authentication server''' is typically a host running software supporting the [[RADIUS]] and [[Extensible Authentication Protocol|EAP]] protocols. In some cases, the authentication server software may be running on the authenticator hardware.\n\nThe authenticator acts like a security guard to a protected network. The supplicant (i.e., client device) is not allowed access through the authenticator to the protected side of the network until the supplicant\u2019s identity has been validated and authorized. An analogy to this is providing a valid visa at the airport's arrival immigration before being allowed to enter the country. With 802.1X port-based authentication, the supplicant provides credentials, such as user name/password or digital certificate, to the authenticator, and the authenticator forwards the credentials to the authentication server for verification. If the authentication server determines the credentials are valid, the supplicant (client device) is allowed to access resources located on the protected side of the network.<ref>{{cite web|title=802.1X Port-Based Authentication Concepts|url=http://www.wireless-nets.com/resources/downloads/802.1x_C2.html|accessdate=2008-07-30}}</ref>\n\n==Protocol operation==\nEAPOL operates at the [[network layer]] on top of the [[data link layer]], and in [[Ethernet II framing]] protocol has an [[EtherType]] value of 0x888E.\n\n===Port entities===\n802.1X-2001 defines two logical port entities for an authenticated port\u2014the \"controlled port\" and the \"uncontrolled port\". The controlled port is manipulated by the 802.1X PAE (Port Access Entity) to allow (in the authorized state) or prevent (in the unauthorized state) network traffic ingressing and egressing to/from the controlled port. The uncontrolled port is used by the 802.1X PAE to transmit and receive EAPOL frames.\n\n802.1X-2004 defines the equivalent port entities for the supplicant; so a supplicant implementing 802.1X-2004 may prevent higher level protocols being used if it is not content that authentication has successfully completed. This is particularly useful when an EAP method providing [[mutual authentication]] is used, as the supplicant can prevent data leakage when connected to an unauthorized network.\n\n===Typical authentication progression===\nThe typical authentication procedure consists of:\n[[File:802-1X.png|thumb|Sequence diagram of the 802.1X progression]]\n# '''Initialization''' On detection of a new supplicant, the port on the switch (authenticator) is enabled and set to the \"unauthorized\" state. In this state, only 802.1X traffic is allowed; other traffic, such as the [[Internet Protocol]] (and with that [[Transmission Control Protocol|TCP]] and [[User Datagram Protocol|UDP]]), is dropped.\n# '''Initiation''' To initiate authentication the authenticator will periodically transmit EAP-Request Identity frames to a special Layer 2 address on the local network segment. The supplicant listens on this address, and on receipt of the EAP-Request Identity frame it responds with an EAP-Response Identity frame containing an identifier for the supplicant such as a User ID. The authenticator then encapsulates this Identity response in a RADIUS Access-Request packet and forwards it on to the authentication server. The supplicant may also initiate or restart authentication by sending an EAPOL-Start frame to the authenticator, which will then reply with an EAP-Request Identity frame.''\n# '''Negotiation''' ''(Technically EAP negotiation)'' The authentication server sends a reply (encapsulated in a RADIUS Access-Challenge packet) to the authenticator, containing an EAP Request specifying the EAP Method (The type of EAP based authentication it wishes the supplicant to perform). The authenticator encapsulates the EAP Request in an EAPOL frame and transmits it to the supplicant. At this point the supplicant can start using the requested EAP Method, or do an NAK (\"Negative Acknowledgement\") and respond with the EAP Methods it is willing to perform.\n# '''Authentication''' If the authentication server and supplicant agree on an EAP Method, EAP Requests and Responses are sent between the supplicant and the authentication server (translated by the authenticator) until the authentication server responds with either an EAP-Success message (encapsulated in a RADIUS Access-Accept packet), or an EAP-Failure message (encapsulated in a RADIUS Access-Reject packet). If authentication is successful, the authenticator sets the port to the \"authorized\" state and normal traffic is allowed, if it is unsuccessful the port remains in the \"unauthorized\" state. When the supplicant logs off, it sends an EAPOL-logoff message to the authenticator, the authenticator then sets the port to the \"unauthorized\" state, once again blocking all non-EAP traffic.\n\n==Implementations==\n\n===Supplicants===\n{{Main article|Supplicant (computer)}}\n\n[[Windows XP]], [[Windows Vista]] and [[Windows 7]] support 802.1X for all network connections by default. [[Windows 2000]] has support in the latest service pack (SP4) for wired connections. [[Windows Mobile]] 2003 and later operating systems also come with a native 802.1X client.\n\nAn open source project known as [[Open1X]] produces a client, [[Xsupplicant]]. This client is currently available for both Linux and Windows. The main drawbacks of the [[Open1X]] client are that it does not provide comprehensible and extensive user documentation and the fact that most Linux vendors do not provide a package for it.  The more general [[wpa_supplicant]] can be used for [[802.11]] wireless networks and wired networks.  Both support a very wide range of EAP types.<ref>{{cite web|url=http://hostap.epitest.fi/cgi-bin/viewcvs.cgi/*checkout*/hostap/wpa_supplicant/eap_testing.txt |title=eap_testing.txt from wpa_supplicant |date= |accessdate=2010-02-10}}</ref>\n\nThe [[iPhone]] and [[iPod Touch]] support 802.1X as of the release of [[iOS (Apple)|iOS]] 2.0.\n[[Android (operating system)|Android]] has support for 802.1X since the release of 1.6 Donut.\n[[Chrome OS]] has supported 802.1X since mid-2011.<ref>{{cite web|url = http://googleenterprise.blogspot.com/2011/08/computer-that-keeps-getting-better.html |title = The computer that keeps getting better |accessdate = 2013-11-27}}</ref>\n\n[[Mac OS X]] has offered native support since [[Mac OS X v10.3|10.3]].<ref>{{cite web|url = http://www.apple.com/iphone/enterprise/ |title = Apple \u2014 iPhone \u2014 Enterprise |accessdate = 2008-07-31}}</ref>\n\n[[Avenda Systems]] provides a supplicant for [[Windows]], [[Linux]] and [[Mac OS X]].  They also have a plugin for the Microsoft [[Network Access Protection|NAP]] framework.<ref>{{cite web|url=http://blogs.technet.com/b/nap/archive/2008/12/16/nap-clients-for-linux-and-macintosh-are-available.aspx |title=NAP clients for Linux and Macintosh are available|date=2008-12-16}}</ref> Avenda also offers health checking agents as well.\n\n====Windows====\n\nWindows defaults to not responding to 802.1X authentication requests for 20 minutes after a failed authentication. This can cause significant disruption to clients.\n\nThe block period can be configured using the BlockTime value in the registry.  A [[hotfix]] is required for Windows XP SP3 and Windows Vista SP2 to make the period configurable.<ref>{{cite web|url=http://support.microsoft.com/kb/957931 |title=A Windows XP-based, Windows Vista-based or Windows Server 2008-based computer does not respond to 802.1X authentication requests for 20 minutes after a failed authentication |publisher=Support.microsoft.com |date=2009-09-17 |accessdate=2010-03-23}}</ref>\n\n[[Wildcard certificate|Wildcard]] server certificates are not supported by EAPHost, the Windows component that provides EAP support in the operating system.<ref>{{cite web|url=http://technet.microsoft.com/en-gb/cc730460.aspx |title=EAPHost in Windows Vista and Longhorn (January 18, 2006) |publisher=Technet.microsoft.com |date=2007-01-18 |accessdate=2010-03-24}}</ref> The implication of this is that when using a commercial certification authority, individual certificates must be purchased.\n\n====Windows XP====\n\nWindows XP has major issues with its handling of IP address changes that result from user-based 802.1X authentication that changes the VLAN and thus subnet of clients.<ref>{{cite web|url=http://support.microsoft.com/?kbid=935638 |title=Problems when obtaining Group Policy objects, roaming profiles and logon scripts from a Windows Server 2003-based domain controller |publisher=Support.microsoft.com |date=2007-09-14 |accessdate=2010-02-10}}</ref> Microsoft has stated that it will not back port the [[Single sign-on|SSO]] feature from Vista that resolves these issues.<ref>{{cite web|url=http://forums.technet.microsoft.com/en-US/winserverNAP/thread/f68dc3f0-744a-4d0f-b85a-87f8bc531fd0/ |title=802.1X with dynamic VLAN switching \u2014 Problems with Roaming Profiles |publisher=Forums.technet.microsoft.com |date= |accessdate=2010-02-10}}</ref>\n\nIf users are not logging in with roaming profiles, a hotfix must be downloaded and installed if authenticating via PEAP with PEAP-MSCHAPv2.<ref>{{cite web|url=http://support.microsoft.com/kb/969111 |title=A Windows XP Service Pack 3-based client computer cannot use the IEEE 802.1X authentication when you use PEAP with PEAP-MSCHAPv2 in a domain |publisher=Support.microsoft.com |date=2009-04-23 |accessdate=2010-03-23}}</ref>\n\n====Windows Vista====\n\nWindows Vista based computers that are connected via an IP phone may not authenticate as expected and, as a result, the client can be placed into the wrong VLAN.  A hotfix is available to correct this.<ref name=\"Support.microsoft.com\">{{cite web|url=http://support.microsoft.com/kb/976373 |title= A computer that is connected to an IEEE 802.1X authenticated network through a VOIP phone does not connect to the correct network after you resume it from Hibernate mode or Sleep mode |publisher=Support.microsoft.com |date=2010-02-08 |accessdate=2010-03-23}}</ref>\n\n====Windows 7====\n\nWindows 7 based computers that are connected via an IP phone may not authenticate as expected and, as a result, the client can be placed into the wrong VLAN.  A hotfix is available to correct this.<ref name=\"Support.microsoft.com\"/>\n\nWindows 7 does not respond to 802.1X authentication requests after initial 802.1X authentication fails.  This can cause significant disruption to clients.  A hotfix is available to correct this.<ref>{{cite web|url=http://support.microsoft.com/kb/980295 |title=Windows 7 or Windows Server 2008 R2 does not respond to 802.1X authentication requests after the authentication fails |publisher=Support.microsoft.com |date=2010-03-08 |accessdate=2010-03-23}}</ref>\n\n====Windows PE====\n\nFor most enterprises deploying and rolling out operating systems remotely, it is worth noting that [[Windows PE]] does not natively have any support for 802.1X.  However, support can be added to WinPE 2.1<ref>{{cite web|url=http://support.microsoft.com/kb/975483 |title=Windows PE 2.1 does not support the IEEE 802.1X authentication protocol |publisher=Support.microsoft.com |date=2009-12-08 |accessdate=2010-02-10}}</ref> and WinPE 3.0<ref>{{cite web|url=http://support.microsoft.com/kb/972831 |title=The IEEE 802.1X authentication protocol is not supported in Windows Preinstall Environment (PE) 3.0 |publisher=Support.microsoft.com |date=2009-12-08 |accessdate=2010-02-10}}</ref> through hotfixes that are available from Microsoft.  Although full documentation is not yet available, preliminary documentation for the use of these hotfixes is available via a Microsoft blog.<ref>{{cite web|url=http://blogs.technet.com/deploymentguys/archive/2010/03/02/adding-support-for-802-1x-to-winpe.aspx |title=Adding Support for 802.1X to WinPE |publisher=Blogs.technet.com |date=2010-03-02 |accessdate=2010-03-03}}</ref>\n\n===Federations===\n[[eduroam]] (the international roaming service), mandates the use of 802.1X authentication when providing network access to guests visiting from other eduroam enabled institutions.<ref>{{cite web|url = http://www.eduroam.org/index.php?p=about\n |title = Eduroam \u2014 About |accessdate = 2009-11-29}}</ref>\n\n[[BT Group|BT]] (British Telecom, PLC) employs Identity Federation for authentication in services delivered to a wide variety of industries and governments.<ref>{{cite web|url = http://www.ca.com/files/SuccessStories/bt_ss_165270.pdf\n |title = BT Identity and Access Management |accessdate = 2010-08-17}}</ref>\n\n== Proprietary extensions ==\n\n=== MAB (MAC Authentication Bypass) ===\nNot all devices support 802.1X authentication.  Examples include network printers, Ethernet-based electronics like environmental sensors, cameras, and wireless phones. For those devices to be used in a protected network environment, alternative mechanisms must be provided to authenticate them.\n\nOne option would be to disable 802.1X on that port, but that leaves that port unprotected and open for abuse. Another, slightly more reliable option is to use the MAB option. When MAB is configured on a port, that port will first try to check if the connected device is 802.1X compliant, and if no reaction is received from the connected device, it will try to authenticate with the AAA server using the connected device's MAC address as username and password. The network administrator then must make provisions on the [[RADIUS]] server to authenticate those MAC-addresses, either by adding them as regular users, or implementing additional logic to resolve them in a network inventory database.\n\nMany managed Ethernet switches<ref>[http://www.cisco.com/en/US/prod/collateral/iosswrel/ps6537/ps6586/ps6638/config_guide_c17-663759.html MAC Authentication Bypass Deployment Guide], May 2011. Retrieved: 26 January, 2012</ref><ref>Dell PowerConnect 6200 series [http://support.dell.com/support/edocs/network/pc62xx/en/CLI/PDF/cli_en.pdf CLI Guide], page: 622, Revision: A06-March 2011. Retrieved: 26 Januari, 2013</ref>  offer options for this.\n\n==Vulnerabilities in 802.1X-2001 and 802.1X-2004==\n\n===Shared media===\nIn the summer of 2005, Microsoft's Steve Riley posted an article detailing a serious vulnerability in the 802.1X protocol, involving a [[Man-in-the-middle attack|man in the middle attack]]. In summary, the flaw stems from the fact that 802.1X authenticates only at the beginning of the connection, but after that authentication, it's possible for an attacker to use the authenticated port if he has the ability to physically insert himself (perhaps using a workgroup hub) between the authenticated computer and the port. Riley suggests that for wired networks the use of [[IPsec]] or a combination of IPsec and 802.1X would be more secure.<ref>{{cite web|url=http://www.microsoft.com/technet/community/columns/secmgmt/sm0805.mspx |title=Steve Riley's article on the 802.1X vulnerabilities |publisher=Microsoft.com |date=2005-08-09 |accessdate=2010-02-10}}</ref>\n\nEAPOL-Logoff frames transmitted by the 802.1X supplicant are sent in the clear and contain no data derived from the credential exchange that initially authenticated the client.<ref>IEEE 802.1X-2001, \u00a7 7.1</ref> They are therefore trivially easy to spoof on shared media, and can be used as part of a targeted [[DoS]] on both wired and wireless LANs. In an EAPOL-Logoff attack a malicious third party with access to the medium the authenticator is attached to, repeatedly sends forged EAPOL-Logoff frames from the target device's MAC Address. The authenticator (believing that the targeted device wishes to end its authentication session) closes the target's authentication session, blocking traffic ingressing from the target, denying it access to the network.\n\nThe 802.1X-2010 specification, which began as 802.1af, addresses vulnerabilities in previous 802.1X specifications, by using MACSec [[IEEE 802.1AE]] to encrypt data between logical ports (running on top of a physical port) and [[IEEE 802.1AR]] (Secure Device Identity / DevID) authenticated devices.<ref name=\"802.1X-2010_seciv\" /><ref name=\"802.1X-2010_sec5\" /><ref>{{cite web|url=http://standards.ieee.org/board/rev/110early.html |title=2 February 2010 Early Consideration Approvals |publisher=Standards.ieee.org |date= |accessdate=2010-02-10}}</ref><ref>{{cite web|url=http://www.ieee802.org/1/pages/802.1x-2010.html |title=IEEE 802.1: 802.1X-2010 - Revision of 802.1X-2004 |publisher=Ieee802.org |date=2010-01-21 |accessdate=2010-02-10}}</ref>\n\nAs a stopgap until these enhancements are widely implemented, some vendors have extended the 802.1X-2001 and 802.1X-2004 protocol, allowing multiple concurrent authentication sessions to occur on a single port. While this prevents traffic from devices with unauthenticated MAC addresses ingressing on an 802.1X authenticated port, it will not stop a malicious device snooping on traffic from an authenticated device and provides no protection against [[MAC spoofing]], or EAPOL-Logoff attacks.\n\n== Alternatives ==\nThe IETF-backed alternative is the [[Protocol for Carrying Authentication for Network Access]] (PANA), which also carries EAP, although it works at layer 3, using UDP, thus not being tied to the 802 infrastructure.<ref name=\"GoldenDedieu2007\">{{cite book|author1=Philip Golden|author2=Herv\u00e9 Dedieu|author3=Krista S. Jacobsen|title=Implementation and Applications of DSL Technology|url=https://books.google.com/books?id=Jjkd74jY47oC&pg=PA483|year=2007|publisher=Taylor & Francis|isbn=978-1-4200-1307-8|pages=483\u2013484}}</ref>\n\n==See also==\n*[[AEGIS SecureConnect]]\n*[[Extensible Authentication Protocol|EAP]]\n*[[IEEE 802.11i-2004]]\n*[[RADIUS]]\n\n==References==\n{{reflist}}\n\n==External links==\n* [http://www.ieee802.org/1/pages/802.1x-2004.html IEEE page on 802.1X]\n* [http://standards.ieee.org/getieee802/download/802.1X-2010.pdf GetIEEE802 Download 802.1X-2010]\n* [http://standards.ieee.org/getieee802/download/802.1X-2004.pdf GetIEEE802 Download 802.1X-2004]\n* [http://standards.ieee.org/getieee802/download/802.1X-2001.pdf GetIEEE802 Download 802.1X-2001]\n* [http://www.itdojo.com/synner/html/synner2/synner2_p1.htm Using 802.1X port authentication to control who can connect to your network]\n* [http://www.techrepublic.com/article/ultimate-wireless-security-guide-self-signed-certificates-for-your-radius-server/6148560 Ultimate wireless security guide: Self-signed certificates for your RADIUS server]\n* [http://wire.cs.nctu.edu.tw/wire1x/ WIRE1x]\n* [http://technet.microsoft.com/en-us/network/bb545365.aspx Wired Networking with 802.1X Authentication] on Microsoft TechNet\n* [http://www.insidesecure.com/Products/Embedded-Security-IP-Software/Protocol-Security-Toolkits/MACsec-Toolkit MACsec Toolkit, a modular source code toolkit of IEEE 802.1X-2010 (MKA, EAPOL, Network Announcements, Virtual ports...) and IEEE 802.1AE (MACsec data plane) from Inside Secure]\n\n{{IEEE standards}}\n\n[[Category:IEEE 802|IEEE 802.01x]]\n[[Category:Networking standards]]\n[[Category:Computer access control protocols]]\n[[Category:Computer network security]]"}]}}}}