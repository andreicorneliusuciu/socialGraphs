{"batchcomplete":"","query":{"normalized":[{"from":"Email_address","to":"Email address"}],"pages":{"295032":{"pageid":295032,"ns":0,"title":"Email address","revisions":[{"contentformat":"text/x-wiki","contentmodel":"wikitext","*":"[[File:Mail in foto.jpg|thumb|Example of an email address.]]\n\nAn '''email address''' identifies an email box to which [[email]] messages are delivered. A [[Non-Internet email address|wide variety of formats]] were used in early email systems, but only a single format is used today, following the standards developed for [[Internet]] mail systems since the 1980s. This article uses the term ''email address'' to refer to the '''addr-spec''' defined in RFC 5322, not to the '''address''' that is commonly used; the difference is that an address may contain a display name, a comment, or both.\n\nAn email address such as ''John.Smith@example.com'' is made up of a [[#Local-part|local-part]], an @ symbol, then a case-insensitive [[#Domain part|domain]]. Although the standard specifies the local part to be case-sensitive, in practice the mail system at ''example.com'' may treat ''John.Smith'' as equivalent to ''JohnSmith'' or even as ''johnsmith'',<ref>[https://support.google.com/mail/answer/10313?topic=14822# ''\"...you can add or remove the dots from a Gmail address without changing the actual destination address; and they'll all go to your inbox...\"''], Google.com</ref> and mail systems often limit their users' choice of name to a subset of the technically valid characters. In some cases they also limit which addresses it is possible to send mail to.\n\nWith the introduction of [[internationalized domain name]]s, efforts are progressing to permit non-ASCII characters in email addresses.\n\n== Overview ==\nThe transmission of electronic mail within the Internet uses the [[Simple Mail Transfer Protocol]] (SMTP), defined in [[Internet standard]]s RFC 5321 and RFC 5322, and extensions like RFC 6531. The mailboxes may be accessed and managed by users with the [[Post Office Protocol]] (POP) or the [[Internet Message Access Protocol]] (IMAP) with email client software that runs on a personal computer, mobile device, or with [[webmail]] systems that render the messages on a screen or on paper printouts.\n\nThe general format of an email address is ''local-part@domain'', and a specific example is ''jsmith@example.com''. An address consists of two parts. The part before the [[@]] symbol (local-part) identifies the name of a mailbox. This is often the [[username]] of the recipient, e.g., ''jsmith''. The part after the @ symbol (domain) is a domain name that represents the administrative realm for the mail box, e.g., a company's domain name, ''example.com''.\n\nWhen [[Simple Mail Transfer Protocol#Mail processing model|delivering email]], a [[mail server]] uses the [[domain name system]] (DNS) to look up the mail exchanger record (MX record) for the recipient's domain (the part of the email address on the right of @). The returned MX record contains the name of the recipient's mailserver. The MTA next connects to this server as an [[SMTP]] client.\n\nThe local part of an email address has no significance for intermediate mail relay systems other than the final mailbox host. Email senders and intermediate relay systems must not assume it to be case-insensitive, since the final mailbox host may or may not treat it as such. A single mailbox may receive mail for multiple email addresses, if configured by the administrator. Conversely, a single email address may be the alias to a distribution list to many mailboxes. [[Email alias]]es, [[electronic mailing list]]s, [[#Sub-addressing|sub-addressing]], and [[Catch-all (Mail)|catch-all]] addresses, the latter being mailboxes that receive messages regardless of the local part, are common patterns for achieving a variety of delivery goals.\n\nThe addresses found in the header fields of an email message are not directly used by mail exchangers to deliver the message. An email message also contains a message envelope that contains the information for mail routing. While envelope and header addresses may be equal, forged email addresses are often seen in [[email spam|spam]], [[phishing]], and many other Internet-based scams. This has led to several initiatives which aim to make such forgeries easier to spot.\n\nTo indicate the message recipient, an email address also may have an associated display name for the recipient, which is followed by the address specification surrounded by angled brackets, for example: ''John&nbsp;Smith&nbsp;<john.smith@example.org>''.\n\nEarlier forms of [[Non-Internet email address|email addresses on other networks than the Internet]] included other notations, such as that required by [[X.400]], and the [[UUCP]] ''bang path'' notation, in which the address was given in the form of a sequence of computers through which the message should be relayed. This was widely used for several years, but was superseded by the Internet standards promulgated by the [[Internet Engineering Task Force]] (IETF).\n\n== Syntax ==\nThe format of email addresses is <code>local-part@domain</code> where the local part may be up to 64 characters long and the [[Domain name|domain]] may have a maximum of 255 characters<ref>RFC 5321, [http://tools.ietf.org/html/rfc5321#section-4.5.3.1 section 4.5.3.1]. ''Size Limits and Minimums'' explicitly details protocol limits.</ref>\u2014but the maximum of 256-character length of a forward or reverse path restricts the entire email address to be no more than 254 characters long.<ref>RFC 3696 Errata, [https://www.rfc-editor.org/errata_search.php?eid=1690 Errata ID 1690].</ref> The formal definitions are in RFC 5322 (sections 3.2.3 and 3.4.1) and RFC 5321\u2014with a more readable form given in the informational RFC 3696<ref>Written by J. Klensin, the author of RFC 5321</ref> and the [http://www.rfc-editor.org/errata_search.php?rfc=3696 associated errata].\n\n=== Local-part ===\nThe local-part of the email address may use any of these [[ASCII]] characters:\n* uppercase and lowercase [[Basic Latin (Unicode block)|Latin]] letters <code>A</code> to <code>Z</code> and <code>a</code> to <code>z</code>;\n* digits <code>0</code> to <code>9</code>;\n* special characters <code>!#$%&'*+-/=?^_`{|}~</code>;\n* dot <code>.</code>, provided that it is not the first or last character unless quoted, and provided also that it does not appear consecutively unless quoted (e.g. <code>John..Doe@example.com</code> is not allowed but <code>\"John..Doe\"@example.com</code> is allowed);\n* space and <code>\"(),:;<>@[\\]</code> characters are allowed with restrictions (they are only allowed inside a quoted string, as described in the paragraph below, and in addition, a backslash or double-quote must be preceded by a backslash);\n* comments are allowed with parentheses at either end of the local-part; e.g. <code>john.smith(comment)@example.com</code> and <code>(comment)john.smith@example.com</code> are both equivalent to <code>john.smith@example.com</code>.\n\nIn addition to the above ASCII characters, international characters above U+007F, encoded as [[UTF-8]], are permitted by RFC 6531, though mail systems may restrict which characters to use when assigning local-parts.\n\nA quoted string may exist as a dot separated entity within the local-part, or it may exist when the outermost quotes are the outermost characters of the local-part (e.g., <code>abc.\"defghi\".xyz@example.com</code> or <code>\"abcdefghixyz\"@example.com</code> are allowed.{{Citation needed|reason=This does not necessarily follow from the BNF grammar and seems to be a misreading of RFC 3696 as it described unquoted text|date=August 2016}} Conversely, <code>abc\"defghi\"xyz@example.com</code> is not; neither is <code>abc\\\"def\\\"ghi@example.com</code>).{{Citation needed|reason=This does not necessarily follow from the BNF grammar and seems to be a misreading of RFC 3696 as it described unquoted text. In fact, RFC 3696 says that abc\\@ghi@example.com is valid, and a backslash escaped quoted-pair is allowed anywhere a quoted-string is allowed.|date=August 2016}} Quoted strings and characters however, are not commonly used.{{Citation needed|reason=While this intuitively seems true, I'd like to see a reference. In any event, it seems irrelevant when describing the syntax. The sequence xyz123 is also not commonly used, but that's immaterial.|date=August 2016}} RFC 5321 also warns that \"a host that expects to receive mail SHOULD avoid defining mailboxes where the Local-part requires (or uses) the Quoted-string form\".\n\nThe local-part <code>postmaster</code> is treated specially\u2014it is case-insensitive, and should be forwarded to the domain email administrator. Technically all other local-parts are case-sensitive, therefore <code>jsmith@example.com</code> and <code>JSmith@example.com</code> specify different mailboxes; however, many organizations treat uppercase and lowercase letters as equivalent.\n\nDespite the wide range of special characters which are technically valid; organisations, mail services, mail servers and mail clients in practice often do not accept all of them. For example, [[Windows Live Hotmail]] only allows creation of email addresses using alphanumerics, dot (<code>.</code>), underscore (<code>_</code>) and hyphen (<code>-</code>).<ref>{{cite web |url=https://signup.live.com/newuser.aspx?mkt=en-us |title=Sign up for Windows Live |accessdate=2008-07-26 }}. However, the phrase is hidden, thus one has to either check the availability of an invalid ID, e.g. ''me#1'', or resort to alternative displaying, e.g. ''no-style'' or source view, in order to read it.</ref> Common advice is to avoid using some special characters to avoid the risk of rejected emails.<ref>{{cite web |url=https://www.jochentopf.com/email/chars.html |title=Characters in the local part of an email address |accessdate=2016-03-30 }}</ref>\n\n=== Domain ===\nThe [[domain name]] part of an email address has to conform to strict guidelines: it must match the requirements for a [[hostname]], a list of dot-separated [[DNS]] labels, each label being limited to a length of 63 characters and consisting of:<ref name=rfc3696>RFC 3696, [http://tools.ietf.org/html/rfc3696#section-2 section 2]. ''Restrictions on domain (DNS) names''</ref>\n* uppercase and lowercase [[Basic Latin (Unicode block)|Latin]] letters <code>A</code> to <code>Z</code> and <code>a</code> to <code>z</code>;\n* digits <code>0</code> to <code>9</code>, provided that top-level domain names are not all-numeric;\n* hyphen <code>-</code>, provided that it is not the first or last character.\nThis rule is known as the ''LDH rule'' (letters, digits, hyphen). In addition, the domain may be an [[IP address]] literal, surrounded by square brackets <code>[]</code>, such as <code>jsmith@[192.168.2.1]</code> or <code>jsmith@[IPv6:2001:db8::1]</code>, although this is rarely seen except in [[email spam]]. [[Internationalized domain name]]s (which are encoded to comply with the requirements for a [[hostname]]) allow for presentation of non-ASCII domains. In mail systems compliant with RFC 6531 and RFC 6532 an email address may be encoded as [[UTF-8]], both a local-part as well as a domain name.\n\nComments are allowed in the domain as well as in the local-part; for example, <code>john.smith@(comment)example.com</code> and <code>john.smith@example.com(comment)</code> are equivalent to <code>john.smith@example.com</code>.\n\n=== Examples ===\n\n; Valid email addresses\n: <code>prettyandsimple@example.com</code>\n: <code>very.common@example.com</code>\n: <code>disposable.style.email.with+symbol@example.com</code>\n: <code>other.email-with-dash@example.com</code>\n: <code>x@example.com</code> (one-letter local-part)\n: <code>\"much.more unusual\"@example.com</code>\n: <code>\"very.unusual.@.unusual.com\"@example.com</code>\n: <code>\"very.(),:;<>[]\\\".VERY.\\\"very@\\\\ \\\"very\\\".unusual\"@strange.example.com</code>\n: <code>example-indeed@strange-example.com</code>\n: <code>admin@mailserver1</code> (local domain name with no [[Top-level domain|TLD]])\n: <code>#!$%&'*+-/=?^_`{}|~@example.org</code>\n: <code>\"()<>[]:,;@\\\\\\\"!#$%&'-/=?^_`{}| ~.a\"@example.org</code>\n: <code>\" \"@example.org</code> (space between the quotes)\n: <code>example@localhost</code> (sent from localhost)\n: <code>example@s.solutions</code> (see the [[List of Internet top-level domains]])\n: <code>user@localserver</code>\n: <code>user@tt</code> (although ICANN [https://www.icann.org/news/announcement-2013-08-30-en highly discourages] dotless email addresses)\n: <code>user@[IPv6:2001:DB8::1]</code>\n\n; Invalid email addresses\n: <code>Abc.example.com</code> (no @ character)\n: <code>A@b@c@example.com</code> (only one @ is allowed outside quotation marks)\n: <code>a\"b(c)d,e:f;g<h>i[j\\k]l@example.com</code> (none of the special characters in this local-part are allowed outside quotation marks)\n: <code>just\"not\"right@example.com</code> (quoted strings must be dot separated or the only element making up the local-part)\n: <code>this is\"not\\allowed@example.com</code> (spaces, quotes, and backslashes may only exist when within quoted strings and preceded by a backslash)\n: <code>this\\ still\\\"not\\\\allowed@example.com</code> (even if escaped (preceded by a backslash), spaces, quotes, and backslashes must still be contained by quotes)\n: <code>1234567890123456789012345678901234567890123456789012345678901234+x@example.com</code> (too long)\n: <code>john..doe@example.com</code> (double dot before @)\n:: with caveat: Gmail lets this through, [[Email address#Local-part the dots altogether]]\n: <code>john.doe@example..com</code> (double dot after @)\n: a valid address with a leading space\n: a valid address with a trailing space\n\n== Common local-part semantics ==\nAccording to RFC 5321 2.3.11 ''Mailbox and Address,'' \"...the local-part MUST be interpreted and assigned semantics only by the host specified in the domain of the address.\"\nThis means that no assumptions can be made about the meaning of the local-part of another mail server. It is entirely up to the configuration of the mail server.\n\n=== Local-part normalization ===\nInterpretation of the ''local part'' of an email address is dependent on the conventions and policies implemented in the mail server. For example, [[case sensitivity]] may distinguish mailboxes differing only in capitalization of characters of the local-part, although this is not very common.<ref>[http://email.about.com/od/emailbehindthescenes/f/email_case_sens.htm Are Email Addresses Case Sensitive?] by Heinz Tschabitscher</ref> [[Gmail]] ignores all dots in the local-part for the purposes of determining account identity.<ref>{{cite web|url=http://mail.google.com/support/bin/answer.py?answer=10313&topic=14822|title=Receiving someone else's mail|work=google.com}}</ref> This prevents the creation of user accounts ''your.user.name'' or ''yourusername'' when the account ''your.username'' already exists.\n\n=== Sub-addressing{{anchor|Address tags|Sub-addressing}} ===\nSome mail services support a tag appended to the local-part, such that the modified address is an alias to the unmodified one. For example, the address ''joeuser+tag@example.com'' denotes the same delivery address as ''joeuser@example.com''. RFC 5233, refers to this convention as ''sub-addressing'', but it is also known as ''plus addressing'' or ''tagged addressing''.\n\nAddresses of this form, using various separators between the base name and the tag, are supported by several email services, including [[Runbox]] (plus), [[Gmail]] (plus),<ref>{{cite web|url=http://mail.google.com/support/bin/answer.py?hl=en&answer=12096|title=Using an address alias|work=google.com}}</ref> [[Yahoo! Mail]] Plus (hyphen),<ref>https://help.yahoo.com/kb/SLN3523.html</ref> Apple's [[iCloud]] (plus), [[Outlook.com]] (plus),<ref>{{cite web|url=http://withinwindows.com/within-windows/outlookcom-supports-simpler-email-aliases-too|title=Outlook.com supports simpler \"+\" email aliases too|work=Within Windows}}</ref> [[FastMail]] (plus and Subdomain Addressing),<ref>{{cite web|url=https://www.fastmail.com/help/receive/addressing.html|title=Plus addressing and subdomain addressing|work=fastmail.fm}}</ref> [[MMDF]] (equals), [[Qmail]] and [[Courier Mail Server]] (hyphen).<ref name=control>{{cite web|title=Dot-Qmail, Control the delivery of mail messages|url=http://qmail.org/man/man5/dot-qmail.html|accessdate=27 January 2012}}</ref><ref>{{cite web|last=Sill|first=Dave|title=4.1.5. extension addresses|url=http://www.lifewithqmail.org/lwq.html#extension-addresses|work=Life with qmail|accessdate=27 January 2012}}</ref> [[Postfix (software)|Postfix]] allows configuring an arbitrary separator from the legal character set.<ref>{{cite web|url=http://www.postfix.org/postconf.5.html#recipient_delimiter|title=Postfix Configuration Parameters|work=postfix.org}}</ref>\n\nThe text of the tag may be used to apply filtering,<ref name=control /> or to create ''single-use'', or [[disposable email address]]es.<ref>Gina Trapani (2005) [http://lifehacker.com/144397/instant-disposable-gmail-addresses \"Instant disposable Gmail addresses\"]</ref>\n\nIn practice, the form validation of some web sites may reject special characters such as \"+\" in an email address \u2013 treating them, (incorrectly), as invalid characters. This can lead to an incorrect user receiving an e-mail if the \"+\" is silently stripped by a website without any warning or error messages. For example, an email intended for the user-entered email address foo+bar@example.com could be incorrectly sent to foobar@example.com. In other cases a poor user experience can occur if some parts of a site, such as a user registration page, allow the \"+\" character whilst other parts, such as a page for unsubscribing from a site's mailing list, do not.\n\n== Validation and verification ==\nEmail addresses are often requested as input to website as user identification for the purpose of [[data validation]]. While there are companies that provide services to validate an email address at the time of entry, normally using an [[Application programming interface]], there is no guarantee that it will provide accurate results.<ref>[http://www.emailanswers.com/2013/04/valid-deliverable-email-neither-valid-nor-deliverable/ When a Valid and Deliverable Email is Neither Valid nor Deliverable] Paul, Andrew. Email Answers. Retrieved 26 April 2013</ref>\n\nAn email address is generally recognized as having two parts joined with an [[at-sign]] (''@''). However, the technical specification detailed in RFC 822 and subsequent RFCs are more extensive.<ref>[http://haacked.com/archive/2007/08/21/i-knew-how-to-validate-an-email-address-until-i.aspx I Knew How To Validate An Email Address] Until I Read The RFC<!-- Bot generated title --></ref> A [[regular expression]] can be used to check for all of these criteria, except that of bracketed nested comments.<ref>[http://www.ex-parrot.com/~pdw/Mail-RFC822-Address.html Mail::RFC822::Address]<!-- Bot generated title --></ref>\n\nSyntactically correct, verified email addresses do not guarantee [[email box]] existence. Thus many mail servers use other techniques and check the mailbox existence against relevant systems such as the [[Domain Name System]] for the domain or using [[callback verification]] to check if the mailbox exists. This is however often disabled to avoid [[directory harvest attack]].\n\nAssuring an email address is of a good quality requires a combination of various validation techniques. Large websites, bulk mailers and spammers require fast algorithms that predict validity of email address. Such methods depend heavily on [[heuristic algorithm]]s and [[statistical model]]s.<ref>[http://dev.egure.com/verification-validation-techniques-email-address-quality-assurance.pdf Verification & Validation Techniques for Email Address Quality Assurance] by Jan Hornych 2011, University of Oxford</ref>\n\nMany websites evaluate the validity of email addresses differently than the standards specify, rejecting addresses containing valid characters, such as ''+'' and ''/'', or enforcing arbitrary length limitations. RFC 3696 provides specific advice for validating Internet identifiers, including email addresses.\n\nHTML5 forms implemented in many browsers, allow email address validation to be handled by the browser.<ref>{{cite web|url=http://www.w3.org/TR/html5/forms.html#e-mail-state-(type=email)|title=4.10 Forms \u2014 HTML5|work=w3.org}}</ref>\n\nEmail address internationalization provides for a much larger range of characters than many current validation algorithms allow, such as all Unicode characters above U+0080, encoded as [[UTF-8]].\n\n=== Identity validation ===\nEmail addresses are the primary means of account activation (user identification and validation on websites), but other methods are available, such as cell phone number validation, [[postal mail]] validation, fax validation. Email address validation is accomplished by the website sending an email with a special temporary hyperlink to the user-provided email address. On receipt, the user opens the link, immediately activating the account. Email addresses are also useful as means of forwarding messages from a website, e.g., user messages, user actions, to the email inbox.\n\n== Internationalization ==\nThe [[IETF]] conducts a technical and standards working group devoted to internationalization issues of email addresses, entitled ''Email Address Internationalization'' (EAI, also known as IMA, Internationalized Mail Address).<ref>{{cite web |url=http://tools.ietf.org/wg/eai/ |title=Eai Status Pages |accessdate=July 26, 2008 |work=Email Address Internationalization (Active WG) |publisher=IETF|date=March 17, 2006 \u2013 March 18, 2013}}</ref> This group produced RFC 6530, RFC 6531, RFC 6532, and RFC 6533, and continues to work on additional EAI-related RFCs.\n\nThe IETF's EAI Working group published RFC 6530 \"Overview and Framework for Internationalized Email\", which enabled non-ASCII characters to be used in both the local-parts and domain of an email address. RFC 6530 provides for email based on the [[UTF-8]] encoding, which permits the full repertoire of [[Unicode]]. RFC 6531 provides a mechanism for SMTP servers to negotiate transmission of the [[Extended SMTP#SMTPUTF8|SMTPUTF8]] content.\n\nThe basic EAI concepts involve exchanging mail in UTF-8. Though the original proposal included a downgrading mechanism for legacy systems, this has now been dropped.<ref>{{cite web |url=http://datatracker.ietf.org/wg/eai/charter/ |title=Email Address Internationalization (eai) |accessdate=November 30, 2010 |publisher=IETF}}</ref> The local servers are responsible for the local-part of the address, whereas the domain would be restricted by the rules of [[internationalized domain name]]s, though still transmitted in UTF-8. The mail server is also responsible for any mapping mechanism between the IMA form and any ASCII alias.\n\nEAI enables users to have a localized address in a native language script or character set, as well as an ASCII form for communicating with legacy systems or for script-independent use. Applications that recognize internationalized domain names and mail addresses must have facilities to convert these representations.\n\nSignificant demand for such addresses is expected in China, Japan, Russia, and other markets that have large user bases in a non-Latin-based writing system. For example, in addition to the [[.in]] top-level domain, the government of India in 2011<ref>[https://features.icann.org/2011-01-25-approval-delegation-seven-top-level-domains-representing-india-various-languages \"2011-01-25 - Approval of Delegation of the seven top-level domains representing India in various languages\"]</ref> got approval for  \".bharat\", (from ''[[Republic of India|Bh\u0101rat Ga\u1e47ar\u0101jya]]''), written in seven [[Brahmic scripts|different scripts]]<ref>{{Cite web|url=https://registry.in/Internationalized_Domain_Names_IDNs|title=Internationalized Domain Names (IDNs) {{!}} Registry.In|website=registry.in|access-date=2016-10-17}}</ref><ref>{{Cite news|url=http://economictimes.indiatimes.com/tech/internet/now-get-your-email-address-in-hindi/articleshow/53830034.cms|title=Now, get your email address in Hindi - The Economic Times|newspaper=The Economic Times|access-date=2016-10-17}}</ref> for use by Gujrati, Marathi, Bangali, Tamil, Telugu, Punjabi and Urdu speakers.\n\n=== Internationalization examples ===\nThe example addresses below would not be handled by RFC 5322 based servers, but are permitted by RFC 6530. Servers compliant with this will be able to handle these:\n* Latin Alphabet (with diacritics): Pel\u00e9@example.com\n* Greek Alphabet: \u03b4\u03bf\u03ba\u03b9\u03bc\u03ae@\u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1.\u03b4\u03bf\u03ba\u03b9\u03bc\u03ae\n* Traditional Chinese Characters: \u6211\u8cb7@\u5c4b\u4f01.\u9999\u6e2f\n* Japanese Characters: \u7532\u6590@\u9ed2\u5ddd.\u65e5\u672c\n* Cyrillic Characters: \u0447\u0435\u0431\u0443\u0440\u0430\u0448\u043a\u0430@\u044f\u0449\u0438\u043a-\u0441-\u0430\u043f\u0435\u043b\u044c\u0441\u0438\u043d\u0430\u043c\u0438.\u0440\u0444\n* Hindi Email Address: \u0938\u0902\u092a\u0930\u094d\u0915@\u0921\u093e\u091f\u093e\u092e\u0947\u0932.\u092d\u093e\u0930\u0924\n\n=== Internationalization support ===\n* [[Postfix (software)|Postfix]] [[Message transfer agent|mailer]] supports internationalized mail since 2015-02-08 with a stable release 3.0.0.<ref>{{cite web|url=http://marc.info/?l=postfix-users&m=142343583531368 |title='Postfix stable release 3.0.0' \u2013 MARC|work=marc.info}}</ref>\n* Google has support for sending emails to and from internationalized domains, but does not allow the registration of non-ASCII email addresses.<ref>{{cite web|title=A first step toward more global email|url=http://googleblog.blogspot.co.uk/2014/08/a-first-step-toward-more-global-email.html|website=Google Official Blog|publisher=Google|accessdate=6 August 2014}}</ref>\n* Microsoft added similar functionality in Outlook 2016<ref>[https://support.office.com/en-us/article/What-s-new-in-Outlook-2016-for-Windows-51c81e7a-de25-4a34-a7fe-bd79f8e48647/ \"What's new in Outlook 2016 for Windows\"], support.office.com</ref>\n* XgenPlus <ref>{{Cite web|url=https://www.xgenplus.com/idn-email-web-hosting/|title=IDN EMAIL WEB HOSTING {{!}} XgenPlus|website=www.xgenplus.com|access-date=2016-10-17}}</ref> provides FULL IDN Support and offers IDN compliant mailbox.<ref>{{Cite web|url=https://icannwiki.com/IDN|title=IDN - ICANNWiki|website=icannwiki.com|access-date=2016-10-17}}</ref>\n\n== Standards documents ==\n* RFC 821 \u2013 Simple Mail Transfer Protocol <nowiki>(Obsoleted by RFC 2821)</nowiki>\n* RFC 822 \u2013 Standard for the Format of ARPA Internet Text Messages <nowiki>(Obsoleted by RFC 2822)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=822 Errata])\n* RFC 1035 \u2013 Domain names, Implementation and specification ([http://www.rfc-editor.org/errata_search.php?rfc=1035 Errata])\n* RFC 1123 \u2013 Requirements for Internet Hosts, Application and Support <nowiki>(Updated by RFC 2821, RFC 5321)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=1123 Errata])\n* RFC 2142 \u2013 Mailbox Names for Common Services, Roles and Functions ([http://www.rfc-editor.org/errata_search.php?rfc=2142 Errata])\n* RFC 2821 \u2013 Simple Mail Transfer Protocol <nowiki>(Obsoletes RFC 821, Updates RFC 1123, Obsoleted by RFC 5321)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=2821 Errata])\n* RFC 2822 \u2013 Internet Message Format <nowiki>(Obsoletes RFC 822, Obsoleted by RFC 5322)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=2822 Errata])\n* RFC 3696 \u2013 Application Techniques for Checking and Transformation of Names ([http://www.rfc-editor.org/errata_search.php?rfc=3696 Errata])\n* RFC 4291 \u2013 IP Version 6 Addressing Architecture <nowiki>(Updated by RFC 5952)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=4291 Errata])\n* RFC 5321 \u2013 Simple Mail Transfer Protocol <nowiki>(Obsoletes RFC 2821, Updates RFC 1123)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=5321 Errata])\n* RFC 5322 \u2013 Internet Message Format <nowiki>(Obsoletes RFC 2822)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=5322 Errata])\n* RFC 5952 \u2013 A Recommendation for IPv6 Address Text Representation <nowiki>(Updates RFC 4291)</nowiki> ([http://www.rfc-editor.org/errata_search.php?rfc=5952 Errata])\n* RFC 6530 \u2013 Overview and Framework for Internationalized Email <nowiki>(Obsoletes RFC 4952, 5504, 5825)</nowiki>\n\n== See also ==\n{{Portal|internet|technology|information technology}}\n* [[Anti-spam techniques]]\n* [[Bounce address]]\n* [[Email client]]\n* [[Email mailbox]]\n* [[Email authentication]]\n* [[International email]]\n\n== References ==\n{{Reflist|30em}}\n\n{{Wikibooks|Coding Cookbook|Validate Email Address}}\n{{Wikibooks|JavaScript|Best Practices}}\n{{Commons category|Email address}}\n\n[[Category:Email|Address]]"}]}}}}